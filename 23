<?php
// export_group_answers_csv.php
require 'config.php';

$procedure_id = isset($_GET['procedure_id']) ? (int)$_GET['procedure_id'] : 0;
if ($procedure_id <= 0) {
    http_response_code(400);
    exit("Процедура не выбрана. Передайте ?procedure_id=");
}

// На всякий случай убеждаемся в UTF-8
$pdo->exec("SET NAMES 'utf8'");

// Хелпер перекодировки (если в БД встречаются win-1251 и т.п.)
function convertToUtf8($str) {
    if ($str === null) return '';
    if (mb_detect_encoding($str, 'UTF-8', true)) return $str;
    return mb_convert_encoding($str, 'UTF-8', 'Windows-1251,ISO-8859-5,UTF-8');
}

// Отображаемые названия ролей
$roleNames = [
    'self'        => 'Сам',
    'manager'     => 'Руководитель',
    'colleague'   => 'Коллега',
    'subordinate' => 'Подчиненный',
];

// Интерпретации шкалы
function scoreLabel($score) {
    if ($score === null) return '';
    if ($score < 0)      return 'недостаточно информации';
    switch ((int)$score) {
        case 0: return 'редко';
        case 1: return 'иногда';
        case 2: return 'часто';
        case 3: return 'почти всегда';
        default: return (string)$score;
    }
}

// Проверим, что процедура существует (опционально)
$check = $pdo->prepare("SELECT id, title FROM evaluation_procedures WHERE id=?");
$check->execute([$procedure_id]);
$proc = $check->fetch();
if (!$proc) {
    http_response_code(404);
    exit("Процедура не найдена");
}

// Готовим CSV-ответ
header('Content-Type: text/csv; charset=utf-8');
header("Content-Disposition: attachment; filename=answers_detail_proc_{$procedure_id}.csv");

// BOM для Excel
$out = fopen('php://output', 'w');
fwrite($out, "\xEF\xBB\xBF");

// Заголовок CSV
$headers = [
    'Оцениваемый',
    'Роль оценщика',
    'Оценщик',
    'Категория',
    'Вопрос',
    'Балл (0–3)',
    'Интерпретация',
    'Комментарий'
];
fputcsv($out, $headers);

// Основной запрос: вытаскиваем все ответы по процедуре
// Линкуем: цель процедуры -> участники (оценщики) -> ответы -> вопросы -> ФИО оценщика и ФИО оцениваемого
$sql = "
SELECT
    tgt.fio            AS target_fio,
    ep.role            AS role_key,
    ev.fio             AS evaluator_fio,
    q.category         AS category,
    q.text             AS question_text,
    a.score            AS score,
    a.comment          AS comment
FROM evaluation_targets et
JOIN users tgt               ON tgt.id = et.user_id
JOIN evaluation_participants ep ON ep.target_id = et.id
JOIN users ev                ON ev.id = ep.evaluator_id
JOIN answers a               ON a.participant_id = ep.id
JOIN questions q             ON q.id = a.question_id
WHERE et.procedure_id = ?
ORDER BY
    tgt.fio,
    FIELD(ep.role,'manager','colleague','subordinate','self'),
    ev.fio,
    q.category,
    q.id
";

$stmt = $pdo->prepare($sql);
$stmt->execute([$procedure_id]);

while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
    $target_fio    = convertToUtf8($row['target_fio']);
    $role_key      = $row['role_key'];
    $evaluator_fio = convertToUtf8($row['evaluator_fio']);
    $category      = convertToUtf8($row['category']);
    $question      = convertToUtf8($row['question_text']);
    // Баллы могут быть -1 / NULL для «недостаточно информации»
    $score         = is_null($row['score']) ? '' : $row['score'];
    $comment       = convertToUtf8($row['comment']);

    $role_name = isset($roleNames[$role_key]) ? $roleNames[$role_key] : $role_key;
    $label     = ($score === '' ? '' : scoreLabel((int)$score));

    // Приводим пустой комментарий к пустой строке (не NULL)
    if ($comment === null) $comment = '';

    fputcsv($out, [
        $target_fio,
        $role_name,
        $evaluator_fio,
        $category,
        $question,
        $score,
        $label,
        $comment
    ]);
}

fclose($out);
exit;