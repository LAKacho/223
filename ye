
let GlobalVar = false;
let __ff_running = false;
let __ff_detect_started = false;

window.faceReady = window.faceReady || new Promise(res => { window.faceReadyResolve = res; });

(function faceFirstBootstrap(){
  const v = document.getElementById('video');
  const c = document.getElementById('canvas') || (function(){ const cc=document.createElement('canvas'); cc.id='canvas'; cc.style.display='none'; document.body.appendChild(cc); return cc; })();
  const m = document.getElementById('message') || (function(){ const d=document.createElement('div'); d.id='message'; d.style.cssText='position:fixed;right:10px;top:260px;z-index:1000;font:14px/1.3 system-ui'; document.body.appendChild(d); return d; })();
  if (!v) return;

  if (location.protocol === 'http:') { m.textContent = 'Камера работает только по HTTPS.'; return; }

  const start = async () => {
    if (__ff_running) return; __ff_running = true;
    m.textContent = 'Загружаем модели...';
    await faceapi.nets.tinyFaceDetector.loadFromUri('camera1/models/');

    if (v.srcObject) { try{ v.pause(); }catch(e){} try{ v.srcObject.getTracks().forEach(t=>t.stop()); }catch(e){} v.srcObject=null; }
    v.autoplay = false; v.muted = true; if ('playsInline' in v) v.playsInline = true;

    const stream = await navigator.mediaDevices.getUserMedia({ video:{ width:{ideal:640}, height:{ideal:480}, frameRate:30 }, audio:false });
    v.srcObject = stream;
    await new Promise(res => { if (v.readyState>=1) res(); else v.onloadedmetadata = () => res(); });
    try { await v.play(); } catch(e){}

    detect();
  };

  const detect = () => {
    if (__ff_detect_started) return; __ff_detect_started = true;
    const options = new faceapi.TinyFaceDetectorOptions({ inputSize:224, scoreThreshold:0.85 });
    let shot = false;
    m.textContent = 'Ищем лицо...';

    const timer = setInterval(async ()=>{
      if (shot) return;
      let det = null;
      try {
        det = await faceapi.detectSingleFace(v, options);
      } catch(e) {
        det = null;
      }
      if (!det){ m.textContent = 'Лицо не распознано'; return; }
      const { x,y,width,height } = det.box;
      const cx = v.videoWidth/2, cy=v.videoHeight/2;
      const fx = x+width/2, fy=y+height/2;
      if (Math.abs(fx-cx)<80 && Math.abs(fy-cy)<80){
        shot = true; clearInterval(timer);
        m.textContent = 'Делаем фото...';
        c.width = v.videoWidth; c.height = v.videoHeight;
        c.getContext('2d').drawImage(v,0,0,c.width,c.height);
        c.toBlob(async (blob)=>{
          const fd = new FormData(); fd.append('photo', blob, 'face.jpg');
          try{
            const r = await fetch('photoSave.php',{method:'POST',body:fd});
            if(!r.ok) throw new Error('HTTP '+r.status);
            const t = (await r.text()).trim();
            const ok = (t.toLowerCase()==='success' || t==='1' || t.startsWith('{'));
            if(!ok) throw new Error(t);
            m.textContent = 'Фото сохранено. Начинаем.';
            GlobalVar = true;
            try{ if(window.faceReadyResolve) window.faceReadyResolve(); }catch(e){}
            try{ window.dispatchEvent(new Event('face-ok')); }catch(e){}
          }catch(e){
            m.textContent = 'Ошибка: '+e.message;
          }
        }, 'image/jpeg', 0.8);
      } else {
        m.textContent = 'Поместите лицо в центр кадра';
      }
    },300);
  };

  if (typeof faceapi !== 'undefined') {
    if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', start);
    else start();
  }
})();

window.addEventListener('face-ok', () => { tryStartAfterPhoto(); }, { once:true });
if (window.GlobalVar === true) { tryStartAfterPhoto(); }

function tryStartAfterPhoto(){
  if (typeof startAfterPhoto === 'function') { startAfterPhoto(); return; }
  const v = document.getElementById('video');
  const stream = v && v.srcObject ? v.srcObject : null;
  if (!stream) return;
  try { startZettaRecorder(stream); } catch(e){}
}
//---------------------------------------------------------------------------

var video = document.getElementById('video');
var mediaRecorderStop=false;
var noVideo=true;

 
var qw = document.location.href;
var val=qw.search('https'); 
 


if (window.location.protocol=="http:"){ noVideo=false;}

// Получаем доступ к камере
//if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) { 
    // Не включаем аудио опцией `{ audio: true }` поскольку сейчас мы работаем только с изображениями
    
//		navigator.mediaDevices.getUserMedia({ video: { width: { ideal: 320, max: 640}, height: {ideal: 240, max: 360 }, frameRate: 60} }).then(function(stream) {
//        video.srcObject = stream;
//        video.play();
//		}) 
//		.catch(function(err) {
//  noVideo=false;
//});
//}

function startAfterPhoto() {
  const v = document.getElementById('video');
  let stream = (v && v.srcObject) ? v.srcObject : null;
  const constraints = { audio: true, video: { width: { ideal: 320, max: 640 }, height: { ideal: 240, max: 360 }, frameRate: 60 } };

  const p = stream
    ? Promise.resolve(stream)
    : (navigator.mediaDevices && navigator.mediaDevices.getUserMedia
        ? navigator.mediaDevices.getUserMedia(constraints)
        : Promise.reject('no getUserMedia'));

  p.then(s => {
    if (!stream) {
      try { v.srcObject = s; } catch(e){}
      try { v.play && v.play(); } catch(e){}
    }
    startZettaRecorder(s);
  }).catch(()=>{});
}

function startZettaRecorder(stream) {
  const mr = new MediaRecorder(stream);
  let chunks = [];
  mr.addEventListener('dataavailable', e => chunks.push(e.data));
  mr.addEventListener('stop', () => {
    const blob = new Blob(chunks, { type: 'video/webm' });
    const fd = new FormData(); fd.append('voice', blob);
    try {
      if (typeof errornomers !== 'undefined' && typeof level !== 'undefined') {
        if (errornomers < 4 && level == 5) { sendVoice(fd); }
      } else {
        sendVoice(fd);
      }
    } catch(e){}
    chunks = [];
  });

  if (typeof level === 'undefined' || level == 5) {
    mr.start();
  }

  window.addEventListener('beforeunload', () => { try{ if (mr.state!=='inactive') mr.stop(); }catch(e){} });
}

 
//-------------------------------------------
 
 
  
if (noVideo==true){   
  
	//***********************************************************


const URL = 'voice.php';
/*let div = document.createElement('div');
div.id = 'messages';
let start1 = document.createElement('button');
start1.id = 'start';
start1.innerHTML = 'Start';
let stop = document.createElement('button');
stop.id = 'stop';
stop.onclick = '';
stop.innerHTML = 'Stop';
document.body.appendChild(div);
document.body.appendChild(start1);
document.body.appendChild(stop);*/
 



	navigator.mediaDevices.getUserMedia({ audio: true, video: true})
    .then(stream => {
        const mediaRecorder = new MediaRecorder(stream);

       /*document.querySelector('#start').addEventListener('click', function(){
            mediaRecorder.start();
        });*/
        
		
		
		
		
		let audioChunks = [];
        
		mediaRecorder.addEventListener("dataavailable",function(event) {
            audioChunks.push(event.data);
        });

	
		
	/*document.querySelector('#stop').addEventListener('click', function(){
            mediaRecorder.stop();
        }); */
		
		
		
			
				
        mediaRecorder.addEventListener("stop", function() {
            const audioBlob = new Blob(audioChunks, {
                type: "video/webm"
            });

            let fd = new FormData();
            fd.append('voice', audioBlob);
           if(errornomers<4&&level==5) {sendVoice(fd);}
            audioChunks = [];
        });
    




//**************************************************************************
async function sendVoice(form) {
    let promise = await fetch(URL, {
        method: 'POST',
        body: form});
    if (promise.ok) {
        
		let response =  await promise.json();
        console.log(response.data);
        //audio.src = response.data;
        //audio.controls = true;
        //audio.autoplay = true;
        //document.querySelector('#messages').appendChild(audio);
    }
}



		
	   
	  
	  
	  






let btnPause = document.getElementById('pause1');
    var   img_dublikat; // переменная для работы с bannerdublikat
    var   fio;  //dsm
    var   gate1; //dsm
    var   gate;
    var   timeforfly1; //dsm
    var   rise; //dsm
    var   passportdate; //dsm
    var   timeforfly1; //dsm
    var   nomertkt;  //dsm
    var   nomer; //dsm
    var   now; //dsm
    var   dayfly; //dsm
    var   term; //dsm
	var   term2;
    var time2 = new Date().toLocaleTimeString();
	let bottomclic;
	let	bday;
//--------------------------------------------
 var level=1;
 var errornomer=0; //код ошибки например ошибка в ФИО = 2
 var errornomers=0; // счетчик ошибок

 var errornomer2=0; // не используется
 var dublikat=0; // принимает значение (0 нет дубликата и 1 есть дубликат)
 
  //счетчик попыток
 var hiden=0; // 1 - dsm виден, 0 не виден
 var nomer = 10; // номер паспорта для вывода на dsm
 
 let timefortestnew;
 betta();
 
 if(level==5){console.log("123", level); mediaRecorder.start();}
		
		
 if (level==5||level==2) {var i=41;timefortestnew=1560; // Время на прохождение тест
 }else{var i=60; timefortestnew=1840;}

let aeroport=[
'Anapa(AAQ)',
'Abakan(ABA)',
'Achinsk(ACS)',
'Aldan(ADH)',
'Adler(AER)',
'Amderma(AMV)',
'Astrahan(ASF)',
'Barnaul(BAX)',
'Beloreck(BCX)',
'Blagoveshhensk(BQS)',
'Bratsk(BTK)',
'Balakovo(BWO)',
'Brjansk(BZK)',
'Cherepovec(CEE)',
'Cheljabinsk(CEK)',
'Chokurdah(CKH)',
'Chulman(CNN)',
'Cheboksary(CSY)',
'Cherskij(CYX)',
'Dikson(DKS)',
'Anadyr(DYR)',
'Belgorod(EGO)',
'Enisejsk(EIE)',
'Jelista(ESL)',
'Magdagachi(GDG)',
'Magadan(GDX)',
'Gelendzhik(GDZ)',
'NizNovgorod(GOJ)',
'Groznyj(GRV)',
'Hanty-Mansi(HMA)',
'Chita(HTA)',
'Hatanga(HTG)',
'Igarka(IAA)',
'Izhevsk(IJK)',
'Irkutsk(IKT)',
'Joshkar-Ola(JOK)',
'Kemerovo(KEJ)',
'Kaliningrad(KGD)',
'Kogalym(KGP)',
'Habarovsk(KHV)',
'Krasnojarsk(KJA)',
'Kostroma(KMW)',
'Kurgan(KRO)',
'Krasnodar(KRR)',
'Kotlas(KSZ)',
'Samara(KUF)',
'Kirovsk(KVK)',
'Kirov(KVX)',
'KomsomolskAm(KXK)',
'Kyzyl(KYZ)',
'Kazan(KZN)',
'Leshukonskoe(LDG)',
'S Peterburg(LED)',
'Smolensk(LNX)',
'Mahachkala(MCX)',
'Mirnyj(MJZ)',
'Murmansk(MMK)',
'Magnitogorsk(MQF)',
'MinVody(MRV)',
'Nalchik(NAL)',
'NabChelny(NBC)',
'Neftekamsk(NEF)',
'Nerjungri(NER)',
'Neftejugansk(NFG)',
'Nizhnevartovsk(NJC)',
'Narjan-Mar(NNM)',
'Novorossijsk(NOI)',
'Nojabrsk(NOJ)',
'Novokuzneck(NOZ)',
'NUrengoj(NUX)',
'Novgorod(NVR)',
'Nadym(NYM)',
'Orel(OEL)',
'Vladikavkaz(OGZ)',
'Ohotsk(OHO)',
'Oktjabrskij(OKT)',
'Omsk(OMS)',
'Novosibirsk(OVB)',
'Perm(PEE)',
'Petrozavodsk(PES)',
'Pechora(PEX)',
'Penza(PEZ)',
'PetropavKa(PKC)',
'Pskov(PKV)',
'Pevek(PWE)',
'Poljarnyj(PYJ)',
'Raduzhnyj(RAT)',
'Orenburg(REN)',
'Rostov(ROV)',
'Saratov(RTW)',
'Rybinsk(RYB)',
'Syktyvkar(SCW)',
'Surgut(SGC)',
'Saransk(SKX)',
'Salehard(SLY)',
'Stavropol(STW)',
'Ekaterinburg(SVX)',
'Strezhevoj(SWT)',
'Tambov(TBW)',
'Tjumen(TJM)',
'Tomsk(TOF)',
'Tobolsk(TOX)',
'Tynda(TYD)',
'Uhta(UCT)',
'Ufa(UFA)',
'Ust-Ilimsk(UIK)',
'Ust-Kut(UKX)',
'Uljanovsk(ULY)',
'Uraj(URJ)',
'Kursk(URS)',
'Usinsk(USK)',
'Bugulma(UUA)',
'Ulan-Udje(UUD)',
'JuSahalinsk(UUS)',
'Vologda(VGD)',
'Vorkuta(VKT)',
'Volgodonsk(VLK)',
'Velikie Luki(VLU)',
'Volgograd(VOG)',
'Voronezh(VOZ)',
'VelUstjug(VUS)',
'Vladivostok(VVO)',
'Jakutsk(YKS)'];



let oblast=[
'Амурская<br> обл./ USSR',
'Архангельская <br>обл./ USSR',
'Астраханская <br>обл./ USSR',
'Белгородская<br> обл./ USSR',
'Брянская <br>обл./ USSR',
'Челябинская<br> обл./ USSR',
'Иркутская <br>обл./ USSR',
'Ивановская<br> обл./ USSR',
'Калининградская<br> обл./ USSR',
'Калужская <br>обл./ USSR',
'Кемеровская<br> обл./ USSR',
'Кировская<br> обл./ USSR',
'Костромская<br> обл./ USSR',
'Курганская<br>обл./ USSR',
'Курская<br> обл./ USSR',
'Ленинградская<br> обл./ USSR',
'Липецкая <br>обл./ USSR',
'Магаданская<br> обл./ USSR',
'Московская<br> обл./ USSR',
'Мурманская<br> обл./ USSR',
'Нижегородская<br> обл./ USSR',
'Новгородская<br> обл./ USSR',
'Новосибирская<br> обл./ USSR',
'Омская<br> обл./ USSR',
'Оренбургская<br> обл./ USSR',
'Орловская<br> обл./ USSR',
'Пензенская<br> обл./ USSR',
'Псковская<br> обл./ USSR',
'Ростовская<br> обл./ USSR',
'Рязанская<br> обл./ USSR',
'Сахалинская <br>обл./ USSR',
'Самарская<br> обл./ USSR',
'Саратовская<br> обл./ USSR',
'Смоленская<br> обл./ USSR',
'Свердловская<br> обл./ USSR',
'Тамбовская<br> обл./ USSR',
'Томская <br>обл./ USSR',
'Тверская<br> обл./ USSR',
'Тульская<br>обл./ USSR',
'Тюменская<br> обл./ USSR',
'Ульяновская<br> обл./ USSR',
'Владимирская<br> обл./ USSR',
'Волгоградская<br> обл./ USSR',
'Вологодская<br> обл./ USSR',
'Воронежская<br> обл./ USSR',
'Ярославская<br> обл./ USSR',]

let vegas = 
[ 
	{ 

	path: "images/pass/klm.png",
	
	term1: 0, 
	term1Top: "105px",
	term1Left: "190px",
	term1Font: "0.8em",
	
	term2: 0, 
	term2Top: "105px",
	term2Left:"325px",
	term2Font:"0.6em",
	
	author2: 0, 
	author2Top:"102px",
	author2Left:"100px",
	author2Font:"0.8em",
	
	author4: 0, 
	author4Top:"87px",
	author4Left:"330px",
	author4Font:"0.8em",
	
	gate: 0, 
	gateTop:"63px",
	gateLeft:"230px",
	gateFont:"1.5em",
	
	gate2: 0, 
	gate2Top:"-115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 0, 
	rise1Top:"63px",
	rise1Left:"85px",
	rise1Font:"1.2em",
	
	rise2: 0, 
	rise2Top:"130px",
	rise2Left:"351px",
	rise2Font:"0.8em",
	
	dayfly1: 0, 
	dayfly1Top:"63px",
	dayfly1Left:"150px",
	dayfly1Font:"1.2em",
	
	dayfly5: 0, 
	dayfly5Top:"140px",
	dayfly5Left:"385px",
	dayfly5Font:"0.8em",
	
	data_fly: 0, 
	data_flyTop:"130px",
	data_flyLeft:"220px",
	data_flyFont:"0.8em",
	
	data_fly1: 0, 
	data_fly1Top:"140px",
	data_fly1Left:"350px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 0, 
	nomertkt1Top:"175px",
	nomertkt1Left:"88px",
	nomertkt1Font:"0.6em",
	
	depart: 0, 
	departTop:"115px",
	departLeft:"325px",
	departFont:"0.6em",
	
	depart2: 0, 
	depart2Top:"125px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 0, 
	seatTop:"63px",
	seatLeft:"270px",
	seatFont:"1.2em",
	
	seat2: 0, 
	seat2Top:"63px",
	seat2Left:"385px",
	seat2Font:"1.2em",
	
	seqno: 0, 
	seqnoTop:"170px",
	seqnoLeft:"383px",
	seqnoFont:"0.8em",

	seqno2: 0, 
	seqno2Top:"160px",
	seqno2Left:"285px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/airserbia.png",
	
	term1: 1, 
	term1Top: "90px",
	term1Left: "210px",
	term1Font: "1em",
	
	term2: 1, 
	term2Top: "-110px",
	term2Left:"342px",
	term2Font:"0.6em",
	
	author2: 1, 
	author2Top:"67px",
	author2Left:"66px",
	author2Font:"1em",
	
	author4: 1, 
	author4Top:"-1195px",
	author4Left:"326px",
	author4Font:"0.8em",
	
	gate: 1, 
	gateTop:"130px",
	gateLeft:"80px",
	gateFont:"1.5em",
	
	gate2: 1, 
	gate2Top:"-115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 1, 
	rise1Top:"85px",
	rise1Left:"80px",
	rise1Font:"0.9em",
	
	rise2: 1, 
	rise2Top:"-105px",
	rise2Left:"326px",
	rise2Font:"0.8em",
	
	dayfly1: 1, 
	dayfly1Top:"130px",
	dayfly1Left:"150px",
	dayfly1Font:"1.2em",
	
	dayfly5: 1, 
	dayfly5Top:"85px",
	dayfly5Left:"210px",
	dayfly5Font:"1.0em",
	
	data_fly: 1, 
	data_flyTop:"85px",
	data_flyLeft:"145px",
	data_flyFont:"0.9em",
	
	data_fly1: 1, 
	data_fly1Top:"-105px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 1, 
	nomertkt1Top:"150px",
	nomertkt1Left:"178px",
	nomertkt1Font:"0.8em",
	
	depart: 1, 
	departTop:"-1118px",
	departLeft:"342px",
	departFont:"0.6em",
	
	depart2: 1, 
	depart2Top:"100px",
	depart2Left:"240px",
	depart2Font:"1em",
	
	seat: 1, 
	seatTop:"131px",
	seatLeft:"325px",
	seatFont:"1.2em",
	
	seat2: 1, 
	seat2Top:"-1170px",
	seat2Left:"395px",
	seat2Font:"1.2em",
	
	seqno: 1, 
	seqnoTop:"168px",
	seqnoLeft:"175px",
	seqnoFont:"0.8em",

	seqno2: 1, 
	seqno2Top:"-168px",
	seqno2Left:"279px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/aeroflot.png",
	
	term1: 2, 
	term1Top: "65px",
	term1Left: "40px",
	term1Font: "0.8em",
	
	term2: 2, 
	term2Top: "60px",
	term2Left:"322px",
	term2Font:"0.6em",
	
	author2: 2, 
	author2Top:"59px",
	author2Left:"45px",
	author2Font:"0.7em",
	
	author4: 2, 
	author4Top:"52px",
	author4Left:"326px",
	author4Font:"0.7em",
	
	gate: 2, 
	gateTop:"150px",
	gateLeft:"86px",
	gateFont:"1.5em",
	
	gate2: 2, 
	gate2Top:"127px",
	gate2Left:"326px",
	gate2Font:"1em",
	
	rise1: 2, 
	rise1Top:"70px",
	rise1Left:"157px",
	rise1Font:"1em",
	
	rise2: 2, 
	rise2Top:"110px",
	rise2Left:"326px",
	rise2Font:"0.8em",
	
	dayfly1: 2, 
	dayfly1Top:"148px",
	dayfly1Left:"130px",
	dayfly1Font:"1.5em",
	
	dayfly5: 2, 
	dayfly5Top:"127px",
	dayfly5Left:"350px",
	dayfly5Font:"1em",
	
	data_fly: 2, 
	data_flyTop:"70px",
	data_flyLeft:"210px",
	data_flyFont:"1em",
	
	data_fly1: 2, 
	data_fly1Top:"110px",
	data_fly1Left:"370px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 2, 
	nomertkt1Top:"21px",
	nomertkt1Left:"150px",
	nomertkt1Font:"0.6em",
	
	depart: 2, 
	departTop:"72px",
	departLeft:"322px",
	departFont:"0.6em",
	
	depart2: 2, 
	depart2Top:"75px",
	depart2Left:"40px",
	depart2Font:"0.8em",
	
	seat: 2, 
	seatTop:"123px",
	seatLeft:"232px",
	seatFont:"1.0em",
	
	seat2: 2, 
	seat2Top:"127px",
	seat2Left:"395px",
	seat2Font:"1em",
	
	seqno: 2, 
	seqnoTop:"152px",
	seqnoLeft:"365px",
	seqnoFont:"0.8em",

	seqno2: 2, 
	seqno2Top:"151px",
	seqno2Left:"249px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/4.png",
	
	term1: 3, 
	term1Top: "110px",
	term1Left: "90px",
	term1Font: "0.8em",
	
	term2: 3, 
	term2Top: "110px",
	term2Left:"342px",
	term2Font:"0.6em",
	
	author2: 3, 
	author2Top:"105px",
	author2Left:"94px",
	author2Font:"0.8em",
	
	author4: 3, 
	author4Top:"95px",
	author4Left:"326px",
	author4Font:"0.8em",
	
	gate: 3, 
	gateTop:"70px",
	gateLeft:"216px",
	gateFont:"1.5em",
	
	gate2: 3, 
	gate2Top:"-115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 3, 
	rise1Top:"70px",
	rise1Left:"87px",
	rise1Font:"1.2em",
	
	rise2: 3, 
	rise2Top:"105px",
	rise2Left:"326px",
	rise2Font:"0.8em",
	
	dayfly1: 3, 
	dayfly1Top:"70px",
	dayfly1Left:"150px",
	dayfly1Font:"1.2em",
	
	dayfly5: 1, 
	dayfly5Top:"142px",
	dayfly5Left:"380px",
	dayfly5Font:"0.8em",
	
	data_fly: 3, 
	data_flyTop:"125px",
	data_flyLeft:"240px",
	data_flyFont:"0.8em",
	
	data_fly1: 3, 
	data_fly1Top:"105px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 3, 
	nomertkt1Top:"168px",
	nomertkt1Left:"88px",
	nomertkt1Font:"0.8em",
	
	depart: 3, 
	departTop:"118px",
	departLeft:"342px",
	departFont:"0.6em",
	
	depart2: 3, 
	depart2Top:"120px",
	depart2Left:"90px",
	depart2Font:"0.8em",
	
	seat: 3, 
	seatTop:"70px",
	seatLeft:"263px",
	seatFont:"1.2em",
	
	seat2: 3, 
	seat2Top:"70px",
	seat2Left:"395px",
	seat2Font:"1.2em",
	
	seqno: 3, 
	seqnoTop:"168px",
	seqnoLeft:"375px",
	seqnoFont:"0.8em",

	seqno2: 3, 
	seqno2Top:"168px",
	seqno2Left:"279px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/3.png",
	
	term1: 4, 
	term1Top: "117px",
	term1Left: "100px",
	term1Font: "0.8em",
	
	term2: 4, 
	term2Top: "63px",
	term2Left:"335px",
	term2Font:"0.8em",
	
	author2: 4, 
	author2Top:"77px",
	author2Left:"87px",
	author2Font:"0.8em",
	
	author4: 4, 
	author4Top:"58px",
	author4Left:"323px",
	author4Font:"0.8em",
	
	gate: 4, 
	gateTop:"136px",
	gateLeft:"236px",
	gateFont:"1.5em",
	
	gate2: 4, 
	gate2Top:"115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 4, 
	rise1Top:"95px",
	rise1Left:"87px",
	rise1Font:"0.8em",
	
	rise2: 4, 
	rise2Top:"95px",
	rise2Left:"322px",
	rise2Font:"0.8em",
	
	dayfly1: 4, 
	dayfly1Top:"95px",
	dayfly1Left:"190px",
	dayfly1Font:"0.8em",
	
	dayfly5: 4, 
	dayfly5Top:"115px",
	dayfly5Left:"345px",
	dayfly5Font:"0.8em",
	
	data_fly: 4, 
	data_flyTop:"95px",
	data_flyLeft:"140px",
	data_flyFont:"0.8em",
	
	data_fly1: 4, 
	data_fly1Top:"95px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 4, 
	nomertkt1Top:"112px",
	nomertkt1Left:"235px",
	nomertkt1Font:"0.8em",
	
	depart: 4, 
	departTop:"72px",
	departLeft:"335px",
	departFont:"0.5em",
	
	depart2: 4, 
	depart2Top:"127px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 4, 
	seatTop:"95px",
	seatLeft:"233px",
	seatFont:"0.8em",
	
	seat2: 4, 
	seat2Top:"115px",
	seat2Left:"395px",
	seat2Font:"0.8em",
	
	seqno: 4, 
	seqnoTop:"49px",
	seqnoLeft:"415px",
	seqnoFont:"0.8em",

	seqno2: 4, 
	seqno2Top:"95px",
	seqno2Left:"293px",
	seqno2Font:"0.8em",
	
	
	},
	{ 

	path: "images/pass/2.png",
	
	term1: 5, 
	term1Top: "107px",
	term1Left: "100px",
	term1Font: "0.8em",
	
	term2: 5, 
	term2Top: "63px",
	term2Left:"335px",
	term2Font:"0.8em",
	
	author2: 5, 
	author2Top:"77px",
	author2Left:"90px",
	author2Font:"0.8em",
	
	author4: 5, 
	author4Top:"58px",
	author4Left:"323px",
	author4Font:"0.8em",
	
	gate: 5, 
	gateTop:"150px",
	gateLeft:"180px",
	gateFont:"1.7em",
	
	gate2: 5, 
	gate2Top:"125px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 5, 
	rise1Top:"95px",
	rise1Left:"90px",
	rise1Font:"0.8em",
	
	rise2: 5, 
	rise2Top:"105px",
	rise2Left:"322px",
	rise2Font:"0.8em",
	
	dayfly1: 5, 
	dayfly1Top:"95px",
	dayfly1Left:"230px",
	dayfly1Font:"0.8em",
	
	dayfly5: 5, 
	dayfly5Top:"125px",
	dayfly5Left:"345px",
	dayfly5Font:"0.8em",
	
	data_fly: 5, 
	data_flyTop:"95px",
	data_flyLeft:"170px",
	data_flyFont:"0.8em",
	
	data_fly1: 5, 
	data_fly1Top:"105px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 5, 
	nomertkt1Top:"113px",
	nomertkt1Left:"225px",
	nomertkt1Font:"0.8em",
	
	depart: 5, 
	departTop:"72px",
	departLeft:"335px",
	departFont:"0.8em",
	
	depart2: 5, 
	depart2Top:"116px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 5, 
	seatTop:"140px",
	seatLeft:"90px",
	seatFont:"0.8em",
	
	seat2: 5, 
	seat2Top:"125px",
	seat2Left:"395px",
	seat2Font:"1.2em",
	
	seqno: 5, 
	seqnoTop:"51px",
	seqnoLeft:"415px",
	seqnoFont:"0.8em",

	seqno2: 5, 
	seqno2Top:"140px",
	seqno2Left:"293px",
	seqno2Font:"0.8em",
	
	
	},
	
	{ 

	path: "images/pass/1.png",
	
	term1: 6, 
	term1Top: "117px",
	term1Left: "100px",
	term1Font: "0.8em",
	
	term2: 6, 
	term2Top: "63px",
	term2Left:"335px",
	term2Font:"0.8em",
	
	author2: 6, 
	author2Top:"77px",
	author2Left:"87px",
	author2Font:"0.8em",
	
	author4: 6, 
	author4Top:"60px",
	author4Left:"323px",
	author4Font:"0.8em",
	
	gate: 6, 
	gateTop:"136px",
	gateLeft:"236px",
	gateFont:"1.5em",
	
	gate2: 6, 
	gate2Top:"115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 6, 
	rise1Top:"95px",
	rise1Left:"87px",
	rise1Font:"0.8em",
	
	rise2: 6, 
	rise2Top:"95px",
	rise2Left:"322px",
	rise2Font:"0.8em",
	
	dayfly1: 6, 
	dayfly1Top:"95px",
	dayfly1Left:"190px",
	dayfly1Font:"0.8em",
	
	dayfly5: 6, 
	dayfly5Top:"115px",
	dayfly5Left:"345px",
	dayfly5Font:"0.8em",
	
	data_fly: 6, 
	data_flyTop:"95px",
	data_flyLeft:"140px",
	data_flyFont:"0.8em",
	
	data_fly1: 6, 
	data_fly1Top:"95px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 6, 
	nomertkt1Top:"115px",
	nomertkt1Left:"235px",
	nomertkt1Font:"0.8em",
	
	depart: 6, 
	departTop:"72px",
	departLeft:"335px",
	departFont:"0.8em",
	
	depart2: 6, 
	depart2Top:"127px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 6, 
	seatTop:"95px",
	seatLeft:"233px",
	seatFont:"0.8em",
	
	seat2: 6, 
	seat2Top:"115px",
	seat2Left:"395px",
	seat2Font:"0.8em",
	
	seqno: 6, 
	seqnoTop:"51px",
	seqnoLeft:"415px",
	seqnoFont:"0.8em",

	seqno2: 6, 
	seqno2Top:"95px",
	seqno2Left:"293px",
	seqno2Font:"0.8em",
	
	
	},
	];

 

 var arr = ['A', 'B', 'C1', 'C2', 'D', 'E', 'F']; // терминалы
 // верные данные персонажей
 var quotes = [
    ["ИВАНОВ/IVANOV ","ВЛАДИСЛАВ НИКОЛАЕВИЧ ","VLADISLAV ","IVANOV VLADISLAV"],
    ["ПЕТРОВ/PETROV ","СЕРГЕЙ СТЕПАНОВИЧ ","SERGEY ","PETROV SERGEY"],
    ["АЗАРОВИЧ/AZAROVICH ","АЛЕКСЕЙ ПЕТРОВИЧ ","ALEKSEY ","AZAROVICH ALEKSEY"],
    ["ШЛЕПАКОВ/SHLEPAKOV ","ИГОРЬ ВИКТОРОВИЧ ","IGOR ","SHLEPAKOV IGOR" ],
        ['АЛЕКСАНДРОВ/ALEKSANDROV', 'ВОЛЬДЕМАР АРИСТАРХОВИЧ', 'VOLDEMAR', 'ALEKSANDROV VOLDEMAR'],
        ['КОЛЕСНИКОВ/KOLESNIKOV', 'ПАВЕЛ ЛЬВОВИЧ', 'PAVEL', 'KOLESNIKOV PAVEL' ],
        ['ОДИНЦОВ/ODINCOV', 'КОРНЕЛИЙ УЛЕБОВИЧ', 'KORNELIJ', 'ODINCOV KORNELIJ' ],
        ['СИМОНОВ/SIMONOV ','ГОРДЕЙ ГРИГОРЬЕВИЧ', 'GORDEJ', 'SIMONOV GORDEJ'],
        ['НЕКРАСОВ/NEKRASOV','ЗИНОВИЙ ЮРЬЕВИЧ', 'ZINOVIJ','NEKRASOV ZINOVIJ' ],
        ['ФЕДОСЕЕВ/FEDOSEEV','ВЯЧЕСЛАВ ОСКАРОВИЧ', 'VYACHESLAV', 'FEDOSEEV VYACHESLAV'],
        ['СЕЛИВЕРСТОВ/SELIVERSTOV', 'АРСЕНИЙ ДАМИРОВИЧ','ARSENIJ','SELIVERSTOV ARSENIJ' ],
        ['АБРАМОВ/ABRAMOV', 'ВИТОЛЬД СЕМЁНОВИЧ ','VITOLD','ABRAMOV VITOLD '],
        ['ВОРОНЦОВ/VORONCOV', 'МЕЧЕСЛАВ ПАНТЕЛЕЙМОНОВИЧ', 'MECHESLAV','VORONCOV MECHESLAV' ],
        ['САВЕЛЬЕВ/SAVELEV','ВЕНЕДИКТ ЮРЬЕВИЧ','VENEDIKT', 'SAVELEV VENEDIKT' ],
        ['ДМИТРИЕВ/DMITRIEV ','ВИЛЕН ФЕДОТОВИЧ','VILEN', 'DMITRIEV VILEN'],
        ['НИКИТИН/NIKITIN','ЕВГЕНИЙ ДАНИИЛОВИЧ','EVGENIJ','NIKITIN EVGENIJ' ],
        ['КОНДРАТЬЕВ/KONDRATEV ', 'ЭДУАРД ЭДУАРДОВИЧ','EDUARD','KONDRATEV EDUARD' ],
        ['ОВЧИННИКОВ/ OVCHINNIKOV', 'ВАЛЕРИЙ ЕГОРОВИЧ','VALERIJ','OVCHINNIKOV VALERIJ' ],
        ['БРАГИН/BRAGIN ','ЗИНОВИЙ ИГНАТЬЕВИЧ' ,'ZINOVIJ', 'BRAGIN ZINOVIJ'],
        ['ИВАНКОВ/IVANKOV','ЛАЗАРЬ СВЯТОСЛАВОВИЧ', 'LAZAR','IVANKOV LAZAR'],
        ['ДЕНИСОВ/DENISOV','ОСТАП ИГОРЕВИЧ', 'OSTAP ','DENISOV OSTAP'],
        ['ТЕТЕРИН/TETERIN','ТИМУР ДАНИИЛОВИЧ', 'TIMUR', 'TETERIN TIMUR'],
        ['КОЛЕСНИКОВ/KOLESNIKOV','ЛЮДВИГ ГЕОРГЬЕВИЧ','LYUDVIG','KOLESNIKOV LYUDVIG'  ],
        ['ДЕНИСОВ/DENISOV', 'ЛЮДВИГ СЕРАПИОНОВИЧ' ,'LYUDVIG ', 'DENISOV LYUDVIG'],

        ['АНТОНОВ/ANTONOV','ЖИГЕР ИВАНОВИЧ','ZHIGER','ANTONOV ZHIGER']
        ['НЕГОДА/NEGODA', 'ЕЛИСЕЙ АНДРЕЕВИЧ','ELISEI','NEGODA ELISEI'],
        ['ФЕДОРЕНКО/FEDORENKO', 'ЕФРЕМ ВАСИЛЬЕВИЧ','EFREM','FEDORENKO EFREM' ],
        ['ТЕРЕНТЬЕВ/TERENTEV', 'ЭДУАРД ВАЛЕРИЕВИЧ','EDUARD', 'TERENTEV EDUARD'],
        ['БЕЛЯЕВ/BELIAEV', 'ФЕЛИКС БРОНИСЛАВОВИЧ','FELIKS', 'BELIAEV FELIKS'],
        ['ВАЛЬКОВСКИЙ/VALKOVSKII', 'ЖДАН ФЁДОРОВИЧ','ZHDAN','VALKOVSKII ZHDAN '],
        ['САФОНОВ/SAFONOV', 'ЖЕРАР ВАСИЛЬЕВИЧ','ZHERAR', 'SAFONOV ZHERAR'],
        ['БОБРОВ/BOBROV', 'ДЕНИС АНДРЕЕВИЧ','DENIS', 'BOBROV DENIS'],
        ['НИКИФОРОВ/NIKIFOROV', 'ФИЛИПП БОРИСОВИЧ','FILIPP', 'NIKIFOROV FILIPP '],
        ['СЕЛЕЗНЁВ/SELEZNEV', 'МАКСИМ ДАНИЛОВИЧ','MAKSIM', 'SELEZNEV MAKSIM '],
        ['ВЛАСОВ/VLASOV', 'ЧАРЛЬЗ ДАНИЛОВИЧ', 'CHARLZ', 'VLASOV CHARLZ'],
        ['ТИХОНОВ/TIKHONOV', 'ЙОХАНЕС ДМИТРИЕВИЧ','IOKHANES','TIKHONOV IOKHANES' ],
        ['КУДРЯВЦЕВ/KUDRIAVTSEV', 'ЛЮДОВИК ГРИГОРЬЕВИЧ','LIUDOVIK','KUDRIAVTSEV LIUDOVIK '],
        ['ЖУРАВЛЁВ/ZHURAVLEV', 'ЮЛИАН АЛЕКСАНДРОВИЧ','IULIAN', 'ZHURAVLEV IULIAN '],
        ['ШУБИН/SHUBIN', 'ЙОНАС ЯРОСЛАВОВИЧ','IONAS', 'SHUBIN IONAS '],
        ['ШУБИН/SHUBIN', 'ЧАРЛЬЗ ВАДИМОВИЧ','CHARLZ', 'SHUBIN CHARLZ '],
        ['ЗИМИН/ZIMIN', 'ШАРЛЬ ИВАНОВИЧ','SHARL', 'ZIMIN SHARL'],
        ['ПАЛИЙ/PALII', 'МИХАИЛ МИХАЙЛОВИЧ' ,'MIKHAIL','PALII MIKHAIL' ],
        ['ПЕТРЕНКО/PETRENKO', 'МАРАТ ПЛАТОНОВИЧ','MARAT' ,'PETRENKO MARAT' ],
        ['ИГНАТЬЕВ/IGNATEV', 'ЭРИК ВАЛЕРИЕВИЧ','ERIK', 'IGNATEV ERIK '],

        ['ПОТАПОВ/POTAPOV', 'КАМИЛЬ ВЛАДИМИРОВИЧ','KAMIL','POTAPOV KAMIL'],
        ['ВЕСЕЛОВ/VESELOV', 'ДАНИИЛ БОРИСОВИЧ ','DANIIL','VESELOV DANIIL' ],
        ['КУЛИБАБА/KULIBABA', 'ФЕЛИКС ВАЛЕРИЕВИЧ ','FELIKS','KULIBABA FELIKS'],
        ['ЖДАНОВ/ZHDANOV', 'АБРАМ ГРИГОРЬЕВИЧ ','ABRAM','ZHDANOV ABRAM' ],
        ['ПЕТУХОВ/PETUKHOV', 'ГЕРАСИМ АЛЕКСАНДРОВИЧ','GERASIM','PETUKHOV GERASIM' ],
        [' ЛЕГОЙДА/LEGOIDA', 'ЗАУР АРТЁМОВИЧ','ZAUR','LEGOIDA ZAUR' ],
        [' РОДИОНОВ/RODIONOV', 'ЕРЕМЕЙ ВЛАДИМИРОВИЧ ','EREMEI','RODIONOV EREMEI '],
        ['БАРАНОВСКИЙ/BARANOVSKII', 'ЙОЗЕФ ЮХИМОВИЧ','IOZEF','BARANOVSKII IOZEF '],
        ['СПИВАК/SPIVAK', 'ХАРИТОН ВИТАЛИЕВИЧ','KHARITON' ,'SPIVAK KHARITON' ],
        [' БАРАНОВСКИЙ/BARANOVSKII', 'УСТИН БОГДАНОВИЧ ','USTIN','BARANOVSKII USTIN' ],
        ['СУСАРЕНКО/SUSARENKO', 'ЦЕФАС СТАНИСЛАВОВИЧ ','TSEFAS','SUSARENKO TSEFAS' ],
        [' НИКИФОРОВ/NIKIFOROV', 'ШАМИЛЬ СЕРГЕЕВИЧ','SHAMIL','NIKIFOROV SHAMIL' ],
        ['РОГОВ/ROGOV', 'ЦЕФАС МАКСИМОВИЧ','TSEFAS','ROGOV TSEFAS' ],
        [' СИРКО/SIRKO', 'РАФАИЛ РОМАНОВИЧ','RAFAIL ','SIRKO RAFAIL' ],
        [' РОГОВ/ROGOV', 'КИР ЯРОСЛАВОВИЧ','KIR','ROGOV KIR' ],
        [' КАСЬКИВ/KASKIV', 'ОСТАП ЯРОСЛАВОВИЧ','OSTAP','KASKIV OSTAP '],
        ['ЕВСЕЕВ/EVSEEV', 'ИММАНУИЛ МАКСИМОВИЧ','IMMANUIL','EVSEEV IMMANUIL'],
        ['НОСОВ/NOSOV', 'ДОНАТ АЛЕКСЕЕВИЧ','DONAT','NOSOV DONAT' ],
        ['ЛЕГОЙДА/LEGOIDA', 'КАРЕН ДАНИЛОВИЧ','KAREN','LEGOIDA KAREN'],
        ['ГОРОДЕЦКИЙ/GORODETSKII', 'ЕВСЕЙ АНДРЕЕВИЧ ','EVSEI','GORODETSKII EVSEI' ],
        ['МАСЛОВСКИЙ/MASLOVSKII', 'ВАЛЕРИЙ ФЁДОРОВИЧ ','VALERII' ,'MASLOVSKII VALERII '],
        ['АРТЕМЬЕВ/ARTEMEV', 'ЕВДОКИМ МАКСИМОВИЧ','EVDOKIM','ARTEMEV EVDOKIM' ],
        [' КАЛАШНИКОВ/KALASHNIKOV', 'ПАВЕЛ ВАЛЕРИЕВИЧ ','PAVEL','KALASHNIKOV PAVEL' ],
        ['ПОГОМИЙ/POGOMII', 'АНТОНИН ПЕТРОВИЧ','ANTONIN','POGOMII ANTONIN' ],
        ['ПОГОМИЙ/POGOMII', 'ФЕЛИКС ВАЛЕРИЕВИЧ','FELIKS' ,'POGOMII FELIKS '],
        ['ФОМИЧЁВ/FOMICHEV', 'ГЛЕБ СЕРГЕЕВИЧ','GLEB ','FOMICHEV GLEB '],
        [' КУЛИКОВ/KULIKOV', 'КЛИМ СЕРГЕЕВИЧ','KLIM','KULIKOV KLIM' ],
        ['МЕДВЕДЕВ/MEDVEDEV', 'БРОНИСЛАВ ЭДУАРДОВИЧ','BRONISLAV','MEDVEDEV BRONISLAV'],
        ['ЗЫКОВ/ZYKOV', 'ЮЛИЙ ИВАНОВИЧ','IULII','ZYKOV IULII' ],



['ВОДОЛЕЕВ/VODOLEEV','ВАСИЛИЙ АВГУСТОВИЧ','VASILII','VODOLEEV VASILII'],
['РЯБЦЕВ/RIABTSEV','КОНСТАНТИН ИОСИФОВИЧ','KONSTANTIN','RIABTSEV KONSTANTIN'],
['СИЗЫЙ/SIZYI','НИКИФОР ДЕНИСОВИЧ','NIKIFOR','SIZYI NIKIFOR'],
['ШЕРЕМЕТЬЕВ/SHEREMETEV','НАИЛЬ ПЛАТОНОВИЧ','NAIL','SHEREMETEV NAIL'],
['ПОНОМАРЁВ/PONOMAREV','ЕФРЕМ НИКОЛАЕВИЧ','EFREM','PONOMAREV EFREM'],
['ЯБЛОНСКИЙ/IABLONSKII','МАРТИН ГЕРАСИМОВИЧ','MARTIN','IABLONSKII MARTIN'],
['РУГОВ/RUGOV','ИГОРЬ АНАТОЛЬЕВИЧ','IGOR','RUGOV IGOR'],
['РУНОВ/RUNOV','ИЛЬЯС АНАТОЛЬЕВИЧ','ILIAS','RUNOV ILIAS'],
['ТЁМКИН/TEMKIN','СТАНИСЛАВ БОРИСОВИЧ','STANISLAV','TEMKIN STANISLAV'],
['ЦАРИЦЫН/TSARITSYN','РАМИЗ МАРКОВИЧ','RAMIZ','TSARITSYN RAMIZ'],
['ОСИН/OSIN','ЭРАСТ БОГУСЛАВОВИЧ','EHRAST','OSIN EHRAST'],
['ХЛЕБОВ/KHLEBOV','АДИС ЯРОСЛАВОВИЧ','ADIS','KHLEBOV ADIS'],
['СОКОЛОВ/SOKOLOV','НАТАН ПЛАТОНОВИЧ','NATAN','SOKOLOV NATAN'],
['ЕЛЬЦОВ/ELTSOV','ФЕДОР МИТРОФАНОВИЧ','FEDOR','ELTSOV FEDOR'],
['СТАРИКОВ/STARIKOV','РОМАН НАУМОВИЧ','ROMAN','STARIKOV ROMAN'],
['СУХАНОВ/SUKHANOV','ГЕВОР САВЕЛЬЕВИЧ','GEVOR','SUKHANOV GEVOR'],
['ЧИРКАШ/CHIRKASH','ТАИС КОНДРАТЬЕВИЧ','TAIS','CHIRKASH TAIS'],
['ЕРШОВ/ERSHOV','БРУНО НАУМОВИЧ','BRUNO','ERSHOV BRUNO'],
['РУЧКИН/RUCHKIN','МАРАТ МАКСОВИЧ','MARAT','RUCHKIN MARAT'],
['ЗЫРЯНОВ/ZYRIANOV','МОИСЕЙ АЛЕКСЕЕВИЧ','MOISEI','ZYRIANOV MOISEI'],
['МЯУКИН/MIAUKIN','ЭМИН ЯРОСЛАВОВИЧ','EHMIN','MIAUKIN EHMIN'],
['ЛЮБОВ/LIUBOV','ЮЛИЙ ВЛАДИМИРОВИЧ','IULII','LIUBOV IULII'],
['КОЛЛЕРОВ/KOLLEROV','АЗАРИЙ ОЛЕГОВИЧ','AZARII','KOLLEROV AZARII'],
['ЮГАНЦЕВ/IUGANTSEV','ХРИСТИАН ГЕРМАНОВИЧ','KHRISTIAN','IUGANTSEV KHRISTIAN'],
['ПРОХОРОВ/PROKHOROV','ПЕТР ВЛАДИМИРОВИЧ','PETR','PROKHOROV PETR'],
['КОРЕНЕВ/KORENEV','ВАЛЕНТИН АКИМОВИЧ','VALENTIN','KORENEV VALENTIN'],
['АБРАМОВ/ABRAMOV','АРСЛАН АНДРЕЕВИЧ','ARSLAN','ABRAMOV ARSLAN'],
['МИЛЮКОВ/MILIUKOV','ГЕОРГИЙ СЕРГЕЕВИЧ','GEORGII','MILIUKOV GEORGII'],
['ШАЛЯПИН/SHALIAPIN','ЕРМОЛАЙ РОБЕРТОВИЧ','ERMOLAI','SHALIAPIN ERMOLAI'],
['ДУРОВ/DUROV','ЖАН АНДРЕЕВИЧ','ZHAN','DUROV ZHAN'],
['МУХОМОРОВ/MUKHOMOROV','АВРААМ МАТВЕЕВИЧ','AVRAAM','MUKHOMOROV AVRAAM'],
['МОРОШКИН/MOROSHKIN','ФИЛИПП АЛЕКСЕЕВИЧ','FILIPP','MOROSHKIN FILIPP'],
['СЕВЕРИНОВ/SEVERINOV','ВАЛЕРИЙ ВАЛЕНТИНОВИЧ','VALERII','SEVERINOV VALERII'],
['КИЛЕССО/KILESSO','ФЕДОР ГРИГОРЬЕВИЧ','FEDOR','KILESSO FEDOR'],
['ТРУСОВ/TRUSOV','ФЛОРЕНТИЙ КОНДРАТЬЕВИЧ','FLORENTII','TRUSOV FLORENTII'],
['БИРЮКОВ/BIRIUKOV','ДОБРЫНЯ ГЕРАСИМОВИЧ','DOBRYNIA','BIRIUKOV DOBRYNIA'],
['СНАТКИН/SNATKIN','АЙРАТ АРТЕМОВИЧ','AIRAT','SNATKIN AIRAT'],
['БЕЛОГЛАЗОВ/BELOGLAZOV','ЕРЕМЕЙ МИТРОФАНОВИЧ','EREMEI','BELOGLAZOV EREMEI'],
['ТРУТНЕВ/TRUTNEV','ТЕРЕНТИЙ РУСЛАНОВИЧ','TERENTII','TRUTNEV TERENTII'],
['РАСПОПОВ/RASPOPOV','МАРТИН САВЕЛЬЕВИЧ','MARTIN','RASPOPOV MARTIN'],
['ЛУКОВ/LUKOV','ОНИСИМ АДАМОВИЧ','ONISIM','LUKOV ONISIM'],
['ПОЛИЧЕВ/POLICHEV','АНДРЕЙ ФЕЛИКСОВИЧ','ANDREI','POLICHEV ANDREI'],
['БАРАНОВ/BARANOV','АГГЕЙ ТАРАСОВИЧ','AGGEI','BARANOV AGGEI'],
['БОРЦОВ/BORTSOV','АГАП ГЕННАДЬЕВИЧ','AGAP','BORTSOV AGAP'],
['ЁЛКОВ/ELKOV','ВАЦЛАВ АФАНАСЬЕВИЧ','VATSLAV','ELKOV VATSLAV'],
['ШУРШАЛИН/SHURSHALIN','ВЛАДЛЕН ВАСИЛЬЕВИЧ','VLADLEN','SHURSHALIN VLADLEN'],
['ЭТУШ/EHTUSH','ГАЯС ПРОХОРОВИЧ','GAIAS','EHTUSH GAIAS'],
['КАРАНДАШОВ/KARANDASHOV','САМСОН ИВАНОВИЧ','SAMSON','KARANDASHOV SAMSON'],
['ШАТАЛОВ/SHATALOV','ЛАЗАРЬ ЮЛЬЕВИЧ','LAZAR','SHATALOV LAZAR'],
['СВАЛОВ/SVALOV','ГЛЕБ КИРИЛЛОВИЧ','GLEB','SVALOV GLEB'],
['АБРАМОВ/ABRAMOV','ИЛЬЯ ВЛАДИМИРОВИЧ','ILIA','ABRAMOV ILIA'],
['АНАНЬЕВ/ANANEV','АНТОН АРТЁМОВИЧ','ANTON','ANANEV ANTON'],
['АНДРИАНОВ/ANDRIANOV','НИКОЛАЙ АРТЁМОВИЧ','NIKOLAI','ANDRIANOV NIKOLAI'],
['АНТОНОВ/ANTONOV','ДАНИИЛ АЛЕКСАНДРОВИЧ','DANIIL','ANTONOV DANIIL'],
['АНТОНОВ/ANTONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','ANTONOV ILIA'],
['БОЛДЫРЕВ/BOLDYREV','МИХАИЛ ВЛАДИМИРОВИЧ','MIKHAIL','BOLDYREV MIKHAIL'],
['БОНДАРЕВ/BONDAREV','ВСЕВОЛОД РОМАНОВИЧ','VSEVOLOD','BONDAREV VSEVOLOD'],
['БОРИСОВ/BORISOV','ЮРИЙ ВИКТОРОВИЧ','IURII','BORISOV IURII'],
['БОРИСОВ/BORISOV','ИВАН АЛЕКСАНДРОВИЧ','IVAN','BORISOV IVAN'],
['БОЧАРОВ/BOCHAROV','ЗАХАР АНДРЕЕВИЧ','ZAKHAR','BOCHAROV ZAKHAR'],
['ВИНОГРАДОВ/VINOGRADOV','ИВАН ПАВЛОВИЧ','IVAN','VINOGRADOV IVAN'],
['ВОЛКОВ/VOLKOV','ИВАН ИВАНОВИЧ','IVAN','VOLKOV IVAN'],
['ДАВЫДОВ/DAVYDOV','ПЛАТОН АЛЕКСАНДРОВИЧ','PLATON','DAVYDOV PLATON'],
['ДЕНИСОВ/DENISOV','АЛЕКСАНДР МАКСИМОВИЧ','ALEKSANDR','DENISOV ALEKSANDR'],
['ДМИТРИЕВ/DMITRIEV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','DMITRIEV MATVEI'],
['ДОРОФЕЕВ/DOROFEEV','АНДРЕЙ ИЛЬИЧ','ANDREI','DOROFEEV ANDREI'],
['ДЬЯКОВ/DIAKOV','АНДРЕЙ РОМАНОВИЧ','ANDREI','DIAKOV ANDREI'],
['ЕГОРОВ/EGOROV','МИРОН АРТЁМОВИЧ','MIRON','EGOROV MIRON'],
['ЕМЕЛЬЯНОВ/EMELIANOV','АЛЕКСАНДР ДАНИИЛОВИЧ','ALEKSANDR','EMELIANOV ALEKSANDR'],
['ЗАЙЦЕВ/ZAITSEV','АРТЁМ ЮРЬЕВИЧ','ARTEM','ZAITSEV ARTEM'],
['ЗАХАРОВ/ZAKHAROV','ИВАН КИРИЛЛОВИЧ','IVAN','ZAKHAROV IVAN'],
['ЗАХАРОВ/ZAKHAROV','ЕВГЕНИЙ АРТЁМОВИЧ','EVGENII','ZAKHAROV EVGENII'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ВЛАДИМИРОВИЧ','IVAN','ZAKHAROV IVAN'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ЕГОРОВИЧ','IVAN','ZAKHAROV IVAN'],
['ЗИМИН/ZIMIN','ФЁДОР СТЕПАНОВИЧ','FEDOR','ZIMIN FEDOR'],
['ЗОЛОТОВ/ZOLOTOV','МИХАИЛ ГЕРМАНОВИЧ','MIKHAIL','ZOLOTOV MIKHAIL'],
['ЗОРИН/ZORIN','ИВАН НИКИТИЧ','IVAN','ZORIN IVAN'],
['ЗУБОВ/ZUBOV','ЕГОР ФИЛИППОВИЧ','EGOR','ZUBOV EGOR'],
['ИВАНОВ/IVANOV','САВЕЛИЙ АЛЕКСЕЕВИЧ','SAVELII','IVANOV SAVELII'],
['ИВАНОВ/IVANOV','АЛЕКСАНДР САВЕЛЬЕВИЧ','ALEKSANDR','IVANOV ALEKSANDR'],
['ИВАНОВ/IVANOV','ТИМУР РОМАНОВИЧ','TIMUR','IVANOV TIMUR'],
['ИГНАТОВ/IGNATOV','МАКАР АЛЕКСАНДРОВИЧ','MAKAR','IGNATOV MAKAR'],
['КАЛИНИН/KALININ','АРТЁМ ИЛЬИЧ','ARTEM','KALININ ARTEM'],
['КАЛМЫКОВ/KALMYKOV','АРТУР ФЁДОРОВИЧ','ARTUR','KALMYKOV ARTUR'],
['КАРАСЕВ/KARASEV','МИРОСЛАВ ГЕОРГИЕВИЧ','MIROSLAV','KARASEV MIROSLAV'],
['КАРПОВ/KARPOV','МАРК ВЛАДИМИРОВИЧ','MARK','KARPOV MARK'],
['КИРЕЕВ/KIREEV','ВЛАДИМИР ВЛАДИМИРОВИЧ','VLADIMIR','KIREEV VLADIMIR'],
['КИРИЛЛОВ/KIRILLOV','ЕЛИСЕЙ ТИМОФЕЕВИЧ','ELISEI','KIRILLOV ELISEI'],
['КЛИМОВ/KLIMOV','ЛЕВ КОНСТАНТИНОВИЧ','LEV','KLIMOV LEV'],
['КОВАЛЕВ/KOVALEV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','KOVALEV DMITRII'],
['КОМАРОВ/KOMAROV','МАКСИМ МИХАЙЛОВИЧ','MAKSIM','KOMAROV MAKSIM'],
['КОНОВАЛОВ/KONOVALOV','ДМИТРИЙ ИВАНОВИЧ','DMITRII','KONOVALOV DMITRII'],
['КОШЕЛЕВ/KOSHELEV','АРТЁМ ЗАХАРОВИЧ','ARTEM','KOSHELEV ARTEM'],
['КУЗНЕЦОВ/KUZNETSOV','ФИЛИПП МИРОНОВИЧ','FILIPP','KUZNETSOV FILIPP'],
['КУЗНЕЦОВ/KUZNETSOV','ДМИТРИЙ ТИМОФЕЕВИЧ','DMITRII','KUZNETSOV DMITRII'],
['КУЗНЕЦОВ/KUZNETSOV','ГЛЕБ МАРКОВИЧ','GLEB','KUZNETSOV GLEB'],
['КУЗЬМИН/KUZMIN','ВАЛЕРИЙ СЕРГЕЕВИЧ','VALERII','KUZMIN VALERII'],
['КУПРИЯНОВ/KUPRIIANOV','КОНСТАНТИН МАКСИМОВИЧ','KONSTANTIN','KUPRIIANOV KONSTANTIN'],
['ЛАЗАРЕВ/LAZAREV','АРТЁМ ГОРДЕЕВИЧ','ARTEM','LAZAREV ARTEM'],
['ЛАРИН/LARIN','ВАДИМ ДАНИИЛОВИЧ','VADIM','LARIN VADIM'],
['ЛАТЫШЕВ/LATYSHEV','КИРИЛЛ НИКОЛАЕВИЧ','KIRILL','LATYSHEV KIRILL'],
['ЛЕБЕДЕВ/LEBEDEV','ТИМУР МАКСИМОВИЧ','TIMUR','LEBEDEV TIMUR'],
['ЛЕВИН/LEVIN','ГЕОРГИЙ МАРКОВИЧ','GEORGII','LEVIN GEORGII'],
['МАЙОРОВ/MAIOROV','СЕРГЕЙ ДЕНИСОВИЧ','SERGEI','MAIOROV SERGEI'],
['МАЛЫШЕВ/MALYSHEV','НИКОЛАЙ ГЛЕБОВИЧ','NIKOLAI','MALYSHEV NIKOLAI'],
['МАЛЫШЕВ/MALYSHEV','ТИХОН СТЕПАНОВИЧ','TIKHON','MALYSHEV TIKHON'],
['МАРКЕЛОВ/MARKELOV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','MARKELOV PAVEL'],
['МАРКИН/MARKIN','ДЕНИС ИЛЬИЧ','DENIS','MARKIN DENIS'],
['МАРКОВ/MARKOV','СЕРГЕЙ МИХАЙЛОВИЧ','SERGEI','MARKOV SERGEI'],
['МЕЛЬНИКОВ/MELNIKOV','ДЕНИС БОГДАНОВИЧ','DENIS','MELNIKOV DENIS'],
['МОРОЗОВ/MOROZOV','КОНСТАНТИН НИКИТИЧ','KONSTANTIN','MOROZOV KONSTANTIN'],
['НИКИТИН/NIKITIN','МАТВЕЙ КОНСТАНТИНОВИЧ','MATVEI','NIKITIN MATVEI'],
['НИКОЛАЕВ/NIKOLAEV','АРТЁМ МАКАРОВИЧ','ARTEM','NIKOLAEV ARTEM'],
['НИКОЛАЕВ/NIKOLAEV','ВЯЧЕСЛАВ МАРКОВИЧ','VIACHESLAV','NIKOLAEV VIACHESLAV'],
['ОВСЯННИКОВ/OVSIANNIKOV','МАКСИМ НИКИТИЧ','MAKSIM','OVSIANNIKOV MAKSIM'],
['ОРЛОВ/ORLOV','РОМАН МАКСИМОВИЧ','ROMAN','ORLOV ROMAN'],
['ОСИПОВ/OSIPOV','ЕГОР ВЯЧЕСЛАВОВИЧ','EGOR','OSIPOV EGOR'],
['ПЕТРОВ/PETROV','ВЛАДИМИР КИРИЛЛОВИЧ','VLADIMIR','PETROV VLADIMIR'],
['ПЕТРОВСКИЙ/PETROVSKII','НИКИТА АЛЕКСЕЕВИЧ','NIKITA','PETROVSKII NIKITA'],
['ПЛАТОНОВ/PLATONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','PLATONOV ILIA'],
['ПОПОВ/POPOV','ИВАН МАКСИМОВИЧ','IVAN','POPOV IVAN'],
['ПОПОВ/POPOV','НИКИТА ВЛАДИМИРОВИЧ','NIKITA','POPOV NIKITA'],
['ПОПОВ/POPOV','ГЛЕБ РОМАНОВИЧ','GLEB','POPOV GLEB'],
['РОМАНОВ/ROMANOV','ПАВЕЛ НИКИТИЧ','PAVEL','ROMANOV PAVEL'],
['САЗОНОВ/SAZONOV','ГРИГОРИЙ АЛЕКСАНДРОВИЧ','GRIGORII','SAZONOV GRIGORII'],
['СЕВАСТЬЯНОВ/SEVASTIANOV','ГЛЕБ МАТВЕЕВИЧ','GLEB','SEVASTIANOV GLEB'],
['СЕМЕНОВ/SEMENOV','РОБЕРТ ЕВГЕНЬЕВИЧ','ROBERT','SEMENOV ROBERT'],
['СМИРНОВ/SMIRNOV','ЛЕВ АРТЁМОВИЧ','LEV','SMIRNOV LEV'],
['СМИРНОВ/SMIRNOV','МИРОН МАРКОВИЧ','MIRON','SMIRNOV MIRON'],
['СОКОЛОВ/SOKOLOV','АЛЕКСЕЙ ГЕОРГИЕВИЧ','ALEKSEI','SOKOLOV ALEKSEI'],
['СОЛОВЬЕВ/SOLOVEV','ИВАН ЛЕОНИДОВИЧ','IVAN','SOLOVEV IVAN'],
['СПИРИДОНОВ/SPIRIDONOV','МИХАИЛ АРТЁМОВИЧ','MIKHAIL','SPIRIDONOV MIKHAIL'],
['СУСЛОВ/SUSLOV','ФЁДОР РУСЛАНОВИЧ','FEDOR','SUSLOV FEDOR'],
['УВАРОВ/UVAROV','МАТВЕЙ ДАНИИЛОВИЧ','MATVEI','UVAROV MATVEI'],
['УЛЬЯНОВ/ULIANOV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','ULIANOV MATVEI'],
['ФЕДОСЕЕВ/FEDOSEEV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','FEDOSEEV GLEB'],
['ФЕДОТОВ/FEDOTOV','ЛЕВ ИЛЬИЧ','LEV','FEDOTOV LEV'],
['ФИЛИППОВ/FILIPPOV','ЕГОР АРТЁМОВИЧ','EGOR','FILIPPOV EGOR'],
['ЦАРЕВ/TSAREV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','TSAREV PAVEL'],
['ЧЕРНЫХ/CHERNYKH','ГЕОРГИЙ АЛЕКСАНДРОВИЧ','GEORGII','CHERNYKH GEORGII'],
['ЧЕРНЫШЕВ/CHERNYSHEV','МАРК ЕЛИСЕЕВИЧ','MARK','CHERNYSHEV MARK'],
['ЧЕРНЫШЕВ/CHERNYSHEV','АРТЁМ МАРКОВИЧ','ARTEM','CHERNYSHEV ARTEM'],
['ЧИСТЯКОВ/CHISTIAKOV','ГЕРМАН ГЕОРГИЕВИЧ','GERMAN','CHISTIAKOV GERMAN'],
['ЧИСТЯКОВ/CHISTIAKOV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','CHISTIAKOV DMITRII'],
['ЧУМАКОВ/CHUMAKOV','МИРОСЛАВ КОНСТАНТИНОВИЧ','MIROSLAV','CHUMAKOV MIROSLAV'],
['ЧУМАКОВ/CHUMAKOV','АРСЕНИЙ ДАНИИЛОВИЧ','ARSENII','CHUMAKOV ARSENII'],
['ШАРОВ/SHAROV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','SHAROV GLEB'],
['ШИРЯЕВ/SHIRIAEV','ЕГОР ГЕОРГИЕВИЧ','EGOR','SHIRIAEV EGOR'],
['ШМЕЛЕВ/SHMELEV','АНДРЕЙ КИРИЛЛОВИЧ','ANDREI','SHMELEV ANDREI'],
['ЩУКИН/SHCHUKIN','РОМАН МИХАЙЛОВИЧ','ROMAN','SHCHUKIN ROMAN'],


];
//__________________________________________________________________________________________


// неверные данные персонажей
 var quotes2 = [
    [ "ИВАНОВ/IVANOV ", "ВЛАДИСЛАВ НИКОЛАЕВИЧ ", "VLADISLAV ", "IVANKOV VLADISLAV" ],
    [  "ПЕТРОВ/PETROV ","АЛЕКСЕЙ СТЕПАНОВИЧ ", "ALEKSEY ",  "PETROV SERGEY"  ],
    ["АЗАРОВ/AZAROV ", "АЛЕКСАНДР ПЕТРОВИЧ ","ALEKSANDR ", "AZAROVICH ALEKSEY" ],
    [  "ШЛЕПАКОВ/SHLEPAKOV ",  "ИГОРЬ ВИКТОРОВИЧ ", "IGOR ",  "SHLEPAKOVICH IVAN" ],
         ['АЛЕКСАНДРОВ/ALEKSANDROV', 'ВОЛЬДЕМАР АРИСТАРХОВИЧ', 'VOLDEMAR', 'ALEKSEEV VOLDEMAR'],
                ['КОЛЕСНИКОВ/KOLESNIKOV', 'ПАВЕЛ ЛЬВОВИЧ', 'PAVEL', 'KOLESNIKOV ANTON' ],
                ['ОДИНЦОВ/ODINCOV', 'КОРНЕЛИЙ УЛЕБОВИЧ', 'KORNELIJ', 'ODINSOV KIRILL' ],
                ['СИМОНОВ/SIMONOV ','ГОРДЕЙ ГРИГОРЬЕВИЧ', 'GORDEJ', 'SIMONOV GRIGORIJ'],
                ['НЕКРАСОВИЧ/NEKRASОVICH','ЗИНОВИЙ АЛЕКСАНДРОВИЧ', 'ZINOVIJ','NEKRASOV ZINOVIJ' ],
                ['ФЕДОСЕЕВ/FEDOSEEV','CВЯТОСЛАВ ОСКАРОВИЧ', 'SVYATOSLAV', 'FEDOROV VYACHESLAV'],
                ['СЕЛИВЕРСТОВ/SELIVERSTOV', 'АРСЕН ДАМИРОВИЧ','ARSEN','SELIVERSTOV ARSENIJ' ],
                ['АБРАМОВ/ABRAMOV', 'ВИТАЛИЙ СЕМЁНОВИЧ ','VITALIJ','ABRAMOV VITOLD '],
                ['ВОРОНЦОВ/VORONCOV', 'МЕЧЕСЛАВ ПАНТЕЛЕЙМОНОВИЧ', 'MECHESLAV','VORONCOVICH MECHESLAV' ],
                ['САВЕЛЬЕВ/SAVELEV','ВЕНЕДИКТ ЮРЬЕВИЧ','VENEDIKT', 'SAVELIVICH VENEDIKT' ],
                ['ДМИТРИЕВ/DMITRIEV ','ВИКТОР ФЕДОТОВИЧ','VIKTOR', 'DMITRIEV VILEN'],
                ['НИКИТИН/NIKITIN','ЕВГЕНИЙ ДАНИИЛОВИЧ','EVGENIJ','NIKITIN ALEKSANDR' ],
                ['КОНДРАТЬЕВ/KONDRATEV ', 'ЭДУАРД ЭДУАРДОВИЧ','EDUARD','KODRATEV EDUARD' ],
                ['ОВЧИННИКОВ/OVCHINNIKOV', 'ВИТАЛИЙ ЕГОРОВИЧ','VITALIJ','OVCHINNIKOV VALERIJ' ],
                ['БРАГИН/BRAGIN ','НИКОЛАЙ ИГНАТЬЕВИЧ' ,'NIKOLAI', 'DRAGIN ZINOVIJ'],
                ['ИВАНКОВ/IVANKOV','ЕВГЕНИЙ ВИКТОРОВИЧ', 'EVGENIJ','IVANKOV LAZAR'],
                ['ДЕНИСОВ/DENISOV','ОСТАП ИГОРЕВИЧ', 'OSTAP ','DENISOV OSKAR'],
                ['ТЕТЕРИН/TETERIN','МУРАТ ДАНИИЛОВИЧ', 'MURAT', 'TETERIN TIMUR'],
                ['КОЛЕСНИКОВ/KOLESNIKOV','ЛЮДВИГ ГЕОРГЬЕВИЧ','LUDVIG','KOLESNIKOV LEONID'  ],
                ['ДЕНИСОВ/DENISOV', 'ИВАН СЕРАПИОНОВИЧ' ,'IVAN ', 'DENISOV LEONID'],
                ['АНТОНОВ/ANTONOV','ЖИГЕР ИВАНОВИЧ','ZHIGER','ANTONOV DENIS']

                ['НЕПОДА/NEPODA', 'ЕФРЕМ АНДРЕЕВИЧ','EFREM','NEGODA ELISEI'],
                        ['ФЕДОРЕНКОВ/FEDORENKOV', 'ЕФРЕМ ВАСИЛЬЕВИЧ','EFREM','FEDORENKO SERGEI' ],
                        ['ТЕРЕНТЬЕВ/TERENTEV', 'ЭДУАРД ВАЛЕРИЕВИЧ','EDUARD', 'TERENTEV SERGEI'],
                        ['БЕЛЯЕВ/BELIAEV', 'ФЕЛИКС БРОНИСЛАВОВИЧ','FELIKS', 'BELIAEV SERGEI'],
                        ['ВАЛЬХОВСКИЙ/VALKHOVSKII', 'ЖДАН ФЁДОРОВИЧ','ZHDAN','VALKOVSKII ZHDAN '],
                        ['САФРОНОВ/SAFRONOV', 'ЖЕРАР ВАСИЛЬЕВИЧ','ZHERAR', 'SAFONOV ZHERAR'],
                        ['БОБРОВИЧ/BOBROVICH', 'ДЕНИС АНДРЕЕВИЧ','DENIS', 'BOBROV DENIS'],
                        ['НИКИФОРОВ/NIKIFOROV', 'ФИЛИПП БОРИСОВИЧ','FILIPP', 'DENISOV FILIPP '],
                        ['СЕЛЕЗНЁВ/SELEZNEV', 'МАКСИМ ДАНИЛОВИЧ','MAKSIM', 'BELIAEV MAKSIM '],
                        ['ВЛАСОВ/VLASOV', 'СЕРГЕЙ ДАНИЛОВИЧ', 'SERGEI', 'VLASOV CHARLZ'],
                        ['ТИХОН/TIKHON', 'ЙОХАНЕС ДМИТРИЕВИЧ','IOKHANES','TIKHONOV IOKHANES' ],
                        ['КУДРЯВЦЕВ/KUDRIAVTSEV', 'ЛЮДОВИК ГРИГОРЬЕВИЧ','LIUDOVIK','KOLESNIKOV LIUDOVIK '],
                        ['ЖУРАВЛЁВ/ZHURAVLEV', 'ЮЛИАН АЛЕКСАНДРОВИЧ','IULIAN', 'ZHURAVLEV IURII '],
                        ['ШУБИН/SHUBIN', 'ЙОНАС ЯРОСЛАВОВИЧ','IONAS', 'SHUBIN IURII '],
                        ['ШУБИН/SHUBIN', 'ЧАРЛЬЗ ВАДИМОВИЧ','CHARLZ', 'SHUBIN DENIS '],
                        ['ЗЕМИН/ZEMIN', 'ШАРЛЬ ИВАНОВИЧ','SHARL', 'ZIMIN SHARL'],
                        ['ПАЛИЙ/PALII', 'МИХАИЛ МИХАЙЛОВИЧ' ,'MIKHAIL','PALOV MIKHAIL' ],
                        ['ПЕТРАКОВ/PETRAKOV', 'МАРАТ ПЛАТОНОВИЧ','MARAT' ,'PETRENKO MARAT' ],
                        ['ИПАТЬЕВ/IPATEV', 'ЭРИК ВАЛЕРИЕВИЧ','ERIK', 'IGNATEV ERIK '],

                        ['ПОТАПОВ/POTAPOV', 'КАМИЛЬ ВЛАДИМИРОВИЧ','KAMIL','POTANIN SHAMIL'],
                                ['ВЕСЕЛОВ/VESELOV', 'МАКСИМ БОРИСОВИЧ ','MAKSIM','VESELOV DANIIL' ],
                                ['КУЛИБОВ/KULIBOV', 'ФЕЛИКС ВАЛЕРИЕВИЧ ','FELIKS','KULIBABA FELIKS'],
                                ['ЖДАНОВ/ZHDANOV', 'АРАМ ГРИГОРЬЕВИЧ ','ARAM','ZHDANOV ABRAM' ],
                                ['ПЕТУХОВ/PETUKHOV', 'ГЕРАСИМ АЛЕКСАНДРОВИЧ','GERASIM','PETUKHOV MIKHAIL' ],
                                [' ЛЕГОДИН/LEGODIN', 'СЕРГЕЙ АРТЁМОВИЧ','SERGEI','LEGOIDA ZAUR' ],
                                [' РОДИОНОВ/RODIONOV', 'ЕРЕМЕЙ ВЛАДИМИРОВИЧ ','EREMEI','RODIONOV SERGEI '],
                                ['БАРАНОВ/BARANOV', 'МАРАТ ЮХИМОВИЧ','MARAT','BARANOVSKII IOZEF '],
                                ['СПИВАКОВ/SPIVAKOV', 'МИХАИЛ ВИТАЛИЕВИЧ','MIKHAIL' ,'SPIVAK KHARITON' ],
                                [' БАРАНСКИЙ/BARANSKII', 'ЭРИК БОГДАНОВИЧ ','ERIK','BARANOVSKII USTIN' ],
                                ['СУСАРЕНКОВ/SUSARENKOV', 'ВАЛЕРИЙ СТАНИСЛАВОВИЧ ','VALERII','SUSARENKO TSEFAS' ],
                                [' НИКИФОРОВ/NIKIFOROV', 'KАМИЛЬ СЕРГЕЕВИЧ','KAMIL','NIKIFOROV SHAMIL' ],
                                ['РОПОВ/ROPOV', 'ЦЕФАС МАКСИМОВИЧ','TSEFAS','ROGOV TSEFAS' ],
                                [' СИРКОВ/SIRKOV', 'РАФАИЛ РОМАНОВИЧ','RAFAIL ','SIRKO RAFAIL' ],
                                [' РОГОВ/ROGOV', 'ПАВЕЛ ЯРОСЛАВОВИЧ','PAVEL','ROGOV KIR' ],
                                [' КАСЬКИВ/KASKIV', 'ОСТАП ЯРОСЛАВОВИЧ','OSTAP','KASKIV PAVEL '],
                                ['ЕВСЕЕВ/EVSEEV', 'ИММАНУИЛ МАКСИМОВИЧ','IMMANUIL','PETUKHOV IMMANUIL'],
                                ['НОСОВ/NOSOV', 'ДОНАТ АЛЕКСЕЕВИЧ','DONAT','ZYKOV DONAT' ],
                                ['ЛЕГОДИН/LEGODIN', 'КАРЕН ДАНИЛОВИЧ','KAREN','LEGOIDA KAREN'],
                                ['ГОРОДЕЦКИЙ/GORODETSKII', 'ЕВСЕЙ АНДРЕЕВИЧ ','EVSEI','MASLOVSKII VALERII' ],
                                ['МАСЛОВСКИЙ/MASLOVSKII', 'ВАЛЕРИЙ ФЁДОРОВИЧ ','VALERII' ,'GORODETSKII EVSEI '],
                                ['АРТЕМЬЕВ/ARTEMEV', 'ГЛЕБ МАКСИМОВИЧ','GLEB','ARTEMEV EVDOKIM' ],
                                [' КАЛАШНИКОВ/KALASHNIKOV', 'ПАВЕЛ ВАЛЕРИЕВИЧ ','PAVEL','KALASHNIK DANIIL' ],
                                ['ПОГОМИЙ/POGOMII', 'АНТОН ПЕТРОВИЧ','ANTON','POTAPOV ANTONIN' ],
                                ['ПОГОМИЙ/POGOMII', 'ФЕЛИКС ВАЛЕРИЕВИЧ','FELIKS' ,'PONOVII GLEB '],
                                ['ФОМИН/FOMIN', 'ГЛЕБ СЕРГЕЕВИЧ','GLEB ','FOMICHEV GLEB '],
                                [' КУЛИКОВ/KULIKOV', 'КЛИМ СЕРГЕЕВИЧ','KLIM','KULIK KIR' ],
                                ['МЕДВЕДЕВ/MEDVEDEV', 'БРОНИСЛАВ ЭДУАРДОВИЧ','BRONISLAV','MEDVEDEV DMITRII'],
                                ['ЗЫКОВ/ZYKOV', 'ЮЛИЙ ИВАНОВИЧ','IULII','ZHUKOV ILIA' ],
								
	

['ВОДОЛЕЕВ/VODOLEEV','ВАСИЛИЙ АВГУСТОВИЧ','VASILII','VOLEEV VASILII'],
['РЯБЦЕВ/RIABTSEV','КОНСТАНТИН ИОСИФОВИЧ','KONSTANTIN','RIABTSEV  STANISLAV'],
['СИЗЫЙ/SIZYI','НИКИФОР ДЕНИСОВИЧ','NIKIFOR','SIZOV NIKIFOR'],
['ШЕРЕМЕТЬЕВ/SHEREMETEV','НАИЛЬ ПЛАТОНОВИЧ','NAIL','SHEREMETEV IGOR'],
['ПОНОМАРЁВ/PONOMAREV','ЕФРЕМ НИКОЛАЕВИЧ','EFREM','PONOMARENKO EFREM'],
['ЯБЛОНСКИЙ/IABLONSKII','МАРТИН ГЕРАСИМОВИЧ','MARTIN','IABLONSKII RAMIZ'],
['РУГОВ/RUGOV','ИГОРЬ АНАТОЛЬЕВИЧ','IGOR','ROGOV IGOR'],
['РУНОВ/RUNOV','ИЛЬЯС АНАТОЛЬЕВИЧ','ILIAS','ROGOV ILIAS'],
['ТЁМКИН/TEMKIN','СТАНИСЛАВ БОРИСОВИЧ','STANISLAV','TETERIN STANISLAV'],
['ЦАРИЦЫН/TSARITSYN','РАМИЗ МАРКОВИЧ','RAMIZ','TSARITSYN NATAN'],
['ОСИН/OSIN','ЭРАСТ БОГУСЛАВОВИЧ','EHRAST','OSTIN EHRAST'],
['ХЛЕБОВ/KHLEBOV','АДИС ЯРОСЛАВОВИЧ','ADIS','KHLEBOV PETR'],
['СОКОЛОВ/SOKOLOV','НАТАН ПЛАТОНОВИЧ','NATAN','SOKOL NATAN'],
['ЕЛЬЦОВ/ELTSOV','ФЕДОР МИТРОФАНОВИЧ','FEDOR','ELTSOV ROMAN'],
['СТАРИКОВ/STARIKOV','РОМАН НАУМОВИЧ','ROMAN','SUKHANOV ROMAN'],
['СУХАНОВ/SUKHANOV','ГЕВОР САВЕЛЬЕВИЧ','GEVOR','ZUGANOV GEVORG'],
['ЧИРКАШ/CHIRKASH','ТАИС КОНДРАТЬЕВИЧ','TAIS','CHIRKASH NAIL'],
['ЕРШОВ/ERSHOV','БРУНО НАУМОВИЧ','BRUNO','BRUNOV MARAT'],
['РУЧКИН/RUCHKIN','МАРАТ МАКСОВИЧ','MARAT','RUCHKIN IGOR'],
['ЗЫРЯНОВ/ZYRIANOV','МОИСЕЙ АЛЕКСЕЕВИЧ','MOISEI','ZYRIAN MOISEI'],
['МЯУКИН/MIAUKIN','ЭМИН ЯРОСЛАВОВИЧ','EHMIN','MIAUKIN EMIL'],
['ЛЮБОВ/LIUBOV','ЮЛИЙ ВЛАДИМИРОВИЧ','IULII','LIUBOV IURII'],
['КОЛЛЕРОВ/KOLLEROV','АЗАРИЙ ОЛЕГОВИЧ','AZARII','KOLLEROV ARSLAN'],
['ЮГАНЦЕВ/IUGANTSEV','ХРИСТИАН ГЕРМАНОВИЧ','KHRISTIAN','IUGANTSEV AVRAAM'],
['ПРОХОРОВ/PROKHOROV','ПЕТР ВЛАДИМИРОВИЧ','PETR','PROKHOR PETR'],
['КОРНЕНЕВ/KORNENEV','ВАЛЕНТИН АКИМОВИЧ','VALENTIN','KORENEV VALENTIN'],
['АБРАМОВ/ABRAMOV','АРСЛАН АНДРЕЕВИЧ','ARSLAN','ABRAMIN ARSLAN'],
['МИЛЮКОВ/MILIUKOV','ГЕОРГИЙ СЕРГЕЕВИЧ','GEORGII','MELIUKIN GEORGII'],
['ШАЛЯПИН/SHALIAPIN','ЕРМОЛАЙ РОБЕРТОВИЧ','ERMOLAI','SHALIAPIN  FEDOR'],
['ДУРОВ/DUROV','ЖАН АНДРЕЕВИЧ','ZHAN','DUROV SERGEY'],
['МУХОМОРОВ/MUKHOMOROV','АВРААМ МАТВЕЕВИЧ','AVRAAM','MOROSHKIN AVRAAM'],
['МОРОШКИН/MOROSHKIN','ФИЛИПП АЛЕКСЕЕВИЧ','FILIPP','MOROSHKIN AVRAAM'],
['СЕВЕРИНОВ/SEVERINOV','ВАЛЕРИЙ ВАЛЕНТИНОВИЧ','VALERII','SEVERIN VALERII'],
['КИЛЕССО/KILESSO','ФЕДОР ГРИГОРЬЕВИЧ','FEDOR','KILESISO MARTIN'],
['ТРУСОВ/TRUSOV','ФЛОРЕНТИЙ КОНДРАТЬЕВИЧ','FLORENTII','TRUSOV GLEB'],
['БИРЮКОВ/BIRIUKOV','ДОБРЫНЯ ГЕРАСИМОВИЧ','DOBRYNIA','BIRIUKOV GLEB'],
['СНАТКИН/SNATKIN','АЙРАТ АРТЕМОВИЧ','AIRAT','SHMATKO AIRAT'],
['БЕЛОГЛАЗОВ/BELOGLAZOV','ЕРЕМЕЙ МИТРОФАНОВИЧ','EREMEI','SEROGLAZOV EREMEI'],
['ТРУТНЕВ/TRUTNEV','ТЕРЕНТИЙ РУСЛАНОВИЧ','TERENTII','LUKOV TERENTII'],
['РАСПОПОВ/RASPOPOV','МАРТИН САВЕЛЬЕВИЧ','MARTIN','POPOV MARTIN'],
['ЛУКОВ/LUKOV','ОНИСИМ АДАМОВИЧ','ONISIM','LUKICH ONISIM'],
['ПОЛИЧЕВ/POLICHEV','АНДРЕЙ ФЕЛИКСОВИЧ','ANDREI','POLICHKO ANDREI'],
['БАРАНОВ/BARANOV','АГГЕЙ ТАРАСОВИЧ','AGGEI','BARANOV ANDREI'],
['БОРЦОВ/BORTSOV','АГАП ГЕННАДЬЕВИЧ','AGAP','BORTSOV ANDREI'],
['ЁЛКОВ/ELKOV','ВАЦЛАВ АФАНАСЬЕВИЧ','VATSLAV','ELKIN VATSLAV'],
['ШУРШАЛИН/SHURSHALIN','ВЛАДЛЕН ВАСИЛЬЕВИЧ','VLADLEN','SHURSHALIN  ILIA'],
['ЭТУШ/EHTUSH','ГАЯС ПРОХОРОВИЧ','GAIAS','EHTUSH GLEB'],
['КАРАНДАШОВ/KARANDASHOV','САМСОН ИВАНОВИЧ','SAMSON','KARONASHOV SAMSON'],
['ШАТАЛОВ/SHATALOV','ЛАЗАРЬ ЮЛЬЕВИЧ','LAZAR','SHATALOVICH LAZAR'],
['СВАЛОВ/SVALOV','ГЛЕБ КИРИЛЛОВИЧ','GLEB','SALOV GLEB'],
['АБРАМОВ/ABRAMOV','ИЛЬЯ ВЛАДИМИРОВИЧ','ILIA','ABRAMOV ANTON'],
['АНАНЬЕВ/ANANEV','АНТОН АРТЁМОВИЧ','ANTON','ANNIEV ANTON'],
['АНДРИАНОВ/ANDRIANOV','НИКОЛАЙ АРТЁМОВИЧ','NIKOLAI','ARIANOV NIKOLAI'],
['АНТОНОВ/ANTONOV','ДАНИИЛ АЛЕКСАНДРОВИЧ','DANIIL','ANTONOV GLEB'],
['АНТОНОВ/ANTONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','ANTONOV GLEB'],
['БОЛДЫРЕВ/BOLDYREV','МИХАИЛ ВЛАДИМИРОВИЧ','MIKHAIL','BOLDYREV  IVAN'],
['БОНДАРЕВ/BONDAREV','ВСЕВОЛОД РОМАНОВИЧ','VSEVOLOD','BOLDYREV VSEVOLOD'],
['БОРИСОВ/BORISOV','ЮРИЙ ВИКТОРОВИЧ','IURII','IURIEV BORIS'],
['БОРИСОВ/BORISOV','ИВАН АЛЕКСАНДРОВИЧ','IVAN','IVANOV BORIS'],
['БОЧАРОВ/BOCHAROV','ЗАХАР АНДРЕЕВИЧ','ZAKHAR','BOCHAROV MATVEI'],
['ВИНОГРАДОВ/VINOGRADOV','ИВАН ПАВЛОВИЧ','IVAN','GRABOV IVAN'],
['ВОЛКОВ/VOLKOV','ИВАН ИВАНОВИЧ','IVAN','VOLKOV ALEKSANDR'],
['ДАВЫДОВ/DAVYDOV','ПЛАТОН АЛЕКСАНДРОВИЧ','PLATON','DAVYDOV ARTEM'],
['ДЕНИСОВ/DENISOV','АЛЕКСАНДР МАКСИМОВИЧ','ALEKSANDR','ALEKSEEV DENIS'],
['ДМИТРИЕВ/DMITRIEV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','DMITRIEV SERGEY'],
['ДОРОФЕЕВ/DOROFEEV','АНДРЕЙ ИЛЬИЧ','ANDREI','DOROFEEV SERGEY'],
['ДЬЯКОВ/DIAKOV','АНДРЕЙ РОМАНОВИЧ','ANDREI','DIAKONOV ANDREI'],
['ЕГОРОВ/EGOROV','МИРОН АРТЁМОВИЧ','MIRON','EGORIN MIRON'],
['ЕМЕЛЬЯНОВ/EMELIANOV','АЛЕКСАНДР ДАНИИЛОВИЧ','ALEKSANDR','EMELIANOV ALEKSEI'],
['ЗАЙЦЕВ/ZAITSEV','АРТЁМ ЮРЬЕВИЧ','ARTEM','VOLKOV ARTEM'],
['ЗАХАРОВ/ZAKHAROV','ИВАН КИРИЛЛОВИЧ','IVAN','ZAKHAROV ARSEN'],
['ЗАХАРОВ/ZAKHAROV','ЕВГЕНИЙ АРТЁМОВИЧ','EVGENII','ZAKHAROV FEDOR'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ВЛАДИМИРОВИЧ','IVAN','ZAKHAROV ZAKHAR'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ЕГОРОВИЧ','IVAN','ZAKHAROV MIKHAIL'],
['ЗИМИН/ZIMIN','ФЁДОР СТЕПАНОВИЧ','FEDOR','ZEMIN FEDOR'],
['ЗОЛОТОВ/ZOLOTOV','МИХАИЛ ГЕРМАНОВИЧ','MIKHAIL','MOLOTOV MIKHAIL'],
['ЗОРИН/ZORIN','ИВАН НИКИТИЧ','IVAN','ZORKIN IVAN'],
['ЗУБОВ/ZUBOV','ЕГОР ФИЛИППОВИЧ','EGOR','ZUBOVICH EGOR'],
['ИВАНСКИЙ/IVANSKIY','САВЕЛИЙ АЛЕКСЕЕВИЧ','SAVELII','IVANOV SAVELII'],
['ИВАНОВ/IVANOV','АЛЕКСАНДР САВЕЛЬЕВИЧ','ALEKSANDR','IVANOV EGOR'],
['ИВАНОВ/IVANOV','ТИМУР РОМАНОВИЧ','TIMUR','PILANOV TIMUR'],
['ИГНАТОВ/IGNATOV','МАКАР АЛЕКСАНДРОВИЧ','MAKAR','IPATOV MAKAR'],
['КАЛИНИН/KALININ','АРТЁМ ИЛЬИЧ','ARTEM','KAMININ ARTEM'],
['КАЛМЫКОВ/KALMYKOV','АРТУР ФЁДОРОВИЧ','ARTUR','KALMYKOV ARTEM'],
['КАРАСЕВ/KARASEV','МИРОСЛАВ ГЕОРГИЕВИЧ','MIROSLAV','OKUNEV MIROSLAV'],
['КАРПОВ/KARPOV','МАРК ВЛАДИМИРОВИЧ','MARK','RIBIN MARK'],
['КИРЕЕВ/KIREEV','ВЛАДИМИР ВЛАДИМИРОВИЧ','VLADIMIR','KIR VLADIMIR'],
['КИРИЛЛОВ/KIRILLOV','ЕЛИСЕЙ ТИМОФЕЕВИЧ','ELISEI','ELISEEV KIRILL'],
['КЛИМОВ/KLIMOV','ЛЕВ КОНСТАНТИНОВИЧ','LEV','KIMOV LEONID'],
['КОВАЛЕВ/KOVALEV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','KOVALEV LEONID'],
['КОМАРОВ/KOMAROV','МАКСИМ МИХАЙЛОВИЧ','MAKSIM','KOMAROV LEONID'],
['КОНОВАЛОВ/KONOVALOV','ДМИТРИЙ ИВАНОВИЧ','DMITRII','KONOPLIANKO DMITRII'],
['КОШЕЛЕВ/KOSHELEV','АРТЁМ ЗАХАРОВИЧ','ARTEM','KOSHELEV ARTUR'],
['КУЗНЕЦОВ/KUZNETSOV','ФИЛИПП МИРОНОВИЧ','FILIPP','FILIPOV FILIPP'],
['КУЗНЕЦОВ/KUZNETSOV','ДМИТРИЙ ТИМОФЕЕВИЧ','DMITRII','KUZNETSOV KONSTANTIN'],
['КУЗНЕЦОВ/KUZNETSOV','ГЛЕБ МАРКОВИЧ','GLEB','KUZNETSOV KONSTANTIN'],
['КУЗЬМИН/KUZMIN','ВАЛЕРИЙ СЕРГЕЕВИЧ','VALERII','KUZIN VALERII'],
['КУПРИЯНОВ/KUPRIIANOV','КОНСТАНТИН МАКСИМОВИЧ','KONSTANTIN','KUPIDONOV KONSTANTIN'],
['ЛАЗАРЕВ/LAZAREV','АРТЁМ ГОРДЕЕВИЧ','ARTEM','LAZAREV VADIM'],
['ЛАРИН/LARIN','ВАДИМ ДАНИИЛОВИЧ','VADIM','LARIN KIRILL'],
['ЛАТЫШЕВ/LATYSHEV','КИРИЛЛ НИКОЛАЕВИЧ','KIRILL','LATYSHIN KIRILL'],
['ЛЕБЕДЕВ/LEBEDEV','ТИМУР МАКСИМОВИЧ','TIMUR','LEBEDEV SERGEI'],
['ЛЕВИН/LEVIN','ГЕОРГИЙ МАРКОВИЧ','GEORGII','LEVIN SERGEI'],
['МАЙОРОВ/MAIOROV','СЕРГЕЙ ДЕНИСОВИЧ','SERGEI','MARKELOV SERGEI'],
['МАЛЫШЕВ/MALYSHEV','НИКОЛАЙ ГЛЕБОВИЧ','NIKOLAI','MALYSHKIN NIKOLAI'],
['МАЛЫШЕВ/MALYSHEV','ТИХОН СТЕПАНОВИЧ','TIKHON','MALYSHEV PAVEL'],
['МАРКЕЛОВ/MARKELOV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','MARKELOV DENIS'],
['МАРКИН/MARKIN','ДЕНИС ИЛЬИЧ','DENIS','NARYSHEV DENIS'],
['МАРКОВ/MARKOV','СЕРГЕЙ МИХАЙЛОВИЧ','SERGEI','MARKIN SERGEI'],
['МЕЛЬНИКОВ/MELNIKOV','ДЕНИС БОГДАНОВИЧ','DENIS','MELNIKOV SERGEI'],
['МОРОЗОВ/MOROZOV','КОНСТАНТИН НИКИТИЧ','KONSTANTIN','MOROZ PAVEL'],
['НИКИТИН/NIKITIN','МАТВЕЙ КОНСТАНТИНОВИЧ','MATVEI','NIKITENKO MATVEI'],
['НИКОЛАЕВ/NIKOLAEV','АРТЁМ МАКАРОВИЧ','ARTEM','NIKOLAEV EGOR'],
['НИКОЛАЕВ/NIKOLAEV','ВЯЧЕСЛАВ МАРКОВИЧ','VIACHESLAV','NIKOLAEV EGOR'],
['ОВСЯННИКОВ/OVSIANNIKOV','МАКСИМ НИКИТИЧ','MAKSIM','OVSIANKO MAKSIM'],
['ОРЛОВ/ORLOV','РОМАН МАКСИМОВИЧ','ROMAN','ORLOV EGOR'],
['ОСИПОВ/OSIPOV','ЕГОР ВЯЧЕСЛАВОВИЧ','EGOR','OSIPOV VLADIMIR'],
['ПЕТРОВ/PETROV','ВЛАДИМИР КИРИЛЛОВИЧ','VLADIMIR','VLADIMIROV PETR'],
['ПЕТРОВСКИЙ/PETROVSKII','НИКИТА АЛЕКСЕЕВИЧ','NIKITA','PETROV NIKITA'],
['ПЛАТОНОВ/PLATONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','PLATONOV IVAN'],
['ПОПОВ/POPOV','ИВАН МАКСИМОВИЧ','IVAN','POPOVICH IVAN'],
['ПОПОВ/POPOV','НИКИТА ВЛАДИМИРОВИЧ','NIKITA','ROGOV NIKITA'],
['ПОПОВ/POPOV','ГЛЕБ РОМАНОВИЧ','GLEB','POPOV PAVEL'],
['РОМАНОВ/ROMANOV','ПАВЕЛ НИКИТИЧ','PAVEL','ROMANOV ALEKSEI'],
['САЗОНОВ/SAZONOV','ГРИГОРИЙ АЛЕКСАНДРОВИЧ','GRIGORII','SAZAN GRIGORII'],
['СЕВАСТЬЯНОВ/SEVASTIANOV','ГЛЕБ МАТВЕЕВИЧ','GLEB','SEVASTIANOV LEV'],
['СЕМЕНОВ/SEMENOV','РОБЕРТ ЕВГЕНЬЕВИЧ','ROBERT','SEMENOV ALEKSEI'],
['СМИРНОВ/SMIRNOV','ЛЕВ АРТЁМОВИЧ','LEV','SMIRNOV PETR'],
['СМИРНОВ/SMIRNOV','МИРОН МАРКОВИЧ','MIRON','SMIRNOV LEV'],
['СОКОЛОВ/SOKOLOV','АЛЕКСЕЙ ГЕОРГИЕВИЧ','ALEKSEI','ALEKSEEV IVAN'],
['СОЛОВЬЕВ/SOLOVEV','ИВАН ЛЕОНИДОВИЧ','IVAN','PCHELKIN IVAN'],
['СПИРИДОНОВ/SPIRIDONOV','МИХАИЛ АРТЁМОВИЧ','MIKHAIL','SPIRIDONOV MATVEI'],
['СУСЛОВ/SUSLOV','ФЁДОР РУСЛАНОВИЧ','FEDOR','SUSLOVICH FEDOR'],
['УВАРОВ/UVAROV','МАТВЕЙ ДАНИИЛОВИЧ','MATVEI','LAVROV MATVEI'],
['УЛЬЯНОВ/ULIANOV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','ULIANOV VLADIMIR'],
['ФЕДОСЕЕВ/FEDOSEEV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','FEDOSEEV IVAN'],
['ФЕДОТОВ/FEDOTOV','ЛЕВ ИЛЬИЧ','LEV','FEDOROV LEV'],
['ФИЛИППОВ/FILIPPOV','ЕГОР АРТЁМОВИЧ','EGOR','FILIPPOV ILIA'],
['ЦАРЕВ/TSAREV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','KOROLEV PAVEL'],
['ЧЕРНЫХ/CHERNYKH','ГЕОРГИЙ АЛЕКСАНДРОВИЧ','GEORGII','CHERNOV GEORGII'],
['ЧЕРНЫШЕВ/CHERNYSHEV','МАРК ЕЛИСЕЕВИЧ','MARK','CHERNOV MARK'],
['ЧЕРНЫШЕВ/CHERNYSHEV','АРТЁМ МАРКОВИЧ','ARTEM','CHERNYSHEVSKII ARTEM'],
['ЧИСТЯКОВ/CHISTIAKOV','ГЕРМАН ГЕОРГИЕВИЧ','GERMAN','CHISTIAKOVSKII GERMAN'],
['ЧИСТЯКОВ/CHISTIAKOV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','CHISTIAKIN DMITRII'],
['ЧУМАКОВ/CHUMAKOV','МИРОСЛАВ КОНСТАНТИНОВИЧ','MIROSLAV','CHUMAK MIROSLAV'],
['ЧУМАКОВ/CHUMAKOV','АРСЕНИЙ ДАНИИЛОВИЧ','ARSENII','SIMAKOV ARSENII'],
['ШАРОВ/SHAROV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','SHAROV EGOR'],
['ШИРЯЕВ/SHIRIAEV','ЕГОР ГЕОРГИЕВИЧ','EGOR','SHIRIAEV EGOR'],
['ШМЕЛЕВ/SHMELEV','АНДРЕЙ КИРИЛЛОВИЧ','ANDREI','SHIMKO ANDREI'],
['ЩУКИН/SHCHUKIN','РОМАН МИХАЙЛОВИЧ','ROMAN','SHCHUKIN ANTON'],
					
];


 
 var quotes_g = [
    ["ИВАНОВА/IVANOVA ","СВЕТЛАНА НИКОЛАЕВНА ","SVETLANA","IVANOVA SVETLANA"],
    ['АКСЁНОВА/AKSENOVA','РАИСА МАКСИМОВНА','RAISA','AKSENOVA RAISA'],
['ТЯГАЙ/TIAGAI','КАПИТОЛИНА АНАТОЛИЕВНА','KAPITOLINA','TIAGAI KAPITOLINA'],
['КРЫЛОВА/KRYLOVA','НЕЛЛИ РОМАНОВНА','NELLI','KRYLOVA NELLI'],
['БАЧЕЙ/BACHEI','СОФИЯ МАКСИМОВНА','SOFIIA','BACHEI SOFIIA'],
['САФОНОВА/SAFONOVA','ИЗОЛЬДА АНДРЕЕВНА','IZOLDA','SAFONOVA IZOLDA'],
['ЖЕЛИБА/ZHELIBA','ЯНИНА АРТЁМОВНА','IANINA','ZHELIBA IANINA'],
['ЗАЙЦЕВА/ZAITSEVA','ГРЕТА БРОНИСЛАВОВНА','GRETA','ZAITSEVA GRETA'],
['ХИЖНЯК/KHIZHNIAK','ФЕДОСЬЯ ЛЬВОВНА','FEDOSIA','KHIZHNIAK FEDOSIA'],
['КОЛОМОЕЦ/KOLOMOETS','ДИНА ГРИГОРЬЕВНА','DINA','KOLOMOETS DINA'],
['ЛАРИОНОВА/LARIONOVA','ИРИНА ЯРОСЛАВОВНА','IRINA','LARIONOVA IRINA'],
['ПРИТУЛА/PRITULA','ЭЛЬВИРА ВИТАЛИЕВНА','ELVIRA','PRITULA ELVIRA'],
['ПОНОМАРЕНКО/PONOMARENKO','РЕНАТА ЯРОСЛАВОВНА','RENATA','PONOMARENKO RENATA'],
['ВОРОНЦОВА/VORONTSOVA','ЦАРА ФЁДОРОВНА','TSARA','VORONTSOVA TSARA'],
['ШИРЯЕВА/SHIRIAEVA','ХИЛЬДА ГРИГОРЬЕВНА','KHILDA','SHIRIAEVA KHILDA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ЮНОНА ЛЬВОВНА','IUNONA','ZHURAVLEVA IUNONA'],
['ТЕРЕНТЬЕВА/TERENTEVA','ЮНА ВАДИМОВНА','IUNA','TERENTEVA IUNA'],
['ПЕРЕДРИЙ/PEREDRII','ИРИНА ИВАНОВНА','IRINA','PEREDRII IRINA'],
['СМИРНОВА/SMIRNOVA','ФАИНА АНДРЕЕВНА','FAINA','SMIRNOVA FAINA'],
['БОРОДАЙ/BORODAI','ИЗОЛЬДА ВАЛЕРИЕВНА','IZOLDA','BORODAI IZOLDA'],
['МАСЛОВСКА/MASLOVSKA','МАРИЯ ДМИТРИЕВНА','MARIIA','MASLOVSKA MARIIA'],
['ГОРДЕЕВА/GORDEEVA','ОЛЬГА МИХАЙЛОВНА','OLGA','GORDEEVA OLGA'],
['ЛУКИНА/LUKINA','ЯНИНА ДМИТРИЕВНА','IANINA','LUKINA IANINA'],
['ВАЛЬКОВСКА/VALKOVSKA','БЕРТА ПЛАТОНОВНА','BERTA','VALKOVSKA BERTA'],
['ГОЛУБЕВА/GOLUBEVA','ЙОЛАНТА ЮХИМОВНА','IOLANTA','GOLUBEVA IOLANTA'],
['ТЯГАЙ/TIAGAI','ЙАНА ИВАНОВНА','IANA','TIAGAI IANA'],
['АНИСИМОВА/ANISIMOVA','РЕГИНА АРТЁМОВНА','REGINA','ANISIMOVA REGINA'],
['ШЕВЧЕНКО/SHEVCHENKO','ЭЛЛАДА БОРИСОВНА','ELLADA','SHEVCHENKO ELLADA'],
['ШАРАПОВА/SHARAPOVA','ЯСЯ ЮХИМОВНА','IASIA','SHARAPOVA IASIA'],
['СКЛЯРЕНКО/SKLIARENKO','ГЮЗЕЛЬ ВИТАЛИЕВНА','GIUZEL','SKLIARENKO GIUZEL'],
['СЕЛЕЗНЁВА/SELEZNEVA','ЭСМЕРАЛЬДА ЛЬВОВНА','ESMERALDA','SELEZNEVA ESMERALDA'],
['ШУМИЛО/SHUMILO','СОФЬЯ ЛЕОНИДОВНА','SOFIA','SHUMILO SOFIA'],
['КУЗНЕЦОВА/KUZNETSOVA','РОЗАЛИНА ФЁДОРОВНА','ROZALINA','KUZNETSOVA ROZALINA'],
['ГАМУЛА/GAMULA','ФЛОРЕНТИНА ВАСИЛЬЕВНА','FLORENTINA','GAMULA FLORENTINA'],
['ВОРОНЦОВА/VORONTSOVA','ТАТЬЯНА ДАНИЛОВНА','TATIANA','VORONTSOVA TATIANA'],
['БОРИСОВА/BORISOVA','НИНА МИХАЙЛОВНА','NINA','BORISOVA NINA'],
['СУХАНОВА/SUKHANOVA','ЮНОНА ГРИГОРЬЕВНА','IUNONA','SUKHANOVA IUNONA'],
['ЯЛОВА/IALOVA','ЕВГЕНИЯ БОРИСОВНА','EVGENIIA','IALOVA EVGENIIA'],
['ЧУМАК/CHUMAK','ОЛЕСЯ СТАНИСЛАВОВНА','OLESIA','CHUMAK OLESIA'],
['ФОМИНА/FOMINA','ЭДИТА ПЕТРОВНА','EDITA','FOMINA EDITA'],
['ТЯГАЙ/TIAGAI','ФЕДОСЬЯ ВИТАЛИЕВНА','FEDOSIA','TIAGAI FEDOSIA'],
['ОСТРОЖСКА/OSTROZHSKA','ЭЛЬМИРА МИХАЙЛОВНА','ELMIRA','OSTROZHSKA ELMIRA'],
['ДЕНИСОВА/DENISOVA','АЛЬБИНА ВАСИЛЬЕВНА','ALBINA','DENISOVA ALBINA'],
['ПОЛЯКОВА/POLIAKOVA','РЕГИНА МИХАЙЛОВНА','REGINA','POLIAKOVA REGINA'],
['БАЧЕЙ/BACHEI','ЖАКЛИН ДАНИЛОВНА','ZHAKLIN','BACHEI ZHAKLIN'],
['МИРНА/MIRNA','ШУШАНА ВИКТОРОВНА','SHUSHANA','MIRNA SHUSHANA'],
['МЕДВЕДЕВА/MEDVEDEVA','СОФИЯ ГРИГОРЬЕВНА','SOFIIA','MEDVEDEVA SOFIIA'],
['МУРАВЬЁВА/MURAVEVA','ЗЛАТА ГРИГОРЬЕВНА','ZLATA','MURAVEVA ZLATA'],
['МОИСЕЕВА/MOISEEVA','ПОЛИНА РОМАНОВНА','POLINA','MOISEEVA POLINA'],
['РЫБАКОВА/RYBAKOVA','АЛЁНА ЮХИМОВНА','ALENA','RYBAKOVA ALENA'],
['ОВЧАРЕНКО/OVCHARENKO','ЙОЛИКА ЛЕОНИДОВНА','IOLIKA','OVCHARENKO IOLIKA'],
['БИРЮКОВА/BIRIUKOVA','РАДА РОМАНОВНА','RADA','BIRIUKOVA RADA'],
['ШУМИЛО/SHUMILO','ЮНА АЛЕКСЕЕВНА','IUNA','SHUMILO IUNA'],
['МАСЛОВА/MASLOVA','ИНЕССА АЛЕКСЕЕВНА','INESSA','MASLOVA INESSA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ПОЛИНА ВИТАЛИЕВНА','POLINA','ZHURAVLEVA POLINA'],
['КОМАРОВА/KOMAROVA','ЕВА ИВАНОВНА','EVA','KOMAROVA EVA'],
['СПИВАК/SPIVAK','ЭЛИНА ВАЛЕРИЕВНА','ELINA','SPIVAK ELINA'],
['ВАЛЬКОВСКА/VALKOVSKA','ЕЛЕНА АРТЁМОВНА','ELENA','VALKOVSKA ELENA'],
['МИЛОСЛАВСКА/MILOSLAVSKA','УЛЬЯНА ПЕТРОВНА','ULIANA','MILOSLAVSKA ULIANA'],
['ИСАКОВА/ISAKOVA','ЗИНАИДА ЕВГЕНЬЕВНА','ZINAIDA','ISAKOVA ZINAIDA'],
['ЩЕРБАКОВА/SHCHERBAKOVA','ЖАКЛИН ВАЛЕРИЕВНА','ZHAKLIN','SHCHERBAKOVA ZHAKLIN'],
['БОРИСОВА/BORISOVA','ЕЛЕНА АЛЕКСЕЕВНА','ELENA','BORISOVA ELENA'],
['ТИТОВА/TITOVA','КЛАВДИЯ ПЕТРОВНА','KLAVDIIA','TITOVA KLAVDIIA'],
['ПОЛЯКОВА/POLIAKOVA','СОФИЯ БРОНИСЛАВОВНА','SOFIIA','POLIAKOVA SOFIIA'],
['АБРАМОВА/ABRAMOVA','НОННА ВАДИМОВНА','NONNA','ABRAMOVA NONNA'],
['ПЕТРОВА/PETROVA','ИРИНА ЛЕОНИДОВНА','IRINA','PETROVA IRINA'],
['КИРИЛЛОВА/KIRILLOVA','ЛИДИЯ АЛЕКСЕЕВНА','LIDIIA','KIRILLOVA LIDIIA'],
['ЗЫКОВА/ZYKOVA','УСТИНЬЯ МАКСИМОВНА','USTINIA','ZYKOVA USTINIA'],
['БОЛЬШАКОВА/BOLSHAKOVA','НИКА СЕРГЕЕВНА','NIKA','BOLSHAKOVA NIKA'],
['АФАНАСЬЕВА/AFANASEVA','ЦЕЗАРИЯ ЕВГЕНЬЕВНА','TSEZARIIA','AFANASEVA TSEZARIIA'],
['ГОРБАЧЁВА/GORBACHEVA','ГРАЖИНА ПЕТРОВНА','GRAZHINA','GORBACHEVA GRAZHINA'],
['ПЕРЕДРИЙ/PEREDRII','МАРТА ВАСИЛЬЕВНА','MARTA','PEREDRII MARTA'],
['МУРАВЬЁВА/MURAVEVA','НИНА БОГДАНОВНА','NINA','MURAVEVA NINA'],
['КОТОВСКА/KOTOVSKA','ХАРИТИНА ИВАНОВНА','KHARITINA','KOTOVSKA KHARITINA'],
['ФИЛИППОВА/FILIPPOVA','ИНГА ВЛАДИМИРОВНА','INGA','FILIPPOVA INGA'],
['НИКОНОВА/NIKONOVA','ЦЕЗАРИЯ ВАДИМОВНА','TSEZARIIA','NIKONOVA TSEZARIIA'],
['МЕЛЬНИКОВА/MELNIKOVA','УСТИНЬЯ ЭДУАРДОВНА','USTINIA','MELNIKOVA USTINIA'],
['КОТОВСКА/KOTOVSKA','УЛЬЯНА БРОНИСЛАВОВНА','ULIANA','KOTOVSKA ULIANA'],
['ЦВЕТКОВА/TSVETKOVA','ЭЛЬМИРА ЯРОСЛАВОВНА','ELMIRA','TSVETKOVA ELMIRA'],
['ГАМУЛА/GAMULA','ВИКТОРИЯ ВЛАДИМИРОВНА','VIKTORIIA','GAMULA VIKTORIIA'],
['АФАНАСЬЕВА/AFANASEVA','ЧЕЧИЛИЯ БРОНИСЛАВОВНА','CHECHILIIA','AFANASEVA CHECHILIIA'],
['ГЕЛЕТЕЙ/GELETEI','ЙООНИ ДМИТРИЕВНА','IOONI','GELETEI IOONI'],
['ПОНОМАРЕНКО/PONOMARENKO','ЕВГЕНИЯ ВАСИЛЬЕВНА','EVGENIIA','PONOMARENKO EVGENIIA'],
['СИМОНЕНКО/SIMONENKO','ЗИНАИДА ПЛАТОНОВНА','ZINAIDA','SIMONENKO ZINAIDA'],
['ВЛАДИМИРОВА/VLADIMIROVA','ВАСИЛИСА АЛЕКСЕЕВНА','VASILISA','VLADIMIROVA VASILISA'],
['ЗАХАРОВА/ZAKHAROVA','МАРИЯ БОРИСОВНА','MARIIA','ZAKHAROVA MARIIA'],
['БОЛЬШАКОВА/BOLSHAKOVA','ОЛЕСЯ МИХАЙЛОВНА','OLESIA','BOLSHAKOVA OLESIA'],
['КАБАНОВА/KABANOVA','ИНЕССА РОМАНОВНА','INESSA','KABANOVA INESSA'],
['КОВАЛЬЧУК/KOVALCHUK','ВАЛЕНТИНА ВЛАДИМИРОВНА','VALENTINA','KOVALCHUK VALENTINA'],
['МИРНА/MIRNA','ЦАРА ЕВГЕНЬЕВНА','TSARA','MIRNA TSARA'],
['ЧУМАК/CHUMAK','АЛЕКСАНДРА АЛЕКСАНДРОВНА','ALEKSANDRA','CHUMAK ALEKSANDRA'],
['КОПЫЛОВА/KOPYLOVA','УСТИНЬЯ ФЁДОРОВНА','USTINIA','KOPYLOVA USTINIA'],
['СЕРГЕЕВА/SERGEEVA','СОФЬЯ БРОНИСЛАВОВНА','SOFIA','SERGEEVA SOFIA'],
['КАРПОВА/KARPOVA','МАРИЯ МАКСИМОВНА','MARIIA','KARPOVA MARIIA'],
['ПОНОМАРЁВА/PONOMAREVA','ЧЕСЛАВА ВАДИМОВНА','CHESLAVA','PONOMAREVA CHESLAVA'],
['КИРИЛЕНКО/KIRILENKO','БЕАТРИСА АЛЕКСЕЕВНА','BEATRISA','KIRILENKO BEATRISA'],
['НЕКРАСОВА/NEKRASOVA','ЯНИНА БОРИСОВНА','IANINA','NEKRASOVA IANINA'],
['ШИЛОВА/SHILOVA','ЙОСИФА БРОНИСЛАВОВНА','IOSIFA','SHILOVA IOSIFA'],
['ЛАПИНА/LAPINA','ЯНИНА МИХАЙЛОВНА','IANINA','LAPINA IANINA'],
['ТАРАСОВА/TARASOVA','ШУШАНА АЛЕКСАНДРОВНА','SHUSHANA','TARASOVA SHUSHANA'],

	];
	
	var quotes_g2 = [
   ["ИВАНОВА/IVANOVA ","СВЕТЛАНА НИКОЛАЕВНА ","SVETLANA","IVANKOVA SVETLANA"],
    ['АКСЁНОВА/AKSENOVA','РАИСА МАКСИМОВНА','RAISA','AKSENOVA IRINA'],
['ТЯГАЙ/TIAGAI','КАПИТОЛИНА АНАТОЛИЕВНА','KAPITOLINA','TIAGAEVA KAPITOLINA'],
['КРЫЛОВА/KRYLOVA','НЕЛЛИ РОМАНОВНА','NELLI','KRYLOVA SOFIIA'],
['БАЧЕЙ/BACHEI','СОФИЯ МАКСИМОВНА','SOFIIA','BACHEI SVETLANA'],
['САФОНОВА/SAFONOVA','ИЗОЛЬДА АНДРЕЕВНА','IZOLDA','SAFONOVA IRINA'],
['ЖЕЛИБАVA/ZHELIBAVA','ЯНИНА АРТЁМОВНА','IANINA','ZHELIBA IANINA'],
['ЗАЙЦЕВА/ZAITSEVA','ГРЕТА БРОНИСЛАВОВНА','GRETA','ZAITSEVA IRINA'],
['ХИЖНЯК/KHIZHNIAK','ФЕДОСЬЯ ЛЬВОВНА','FEDOSIA','KHIZHNIAK DOSIA'],
['КОЛОМОЕЦ/KOLOMOETS','ДИНА ГРИГОРЬЕВНА','DINA','KOLOMOETS INNA'],
['ЛАРИОНОВА/LARIONOVA','ИРИНА ЯРОСЛАВОВНА','IRINA','LARINA IRINA'],
['ПРИТУЛА/PRITULA','ЭЛЬВИРА ВИТАЛИЕВНА','ELVIRA','PRITULA FAINA'],
['ПОНОМАРЕНКО/PONOMARENKO','РЕНАТА ЯРОСЛАВОВНА','RENATA','MARENKO RENATA'],
['ВОРОНЦОВА/VORONTSOVA','ЦАРА ФЁДОРОВНА','TSARA','NOSOVA TSARA'],
['ШИРЯЕВА/SHIRIAEVA','ХИЛЬДА ГРИГОРЬЕВНА','KHILDA','KIRIAEVA KHILDA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ЮНОНА ЛЬВОВНА','IUNONA','VORONOVA IUNONA'],
['ТЕРЕНТЬЕВА/TERENTEVA','ЮНА ВАДИМОВНА','IUNA','TERENTEVA IULIA'],
['ПЕРЕДРИЙ/PEREDRII','ИРИНА ИВАНОВНА','IRINA','PEREDRII MARIIA'],
['СМИРНОВА/SMIRNOVA','ФАИНА АНДРЕЕВНА','FAINA','SMIRNOVKO FAINA'],
['БОРОДАЙ/BORODAI','ИЗОЛЬДА ВАЛЕРИЕВНА','IZOLDA','BORODACH IZOLDA'],
['МАСЛОВСКА/MASLOVSKA','МАРИЯ ДМИТРИЕВНА','MARIIA','MASLOVSKA MILA'],
['ГОРДЕЕВА/GORDEEVA','ОЛЬГА МИХАЙЛОВНА','OLGA','GORDEENKO OLGA'],
['ЛУКИНА/LUKINA','ЯНИНА ДМИТРИЕВНА','IANINA','LUKINA IANA'],
['ВАЛЬКОВСКА/VALKOVSKA','БЕРТА ПЛАТОНОВНА','BERTA','VALGOVSKAIA BERTA'],
['ГОЛУБЕВА/GOLUBEVA','ЙОЛАНТА ЮХИМОВНА','IOLANTA','GOLUBEVA IRINA'],
['ТЯГАЙ/TIAGAI','ЯНА ИВАНОВНА','IANA','TIAGAI IASIA'],
['АНИСИМОВА/ANISIMOVA','РЕГИНА АРТЁМОВНА','REGINA','ANISHINA REGINA'],
['ШЕВЧЕНКО/SHEVCHENKO','ЭЛЛАДА БОРИСОВНА','ELLADA','SHEVCHENKO ELLA'],
['ШАРАПОВА/SHARAPOVA','ЯСЯ ЮХИМОВНА','IASIA','SHARAPOVICH IASIA'],
['СКЛЯРЕНКО/SKLIARENKO','ГЮЗЕЛЬ ВИТАЛИЕВНА','GIUZEL','SKLIARENKOVA GIUZEL'],
['СЕЛЕЗНЁВА/SELEZNEVA','ЭСМЕРАЛЬДА ЛЬВОВНА','ESMERALDA','SELEZNEVA FLORENTINA'],
['ШУМИЛО/SHUMILO','СОФЬЯ ЛЕОНИДОВНА','SOFIA','SHUMILO NINA'],
['КУЗНЕЦОВА/KUZNETSOVA','РОЗАЛИНА ФЁДОРОВНА','ROZALINA','KUZNETSOVA EVGENIIA'],
['ГАМУЛА/GAMULA','ФЛОРЕНТИНА ВАСИЛЬЕВНА','FLORENTINA','GAMULA EVGENIIA'],
['ВОРОНЦОВА/VORONTSOVA','ТАТЬЯНА ДАНИЛОВНА','TATIANA','VORONTSOVA NINA'],
['БОРИСОВА/BORISOVA','НИНА МИХАЙЛОВНА','NINA','BORINA NINA'],
['СУХАНОВА/SUKHANOVA','ЮНОНА ГРИГОРЬЕВНА','IUNONA','SUKHANOVA NINA'],
['ЯЛОВА/IALOVA','ЕВГЕНИЯ БОРИСОВНА','EVGENIIA','CHALOVA EVGENIIA'],
['ЧУМАК/CHUMAK','ОЛЕСЯ СТАНИСЛАВОВНА','OLESIA','CHUMAKOVA OLESIA'],
['ФОМИНА/FOMINA','ЭДИТА ПЕТРОВНА','EDITA','FOMICH EDITA'],
['ТЯГАЙ/TIAGAI','ФЕДОСЬЯ ВИТАЛИЕВНА','FEDOSIA','PETROVA FEDOSIA'],
['ОСТРОЖСКА/OSTROZHSKA','ЭЛЬМИРА МИХАЙЛОВНА','ELMIRA','OSTROZHSKA ALBINA'],
['ДЕНИСОВА/DENISOVA','АЛЬБИНА ВАСИЛЬЕВНА','ALBINA','DENISOVA OLESIA'],
['ПОЛЯКОВА/POLIAKOVA','РЕГИНА МИХАЙЛОВНА','REGINA','POLIAKOVA OLESIA'],
['БАЧЕЙ/BACHEI','ЖАКЛИН ДАНИЛОВНА','ZHAKLIN','BACHEI POLINA'],
['МИРНА/MIRNA','ШУШАНА ВИКТОРОВНА','SHUSHANA','MIRNA POLINA'],
['МЕДВЕДЕВА/MEDVEDEVA','СОФИЯ ГРИГОРЬЕВНА','SOFIIA','MEDVEDKO SOFIIA'],
['МУРАВЬЁВА/MURAVEVA','ЗЛАТА ГРИГОРЬЕВНА','ZLATA','MURAVEVA ALENA'],
['МОИСЕЕВА/MOISEEVA','ПОЛИНА РОМАНОВНА','POLINA','MOISEEVA ALENA'],
['РЫБАКОВА/RYBAKOVA','АЛЁНА ЮХИМОВНА','ALENA','RUDAKOVA ALENA'],
['ОВЧАРЕНКО/OVCHARENKO','ЙОЛИКА ЛЕОНИДОВНА','IOLIKA','OVCHARENKO INESSA'],
['БИРЮКОВА/BIRIUKOVA','РАДА РОМАНОВНА','RADA','BIRIUK RADA'],
['ШУМИЛО/SHUMILO','ЮНА АЛЕКСЕЕВНА','IUNA','SHIMKO IUNA'],
['МАСЛОВА/MASLOVA','ИНЕССА АЛЕКСЕЕВНА','INESSA','MASLOVICH INESSA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ПОЛИНА ВИТАЛИЕВНА','POLINA','ZHURAVLEVA ELINA'],
['КОМАРОВА/KOMAROVA','ЕВА ИВАНОВНА','EVA','ROGOVA EVA'],
['СПИВАК/SPIVAK','ЭЛИНА ВАЛЕРИЕВНА','ELINA','SPIVACH ELINA'],
['ВАЛЬКОВСКА/VALKOVSKA','ЕЛЕНА АРТЁМОВНА','ELENA','VALKOVSKA ELINA'],
['МИЛОСЛАВСКА/MILOSLAVSKA','УЛЬЯНА ПЕТРОВНА','ULIANA','MILOVKO ULIANA'],
['ИСАКОВА/ISAKOVA','ЗИНАИДА ЕВГЕНЬЕВНА','ZINAIDA','ISAKOVA ELENA'],
['ЩЕРБАКОВА/SHCHERBAKOVA','ЖАКЛИН ВАЛЕРИЕВНА','ZHAKLIN','SHCHERBAK ZHAKLIN'],
['БОРИСОВА/BORISOVA','ЕЛЕНА АЛЕКСЕЕВНА','ELENA','BORINA ELENA'],
['ТИТОВА/TITOVA','КЛАВДИЯ ПЕТРОВНА','KLAVDIIA','TITOVA ELENA'],
['ПОЛЯКОВА/POLIAKOVA','СОФИЯ БРОНИСЛАВОВНА','SOFIIA','POLIAKOVA IRINA'],
['АБРАМОВА/ABRAMOVA','НОННА ВАДИМОВНА','NONNA','ABRAMOVA IRINA'],
['ПЕТРОВА/PETROVA','ИРИНА ЛЕОНИДОВНА','IRINA','PETROVICH IRINA'],
['КИРИЛЛОВА/KIRILLOVA','ЛИДИЯ АЛЕКСЕЕВНА','LIDIIA','KIRILLOVA IRINA'],
['ЗЫКОВА/ZYKOVA','УСТИНЬЯ МАКСИМОВНА','USTINIA','ZYKOVA IRINA'],
['БОЛЬШАКОВА/BOLSHAKOVA','НИКА СЕРГЕЕВНА','NIKA','MENSHAKOVA NIKA'],
['АФАНАСЬЕВА/AFANASEVA','ЦЕЗАРИЯ ЕВГЕНЬЕВНА','TSEZARIIA','AFANASEVA NINA'],
['ГОРБАЧЁВА/GORBACHEVA','ГРАЖИНА ПЕТРОВНА','GRAZHINA','GORBACHEVA NINA'],
['ПЕРЕДРИЙ/PEREDRII','МАРТА ВАСИЛЬЕВНА','MARTA','PEREDOVA MARTA'],
['МУРАВЬЁВА/MURAVEVA','НИНА БОГДАНОВНА','NINA','MURASHEVA NINA'],
['КОТОВСКА/KOTOVSKA','ХАРИТИНА ИВАНОВНА','KHARITINA','MITOVSKA KHARITINA'],
['ФИЛИППОВА/FILIPPOVA','ИНГА ВЛАДИМИРОВНА','INGA','FILIPPOVA INNA'],
['НИКОНОВА/NIKONOVA','ЦЕЗАРИЯ ВАДИМОВНА','TSEZARIIA','NIKONOVA ULIANA'],
['МЕЛЬНИКОВА/MELNIKOVA','УСТИНЬЯ ЭДУАРДОВНА','USTINIA','MELNIKOVA ULIANA'],
['КОТОВСКА/KOTOVSKA','УЛЬЯНА БРОНИСЛАВОВНА','ULIANA','KOTOVSKA IANA'],
['ЦВЕТКОВА/TSVETKOVA','ЭЛЬМИРА ЯРОСЛАВОВНА','ELMIRA','TSVETKOVA ULIANA'],
['ГАМУЛА/GAMULA','ВИКТОРИЯ ВЛАДИМИРОВНА','VIKTORIIA','GAMULOVA VIKTORIIA'],
['АФАНАСЬЕВА/AFANASEVA','ЧЕЧИЛИЯ БРОНИСЛАВОВНА','CHECHILIIA','AFANASEVA VIKTORIIA'],
['ГЕЛЕТЕЙ/GELETEI','ЙООНИ ДМИТРИЕВНА','IOONI','GELETEI VIKTORIIA'],
['ПОНОМАРЕНКО/PONOMARENKO','ЕВГЕНИЯ ВАСИЛЬЕВНА','EVGENIIA','MARENKO ZINAIDA'],
['СИМОНЕНКО/SIMONENKO','ЗИНАИДА ПЛАТОНОВНА','ZINAIDA','SIMONENKO ULIANA'],
['ВЛАДИМИРОВА/VLADIMIROVA','ВАСИЛИСА АЛЕКСЕЕВНА','VASILISA','VLADIMIROVA MARIIA'],
['ЗАХАРОВА/ZAKHAROVA','МАРИЯ БОРИСОВНА','MARIIA','ZAKHARICH MARIIA'],
['БОЛЬШАКОВА/BOLSHAKOVA','ОЛЕСЯ МИХАЙЛОВНА','OLESIA','BOLSHAKOVA VALENTINA'],
['КАБАНОВА/KABANOVA','ИНЕССА РОМАНОВНА','INESSA','KONONOVA INESSA'],
['КОВАЛЬЧУК/KOVALCHUK','ВАЛЕНТИНА ВЛАДИМИРОВНА','VALENTINA','KOVALCHUK ALEKSANDRA'],
['МИРНА/MIRNA','ЦАРА ЕВГЕНЬЕВНА','TSARA','MIRNA ALEKSANDRA'],
['ЧУМАК/CHUMAK','АЛЕКСАНДРА АЛЕКСАНДРОВНА','ALEKSANDRA','CHUMAK SOFIA'],
['КОПЫЛОВА/KOPYLOVA','УСТИНЬЯ ФЁДОРОВНА','USTINIA','KOPYLOVA SOFIA'],
['СЕРГЕЕВА/SERGEEVA','СОФЬЯ БРОНИСЛАВОВНА','SOFIA','SEROVA SOFIA'],
['КАРПОВА/KARPOVA','МАРИЯ МАКСИМОВНА','MARIIA','KARPOVA MARTA'],
['ПОНОМАРЁВА/PONOMAREVA','ЧЕСЛАВА ВАДИМОВНА','CHESLAVA','PONOMAREVA MARIIA'],
['КИРИЛЕНКО/KIRILENKO','БЕАТРИСА АЛЕКСЕЕВНА','BEATRISA','KIRILENKO MARIIA'],
['НЕКРАСОВА/NEKRASOVA','ЯНИНА БОРИСОВНА','IANINA','NEKRASOVA MARTA'],
['ШИЛОВА/SHILOVA','ЙОСИФА БРОНИСЛАВОВНА','IOSIFA','SHILOVA MARTA'],
['ЛАПИНА/LAPINA','ЯНИНА МИХАЙЛОВНА','IANINA','LAPINA SOFIA'],
['ТАРАСОВА/TARASOVA','ШУШАНА АЛЕКСАНДРОВНА','SHUSHANA','TARASOICH SHUSHANA'],
	
	];

// фото людей
let instagramm = ['1-2.jpg','2-2.jpg','3-2.jpg','4-2.jpg','5-2.jpg',
    '6-2.jpg','7-2.jpg','8-2.jpg','9-2.jpg','11-2.jpg','12-2.jpg','13-2.jpg','14-2.jpg',
    '15-2.jpg','16-2.jpg','17-2.jpg','18-2.jpg','19-2.jpg','20-2.jpg','22-2.jpg','23-2.jpg','24-2.jpg','25-2.jpg'
	,'30-2.jpg','31-2.jpg','32-2.jpg','33-2.jpg','34-2.jpg','35-2.jpg','36-2.jpg','37-2.jpg','38-2.jpg','39-2.jpg'
	,'40-2.jpg','41-2.jpg','42-2.jpg','43-2.jpg','44-2.jpg','45-2.jpg','46-2.jpg','47-2.jpg','48-2.jpg','49-2.jpg'
	,'50-2.jpg','51-2.jpg','52-2.jpg','53-2.jpg','54-2.jpg','55-2.jpg','56-2.jpg','57-2.jpg','58-2.jpg','59-2.jpg'
	,'60-2.jpg','61-2.jpg','62-2.jpg','63-2.jpg','64-2.jpg','65-2.jpg','66-2.jpg',
	
	'71-1.jpg','72-1.jpg','73-1.jpg','74-1.jpg','75-1.jpg','76-1.jpg','77-1.jpg','78-1.jpg',
	'79-1.jpg','80-1.jpg','81-1.jpg','82-1.jpg','83-1.jpg','84-1.jpg','85-1.jpg','86-1.jpg',
	'87-1.jpg','88-1.jpg','89-1.jpg','90-1.jpg','91-1.jpg','92-1.jpg','93-1.jpg','94-1.jpg',
	'95-1.jpg','96-1.jpg','97-1.jpg','98-1.jpg','99-1.jpg','100-1.jpg','101-1.jpg','102-1.jpg','103-1.jpg','104-1.jpg'	];
	
let passport = ['3.jpg','4.jpg','1.jpg','2.jpg','9.jpg','7.jpg','6.jpg','2.jpg',
                                                     '5.jpg','12.jpg','11.jpg','14.jpg','20.jpg','13.jpg','19.jpg',
        '18.jpg','16.jpg','17.jpg','15.jpg','25.jpg','24.jpg','23.jpg','22.jpg'
		,'31.jpg','30.jpg','34.jpg','32.jpg','31.jpg','36.jpg','35.jpg','38.jpg','37.jpg','40.jpg'
		,'39.jpg','43.jpg','41.jpg','42.jpg','46.jpg','44.jpg','45.jpg','49.jpg','47.jpg','48.jpg'
		,'51.jpg','50.jpg','54.jpg','55.jpg','52.jpg','53.jpg','57.jpg','56.jpg','59.jpg','58.jpg'
		,'61.jpg','62.jpg','63.jpg','64.jpg','65.jpg','66.jpg','60.jpg',
		
		'72.jpg','71.jpg','74.jpg','73.jpg','77.jpg','75.jpg','76.jpg','79.jpg','78.jpg',	
		'82.jpg','80.jpg','81.jpg','84.jpg','83.jpg','86.jpg','85.jpg','88.jpg','87.jpg',
		'91.jpg','89.jpg','90.jpg','94.jpg','92.jpg','93.jpg','96.jpg','95.jpg','98.jpg',
		'97.jpg','100.jpg','99.jpg','104.jpg','103.jpg','102.jpg','101.jpg',
		
		]; 
let passport_false = ['1.jpg','2.jpg','3.jpg','4.jpg','5.jpg','6.jpg','7.jpg','8.jpg',
        '9.jpg','11.jpg','12.jpg','13.jpg','14.jpg','15.jpg',
        '16.jpg','17.jpg','18.jpg','19.jpg','20.jpg','22.jpg','23.jpg','24.jpg','25.jpg'
		,'30.jpg','31.jpg','32.jpg','33.jpg','34.jpg','35.jpg','36.jpg','37.jpg','38.jpg','39.jpg'
		,'40.jpg','41.jpg','42.jpg','43.jpg','44.jpg','45.jpg','46.jpg','47.jpg','48.jpg','49.jpg'
		,'50.jpg','51.jpg','52.jpg','53.jpg','54.jpg','55.jpg','56.jpg','57.jpg','58.jpg','59.jpg'
		,'60.jpg','61.jpg','62.jpg','63.jpg','64.jpg','65.jpg','66.jpg',
		
		'71.jpg','72.jpg','73.jpg','74.jpg','75.jpg','76.jpg','77.jpg','78.jpg','79.jpg',	
		'80.jpg','81.jpg','82.jpg','83.jpg','84.jpg','85.jpg','86.jpg','87.jpg','88.jpg',
		'89.jpg','90.jpg','91.jpg','92.jpg','93.jpg','94.jpg','95.jpg','96.jpg','97.jpg',
		'98.jpg','99.jpg','100.jpg','101.jpg','102.jpg','103.jpg','104.jpg',
		];
		
let dyear=[30,29,25,27,30,29,28,24,28,34,35,36,22,30,31,24,30,29,25,27,30,33,31,51,38,44,43,46,35,40,42,50,49,36,40,45,46,39,41,67,56,42,39,50,40,67,57,43,49,38,60,46,47,60,47,43,45,43,39,30,
	
	25,26,28,23,28,30,29,19,29,31,33,31,32,26,28,22,26,30,31,32,56,59,62,64,66,26,28,30,32,33,34,30,32,35
];
var bannerdublikat = new Array('D-2.png','D-1.png','D-3.png','B-1.png','P-1.png','Z-1.png','v-1.png'); // картинки для индикации для dsm		

let axtung=0; // переменная нужна для блокирования картинки дубликата чтобы она не меняллась
let quote=[];
var ocenka=0; // оценка для внесения в бд
let timefortest1;

// demo1 посылаем данные в test2_.php
function demo1() {
  console.log('Taking a break...');
  
 let myVar = getCookie("id"); 
			
			if (errornomers>3){ocenka=2;} else {if (errornomers==3 || errornomers==2){ocenka=4;} else {ocenka=5;}} 
			//if (errornomers<4&&level==5){level=="5";}
			//if (timefortest<0) {ocenka=2;}

			timefortest1 = (timefortestnew-timefortest);   
			//var errorname = errornomers;
			myVar = 'nameUser='+ encodeURIComponent(myVar)+" "+encodeURIComponent(timefortest1)+" "+encodeURIComponent(errornomers)+" "+encodeURIComponent(level)+" "+encodeURIComponent(ocenka);   
			
			//myVar = 'nameMyVar=' + encodeURIComponent(myVar);
			//timefortest = 'nametimefortest=' + encodeURIComponent(timefortest);
			
			var request = new XMLHttpRequest();
			// 3. Настройка запроса
			request.open('POST','test2_.php',true);
			// 4. Подписка на событие onreadystatechange и обработка его с помощью анонимной функции
			
				//	с помощью которой зашифрован запрос. Это необходимо для того, чтобы сервер знал как его раскодировать.
			request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
    // 5. Отправка запроса на сервер. В качестве параметра указываем данные, которые необходимо передать (необходимо для POST)
			setTimeout(request.send(myVar),10);
			//request.send(myVar);
			//request.send(timefortest);
			//request.send(errorname);
           console.log("Hello A");

}

// demo2 выводим результаты на экран

function demo2() {setCookie('level', level);
			 setCookie('errornomers', errornomers);
			 setCookie('timefortest', timefortest1);
			 setCookie('timefortestnew', timefortestnew); 
			 setCookie('ocenka121', ocenka); 
			//alert (timefortest);
			 if (timefortest<=0) {setTimeout(document.location.href = "otchet3.php",200);} else {
				if (ocenka<3){setTimeout(document.location.href = "otchet2.php",200);}
			  else {setTimeout(document.location.href = "otchet.php",200);}}}


// demo ничего не делает
function demo() {document.location.href = "index2.html";}



function getCookie(name) {
	var cookie = " " + document.cookie;
	var search = " " + name + "=";
	var setStr = null;
	var offset = 0;
	var end = 0;
	if (cookie.length > 0) {
		offset = cookie.indexOf(search);
		if (offset != -1) {
			offset += search.length;
			end = cookie.indexOf(";", offset)
			if (end == -1) {
				end = cookie.length;
			}
			setStr = unescape(decodeURIComponent(cookie.substring(offset, end)));
		}
	}
	return(setStr);
}

function sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms));}


// testing функция вызова преподавателя
function testing(){ 
eval(function(p,a,c,k,e,r){e=function(c){return c.toString(a)};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 0=4.5("6=");7(1("2")==8||1("2")!=0){9.a.b="c.d"}',14,14,'ff|getCookie|testing|let|window|atob|ODkyNjM2MTY2NTk|if|null|document|location|href|index1|php'.split('|'),0,{}))}


function zetta() {
	
	if (getCookie("fname")==null){document.location.href = "index.php";}
		
	
    errornomer=0; hiden=1; dublikat=0; 
	if (dublikat!=1){img_dublikat = "images/"+bannerdublikat[0];
    document.getElementById('dublikat_id').src = img_dublikat;}

    var randomIndex = Math.floor(Math.random() * arr.length); // генерим случайный терминал
    var randomIndex2 = Math.floor(Math.random() * 100); // Верное ФИО? случайное число 1-100
    var randomIndex3 = Math.floor(Math.random() * 100); // Верный Паспррт? есть документы? случайное число 1-100
    var randomIndex4 = Math.floor(Math.random() * 60)+1; // гейт и рейс случайное число 1-100
    var randomIndex5 = Math.floor(Math.random() * 100); //Дубликат или нет данных случайное число 1-100
	var randomIndex6 = Math.floor(Math.random() * 100);
	var randomIndex7 = Math.floor(Math.random() * 100);
	var randomIndex8 = Math.floor(Math.random() * 100);	//терминал

    var randomPort = Math.floor(Math.random() * aeroport.length);
	
	let randomobl = Math.floor(Math.random() * oblast.length);
	
	let possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    
	
	possible = possible.charAt(Math.floor(Math.random() * possible.length));
	
	gate  = randomIndex4;  // номер выхода
    gate1  = randomIndex4; //DSM номер выхода
    
	rise  = possible + (randomIndex4*5);
	if (randomIndex4*5<1000){ rise  = possible +"0"+ (randomIndex4*5);} 
	if (randomIndex4*5<100){ rise  = possible +"00"+ (randomIndex4*5);}
	// dsm номер рейса
   // генерим ошибку в номере рейса
	if ( randomIndex2 < 5 ) { let possible1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	possible1 = possible1.charAt(Math.floor(Math.random() * possible1.length));
	rise1  = possible1 + (randomIndex4*5+2);
	if (randomIndex4*5<1000){ rise1  = possible1 +"0"+ (randomIndex4*5-10);} 
	if (randomIndex4*5<100){ rise1  = possible1 +"00"+ (randomIndex4*5-1);}
	errornomer=9; // ошибка рейс
	}else{rise1  = rise;}
	
	// генерим в место в самолете
	let seat = "ABCDEF";
	seat = seat.charAt(Math.floor(Math.random() * seat.length));
	seat = seat + (2+Math.floor(Math.random() * 31));
	console.log ("seat",seat);
	
	let godPass = (Math.floor(Math.random() * vegas.length));
	// генерим номер
	let seqno;
	seqno = (2+Math.floor(Math.random() * 130));
	if (seqno<100){seqno="0"+seqno;}
	if (seqno<10){seqno="0"+seqno;}
	
  // генерим номера паспорта
  var seria = Math.floor( Math.random() * 100 );
  var nomerpass =  Math.floor( Math.random() * 10000000 );
  var  nomer2 =seria+"№"+ nomerpass;
  var  nomer3 =seria + "№"+ (nomerpass + (Math.floor( Math.random() * 8 )+1)*10000);
  var  nomer4 =Math.floor( Math.random() * 100 )+"№"+ Math.floor( Math.random() * 10000000 );

   
	/*___________________________Массив и работа с фото__________________________________________________*/

		var count = passport.length;
		var random = Math.floor(Math.random()*count);
        if (level>=3 && randomIndex6 < 93 ) {
			  var img_instagramm = "players/people/"+instagramm[random];
			  var img_passport = "players/people/"+passport_false[random];
				}    else {var img_instagramm = "players/people/"+instagramm[random];
				var img_passport = "players/people/"+passport[random]; if (level>=3){ errornomer = 3;}}
				
				
				
				
    
     if (level==3 || level==4 || level==5 ) {document.getElementById('instagramm_id').src = img_instagramm;
     document.getElementById('passport_id').src = img_passport;}



   // выбираем случайную фразу из массива c верным или неверным 
   if ( randomIndex2 > 89 && random < 60) {quote = quotes2[ Math.floor( Math.random() * (quotes2.length-1) ) ];
    errornomer=2;}
	if ( randomIndex2 <= 89 && random < 60)		{ quote = quotes[ Math.floor( Math.random() * (quotes.length-1) ) ]; }
	
	if ( randomIndex2 > 89 && random >= 60) {quote = quotes_g2[ Math.floor( Math.random() * (quotes_g2.length-1) ) ];
    errornomer=2;}
	if ( randomIndex2 <= 89 && random >= 60)		{ quote = quotes_g[ Math.floor( Math.random() * (quotes_g.length-1) ) ]; }
   
   
   
   
   // выбираем верный паспорт или нет
   if (randomIndex3 > 88) { nomer = "RU "+nomer3; errornomer=10;  } else
   { nomer = "RU "+nomer2; }
   if (randomIndex3 > 93) { nomer = "RU "+nomer4; errornomer=12;  }

    var options = {
  day: 'numeric',
  month: 'short',
  
};		
    
	
	
	now = new Date().toLocaleDateString(); /*дата вылета*/
	let now3 = new Date().toLocaleString("en-GB", options);
	now2 = now3.toUpperCase();
	now2 = now2.replace(/\s+/g, ' ').trim();


	
    var CurrentTime = new Date();
    /*CurrentTime.setMinutes(CurrentTime.getMinutes() + 40);*/
    // задаем дату вылета
    var getDate=CurrentTime.getDate()+Math.floor( Math.random() * 7); if (getDate>30) {getDate=getDate-30;} if (getDate<10) {getDate="0"+getDate;} 
    var getMonth=1+Math.floor( Math.random() * 11); if (getMonth>12) {getMonth=getMonth-12;} if (getMonth<10) {getMonth="0"+getMonth;} 
    var getFullYear=CurrentTime.getFullYear()+Math.floor( Math.random() *7)+1;
	let putFullYear=getFullYear-5;
	if (putFullYear<21){putFullYear=20;}
	
	
	
        passportdate = getDate+"."+getMonth+"."+getFullYear;
    var passportdate1= passportdate;
    var passportdate2= getDate+"."+getMonth+"."+putFullYear;
	var randomvarmin = CurrentTime.getMinutes() + Math.floor( Math.random() * 59);
    var randomvarhou = CurrentTime.getHours() + Math.floor( Math.random() * 3);
    var minCurrentTime=(randomvarmin-CurrentTime.getMinutes());

    if ((randomvarmin+CurrentTime.getMinutes())>59) {randomvarmin=randomvarmin-59; randomvarhou++; }
    if ((randomvarmin-CurrentTime.getMinutes())<0){randomvarmin=randomvarmin+59;randomvarhou--;}

    if ((randomvarhou-CurrentTime.getHours())==0 && minCurrentTime<50) {
        document.getElementById("timeforfly1").style.backgroundColor="red";}
    else {document.getElementById("timeforfly1").style.backgroundColor="#00aa00";}

	

    if (randomIndex3 < 7) { nomer = ""; errornomer=1; passportdate="документы не заполнены"; img_dublikat = "images/"+bannerdublikat[2]; 
	document.getElementById('dublikat_id').src = img_dublikat;}//документы не заполнены

    if (getFullYear==CurrentTime.getFullYear() || nomer == "" ) {document.getElementById("passportdate").style.Color="red";
        document.getElementById("passportdate").style.border="1px solid red";
        document.getElementById("passportdate").style.padding="8px";} else
       {document.getElementById("passportdate").style.Color="#fff";
        document.getElementById("passportdate").style.border="0px solid red";
        document.getElementById("passportdate").style.padding="8px";}
      /* Толщина рамки в пикселах,
                           тип границы (в данном случае сплошная линия) и
                           цвет линии */


    if (minCurrentTime<10){ minCurrentTime="0"+minCurrentTime;}



    timeforfly1 = ((randomvarhou-CurrentTime.getHours())+":"+minCurrentTime);/*до вылета*/

    if (randomvarmin>59) {randomvarmin=randomvarmin-59; randomvarhou++; }

    if (randomvarmin<10) {randomvarmin="0"+randomvarmin; }


    dayfly = (randomvarhou+":"+randomvarmin); /*время вылета*/
	
	let dayfly20 = (randomvarhou+":"+randomvarmin);
    var dayfly1 = (CurrentTime.getHours()+":"+CurrentTime.getMinutes());


     nomertkt =Math.floor( Math.random() * 100 )+"555DF"+ Math.floor( Math.random() * 100000 );
    var nomertkt1=nomertkt;

    term = arr[randomIndex];
	if (errornomer==0 && randomIndex7>95 && randomIndex!=5) {term2=arr[5]; errornomer=13; }
	else {term2 = term;}
    
    
    document.getElementById("gate1").innerHTML = gate1; //dsm
    document.getElementById("rise").innerHTML = rise; //dsm
    
   
	 
	 if (level==5) {document.getElementById('h7').innerHTML = "ТЕСТИРОВАНИЕ ДЛЯ"+"<br>"+getCookie("fname")+" ("
	 +getCookie("id")+")";} else 
	 {document.getElementById('h7').innerHTML = "Тренировка&nbsp"+(level-1)+"<br>"+getCookie("fname")+" ("
	 +getCookie("id")+")";}
    /*_____________________________________________________________________________________________*/


				dday=Math.floor(Math.random()*30)+1;
				if (dday<10){dday="0"+dday;}
				dmes=Math.floor(Math.random()*11)+1;
				if (dmes<10){dmes="0"+dmes;}
				bday = dday +"."+ dmes + "."+ (CurrentTime.getFullYear()-dyear[random]-2);
				let mvd=2000+Math.floor(Math.random()*900);
				
				console.log("bday",dyear.length);
				console.log("bday",passport_false.length);
				
				/*_____________________________________________________________________________________________*/
    // дубликат
	
	if (randomIndex8<10 &&  dublikat==0) {img_dublikat = "images/"+bannerdublikat[6];
        document.getElementById('dublikat_id').src = img_dublikat; axtung=1;}
	
    if (level>=4 && randomIndex5 > 88 && errornomer !=7 && errornomer !=1 ) {
   img_dublikat = "images/"+bannerdublikat[1]; dublikat=1;
	document.getElementById('dublikat_id').src = img_dublikat; }
    
	
	if (randomIndex8>90 && errornomer==0 && dublikat==0){errornomer=17; 
		if (Math.random()>0.5){ img_dublikat = "images/"+bannerdublikat[3];
        document.getElementById('dublikat_id').src = img_dublikat;	} else {
			img_dublikat = "images/"+bannerdublikat[4];
        document.getElementById('dublikat_id').src = img_dublikat;
		}}
	
	
	 
	

		if (dublikat==0 && errornomer!=7 && errornomer!=17 && axtung!=1) {img_dublikat = "images/"+bannerdublikat[0];
		document.getElementById('dublikat_id').src = img_dublikat; }								
		
	
    /*________________________________нет данных для регистрации_________________________________________*/

			
    /*__________________________Вывод данных______________________________________________*/


    //author3.innerHTML = quote[3]; //dsm фамилия

    
	let pass = document.getElementById("pass");
	//pass.innerHTML="images/pass/1.png";
	//document.getElementById("pass").innerHTML="images/pass/1.png";
	//vegas[0].path;
	
	console.log("term", vegas[godPass].path);
	pass.src=vegas[godPass].path;
	
	if (godPass==2) {
	document.getElementById("term5").style.left="380px";
	document.getElementById("term5").style.top="92px";
	document.getElementById("term5").style.fontSize="1em";
	document.getElementById("term5").innerHTML = term;	
	} else {document.getElementById("term5").innerHTML = "";}
	
	document.getElementById("term1").style.left=vegas[godPass].term1Left;
	document.getElementById("term1").style.top=vegas[godPass].term1Top;
	document.getElementById("term1").style.fontSize=vegas[godPass].term1Font;
	document.getElementById("term1").innerHTML ="MOSCOW SVO/ " +term;
	
	document.getElementById("term2").style.left=vegas[godPass].term2Left;
	document.getElementById("term2").style.top=vegas[godPass].term2Top;
	document.getElementById("term2").style.fontSize=vegas[godPass].term2Font;
	document.getElementById("term2").innerHTML ="MOSCOW SVO/ " +term;
    
	document.getElementById("author2").style.left=vegas[godPass].author2Left;
	document.getElementById("author2").style.top=vegas[godPass].author2Top;
	document.getElementById("author2").style.fontSize=vegas[godPass].author2Font;
	
	document.getElementById("author4").style.left=vegas[godPass].author4Left;
	document.getElementById("author4").style.top=vegas[godPass].author4Top;
	document.getElementById("author4").style.fontSize=vegas[godPass].author4Font;
	
	document.getElementById("gate").innerHTML = gate;
	document.getElementById("gate").style.left=vegas[godPass].gateLeft;
	document.getElementById("gate").style.top=vegas[godPass].gateTop;
	document.getElementById("gate").style.fontSize=vegas[godPass].gateFont;
	
	document.getElementById("gate2").innerHTML = gate;
	document.getElementById("gate2").style.left=vegas[godPass].gate2Left;
	document.getElementById("gate2").style.top=vegas[godPass].gate2Top;
	document.getElementById("gate2").style.fontSize=vegas[godPass].gate2Font;
	
	document.getElementById("rise1").innerHTML = rise1;
	document.getElementById("rise1").style.left=vegas[godPass].rise1Left;
	document.getElementById("rise1").style.top=vegas[godPass].rise1Top;
	document.getElementById("rise1").style.fontSize=vegas[godPass].rise1Font;
	
	document.getElementById("rise2").innerHTML = rise1;
	document.getElementById("rise2").style.left=vegas[godPass].rise2Left;
	document.getElementById("rise2").style.top=vegas[godPass].rise2Top;
	document.getElementById("rise2").style.fontSize=vegas[godPass].rise2Font;
	
	
	document.getElementById("dayfly1").innerHTML = dayfly;
	document.getElementById("dayfly1").style.left=vegas[godPass].dayfly1Left;
	document.getElementById("dayfly1").style.top=vegas[godPass].dayfly1Top;
	document.getElementById("dayfly1").style.fontSize=vegas[godPass].dayfly1Font;
	
	document.getElementById("dayfly5").innerHTML = dayfly;
	document.getElementById("dayfly5").style.left=vegas[godPass].dayfly5Left;
	document.getElementById("dayfly5").style.top=vegas[godPass].dayfly5Top;
	document.getElementById("dayfly5").style.fontSize=vegas[godPass].dayfly5Font;
	
	document.getElementById("data_fly").innerHTML = now2;
	document.getElementById("data_fly").style.left=vegas[godPass].data_flyLeft;
	document.getElementById("data_fly").style.top=vegas[godPass].data_flyTop;
	document.getElementById("data_fly").style.fontSize=vegas[godPass].data_flyFont;
    
	document.getElementById("data_fly1").innerHTML = now2;
	document.getElementById("data_fly1").style.left=vegas[godPass].data_fly1Left;
	document.getElementById("data_fly1").style.top=vegas[godPass].data_fly1Top;
	document.getElementById("data_fly1").style.fontSize=vegas[godPass].data_fly1Font;
	
	document.getElementById("nomertkt1").innerHTML = nomertkt1;
	document.getElementById("nomertkt1").style.left=vegas[godPass].nomertkt1Left;
	document.getElementById("nomertkt1").style.top=vegas[godPass].nomertkt1Top;
	document.getElementById("nomertkt1").style.fontSize=vegas[godPass].nomertkt1Font;
	
	document.getElementById("depart").style.left=vegas[godPass].departLeft;
	document.getElementById("depart").style.top=vegas[godPass].departTop;
	document.getElementById("depart").style.fontSize=vegas[godPass].departFont;
	document.getElementById("depart").innerHTML =aeroport[randomPort].toUpperCase();
	
	document.getElementById("depart2").style.left=vegas[godPass].depart2Left;
	document.getElementById("depart2").style.top=vegas[godPass].depart2Top;
	document.getElementById("depart2").style.fontSize=vegas[godPass].depart2Font;
	document.getElementById("depart2").innerHTML =aeroport[randomPort].toUpperCase();
	
	document.getElementById("seat").style.left=vegas[godPass].seatLeft;
	document.getElementById("seat").style.top=vegas[godPass].seatTop;
	document.getElementById("seat").style.fontSize=vegas[godPass].seatFont;
	document.getElementById("seat").innerHTML =seat;
	
	document.getElementById("seat2").style.left=vegas[godPass].seat2Left;
	document.getElementById("seat2").style.top=vegas[godPass].seat2Top;
	document.getElementById("seat2").style.fontSize=vegas[godPass].seat2Font;
	document.getElementById("seat2").innerHTML =seat;
	
	document.getElementById("seqno").style.left=vegas[godPass].seqnoLeft;
	document.getElementById("seqno").style.top=vegas[godPass].seqnoTop;
	document.getElementById("seqno").style.fontSize=vegas[godPass].seqnoFont;
	document.getElementById("seqno").innerHTML =seqno;
	
	document.getElementById("seqno2").style.left=vegas[godPass].seqno2Left;
	document.getElementById("seqno2").style.top=vegas[godPass].seqno2Top;
	document.getElementById("seqno2").style.fontSize=vegas[godPass].seqno2Font;
	document.getElementById("seqno2").innerHTML =seqno;
	
	
	document.getElementById("nomer2").innerHTML = nomer2;
    
    document.getElementById("passportdate1").innerHTML = passportdate1;
    document.getElementById("passportdate").innerHTML = passportdate; //dsm
    document.getElementById("timeforfly1").innerHTML = timeforfly1; //dsm
    document.getElementById("nomertkt").innerHTML = nomertkt;  //dsm
    document.getElementById("nomer").innerHTML = nomer; //dsm
    document.getElementById("now").innerHTML = now; //dsm
    document.getElementById("dayfly").innerHTML = dayfly; //dsm
    document.getElementById("term").innerHTML = term2; //dsm
	 
	
	
	
	if (quote==undefined){zetta();}
    document.getElementById("author").innerHTML = quote[1]; //Имя в паспорте
    document.getElementById("author1").innerHTML = quote[2]; // латинское имя в паспорте
    document.getElementById("author2").innerHTML = quote[3]; // фио в пассадочном
    document.getElementById("author4").innerHTML = quote[3]; // фио в пассадочном2
	
	fio = quote[3]; //dsm фамилия
    document.getElementById("phrase").innerHTML = quote[0]; //фамилия в паспорте 
	document.getElementById("randomobl").innerHTML = oblast[randomobl].toUpperCase();
    document.getElementById("randomobl").style.left="290px";
	document.getElementById("randomobl").style.top="135px";
	document.getElementById("randomobl").style.fontSize="1em";
	
	document.getElementById("passportdate2").innerHTML=passportdate2;
	document.getElementById("passportdate2").style.left="180px";
	
	document.getElementById("bday").innerHTML=bday;
	document.getElementById("bday").style.top="135px";
	document.getElementById("bday").style.fontSize="1.2em";
	
	document.getElementById("mvd").innerHTML="МВД "+mvd;
	document.getElementById("mvd").style.top="203px";
	document.getElementById("mvd").style.fontSize="1.2em";
	document.getElementById("mvd").style.left="180px";
	
	document.getElementById("author3").innerHTML = fio; //dsm
    /*_____________________________________________________________________________________________*/

	if ( randomIndex5 < 8 && errornomer==0 ) {   errornomer=7; 
								img_dublikat = "images/"+		bannerdublikat[2];
                                document.getElementById('dublikat_id').src = img_dublikat;
								author3.innerHTML = "НЕТ ДАННЫХ"; //dsm
                                document.getElementById("gate1").innerHTML = ""; //dsm
                                document.getElementById("rise").innerHTML = ""; //dsm
                                document.getElementById("passportdate").innerHTML = ""; //dsm
                                document.getElementById("timeforfly1").innerHTML = ""; //dsm
                                document.getElementById("nomertkt").innerHTML = "";  //dsm
                                document.getElementById("nomer").innerHTML = ""; //dsm
                                document.getElementById("now").innerHTML = ""; //dsm
                                document.getElementById("dayfly").innerHTML = ""; //d"m
                                document.getElementById("term").innerHTML = ""; //dsm}
                                
                                nomer="88№95703911";}

 
    i--; // счетчик попыток
	
 /*______________________блок останоки программы и формирования итогового окна и записи в SQL________________________*/
if(i<=2&&mediaRecorderStop!=true&&level==5){mediaRecorderStop=true; mediaRecorder.stop();}
           
		   if(i<1) { 
		    
	var promise1 = new Promise(function(resolve, reject) {
    setTimeout(function a(){ demo1(); resolve(); }, 300);
})		
	
var promise2 = new Promise(function(resolve, reject) {
    setTimeout(function b(){ console.log("Hello B"); resolve();}, 300);
})

	
		var promise3 = new Promise(function(resolve, reject) {
    setTimeout(function c(){ console.log("C"); resolve();}, 300);
})


Promise.all([promise1, promise2, promise3]).then(function() {
  demo2();
});	

}



 /*_______________________________________________________________________________________*/

    document.getElementById('rockets').innerHTML = i;
console.log("error ", errornomer); console.log("i ", i);  console.log("dublikat ",dublikat);console.log("level",level);



    // возвращаем глобальные данные
    return img_dublikat;
    return   gate1;
    return   fio;
    return   term;
    
    return   nomer2;
    return   nomertkt1;
    return   passportdate1;
    return   passportdate; //dsm
    return   timeforfly1; //dsm
    return   nomertkt;  //dsm
    return   nomer; //dsm
    return   now; //dsm
    return   dayfly; //dsm
    return   i;
	


}
//document.getElementById('rockets').innerHTML = i; // выводим 1ю попытку
if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";}
/*__________________________конец функции zetta___________________________________________*/


var start;
   function betta() {
var tmp = new Array();      // два вспомагательных
       var tmp2 = new Array();     // массива
       var param = new Array();
       var get = location.search;  // строка GET запроса, то есть все данные после ?
       if(get != '') {
       tmp = (get.substr(1)).split('&');   // разделяем переменные
       for(var i=0; i < 1; i++) {
       tmp2 = tmp[i].split('=');       // массив param будет содержать
       param[tmp2[0]] = tmp2[1];       // пары ключ(имя переменной)->значение
       }
       //var obj2 = document.getElementById('greq2');
       var obj = document.getElementById('greq');  // вывод на экран

       var obj2 = document.getElementById('greq2');

      //obj2.innerHTML = tmp2[1];

       
        if (tmp2[1]==6) {level=1; start=0; i=61; return level; return start;}
        if (tmp2[1]==7) {level=2; start=0; i=61; return level; return start;}
        if (tmp2[1]==8) {level=3; start=0; i=61; return level; return start;}
        if (tmp2[1]==9) {level=4; start=0; i=61;  return level; return start;}
		if (tmp2[1]==10) {level=5; start=0; i=41; testing(); return level; return start; return i;}
  // for (var key in param) {
   // obj.innerHTML += key+" = "+param[key]+"<br><br><br>";
    //obj2.innerHTML = tmp2[0];
     //uname.innerHTML += uname+" = "+param[key]+"<br>"; tmp.length }

    }
    if (tmp2[1]==1) {level=1;console.log("1111",level); return level;}
    if (tmp2[1]==2) {level=2;console.log("1111",level); return level;}
    if (tmp2[1]==3) {level=3;console.log("1111",level); return level;}

    }
	
/*__________________________таймер и часы dsm___________________________________________*/
  
        var data = new Date().toLocaleDateString();
        var timer;
        var timefortest = timefortestnew;
        document.getElementById("dayfly2").innerHTML = data;

	  countdown();
        function countdown(){  // функция обратного отсчета
              time2 = new Date().toLocaleTimeString();
          document.getElementById("timefly2").innerHTML = time2;
		if (timefortest===0&&mediaRecorderStop!=true) {mediaRecorderStop=true; mediaRecorder.stop();}
           if (timefortest>0 ) {document.getElementById('rocket').innerHTML = timefortest;}
           else {document.getElementById('rocket').innerHTML = "0";
			//alert(timefortest);
var promise1 = new Promise(function(resolve, reject) {
setTimeout(function a(){ demo1(); resolve(); }, 300);
})		
var promise2 = new Promise(function(resolve, reject) {
setTimeout(function b(){ console.log("Hello B"); resolve();}, 300);
})
var promise3 = new Promise(function(resolve, reject) {
    setTimeout(function c(){ console.log("C"); resolve();}, 300);
})
Promise.all([promise1, promise2, promise3]).then(function() {
  demo2();
});	


			}
           if (i>0) { timefortest--; } // уменьшаем число на единицу
           timer = setTimeout(countdown, 1000); }

/*_______________________________________________________________________________________*/





if (level==1 || level==2 || level==3 ){ zetta();
  document.getElementById("button").addEventListener('click', e => { 
 document.getElementById('rockets').innerHTML = i;
  
  if ((e.target.classList.contains('true') && (errornomer === 0)) || (e.target.classList.contains('false') && (errornomer != 0))) { errornomer=0; zetta(); }
  else { errornomers++; if (level==1 || level==2 || level==3 )
  { if (e.target.classList.contains('true')) {bottomclic = 'Вы нажали ПРИНЯТЬ '} else {bottomclic = 'Вы нажали ОТКАЗАТЬ '} 
  var val=1; var newWin = window.open("about:blank", "hello", "width=400, height=300"); newWin.document.write(bottomclic); //Алерт
  newWin.document.write('это ОШИБКА! <button class="pause" id="pause1" value=0  >ДАЛЕЕ</button>');   
  newWin.document.getElementById('pause1').addEventListener("click", function () { val=0; newWin.close(); errornomer = 0; zetta(); });
  newWin.window.onblur = () => newWin.close();
}
 if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";}
  if (val==0) { zetta()};}

/* объявляем переменную массив, в котором будут находится случайно генерируемые элементы (в нашем случае имена картинок)  */

  //if (e.target.classList.contains('false') && (errornomer > 0)) {errornomer = 0; alert("верно!"); zetta(); }
   // else {errornomer = 0; alert("неверно!"); zetta(); 'players\people\'}



 //document.getElementById("next-quote2").addEventListener("click", function() { errornomer = 0; });
 //document.getElementById("next-quote").addEventListener("click", function() {



});}
/*______________________Слушаем кнопки следующий и выйти из зоны___________________________*/

if (level==4 || level==5 ) {  zetta();     document.getElementById("butt10").addEventListener('click', e => {

if (e.target.classList.contains('next') && hiden==0 ) {
         


        if (dublikat==1 && errornomer==0 ){errornomers++;} // увеличение ошибки - не сбросили дубликат

        errornomer2=1; zetta();



        if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

// отображение данных после кнопки "Следующий (c нажатой кнопки выйти из занны  без зетта zetta )"
if (e.target.classList.contains('next') && hiden==2 ) {
								console.log("dublikat",dublikat);
                                author3.innerHTML = fio; //dsm
                                document.getElementById("gate1").innerHTML = gate1; //dsm
                                document.getElementById("rise").innerHTML = rise; //dsm
                                document.getElementById("passportdate").innerHTML = passportdate; //dsm
                                document.getElementById("timeforfly1").innerHTML = timeforfly1; //dsm
                                document.getElementById("nomertkt").innerHTML = nomertkt;  //dsm
                                document.getElementById("nomer").innerHTML = nomer; //dsm
                                document.getElementById("now").innerHTML = now; //dsm
                                document.getElementById("dayfly").innerHTML = dayfly; //dsm
                                document.getElementById("term").innerHTML = term2; }   //dsm

// скрытие данных после кнопки "выйти из занны "
if (e.target.classList.contains('scan') && hiden==0 && dublikat==1 ) {  dublikat=0; hiden=2;
                                author3.innerHTML = ""; //dsm
                                document.getElementById("gate1").innerHTML = ""; //dsm
                                document.getElementById("rise").innerHTML = ""; //dsm
                                document.getElementById("passportdate").innerHTML = ""; //dsm
                                document.getElementById("timeforfly1").innerHTML = ""; //dsm
                                document.getElementById("nomertkt").innerHTML = "";  //dsm
                                document.getElementById("nomer").innerHTML = ""; //dsm
                                document.getElementById("now").innerHTML = ""; //dsm
                                document.getElementById("dayfly").innerHTML = ""; //dsm
                                document.getElementById("term").innerHTML = ""; //dsm
                                img_dublikat = "images/"+bannerdublikat[0];
                                document.getElementById('dublikat_id').src = img_dublikat;
                                //смена значка дубликата
                                console.log("hiden", hiden);}
});}


/*______________________Слушаем кнопки принять и отказать___________________________*/

if (level==4 || level==5 ){      document.getElementById("button").addEventListener('click', e => {

/*______________________ошибка___________________________*/

       if (e.target.classList.contains('true') && (errornomer == 0) && dublikat>0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

       if (e.target.classList.contains('true') && (errornomer > 0) && dublikat>0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

       if (e.target.classList.contains('false') && (errornomer == 0) && dublikat==0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

       if (e.target.classList.contains('true') && (errornomer > 0) && dublikat==0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

/*______________________безошибки___________________________*/

       if (e.target.classList.contains('true') && (errornomer == 0) && dublikat==0) {hiden=0; errornomer2=0;}

       if (e.target.classList.contains('false') && (errornomer > 0) || dublikat>0) {hiden=0; errornomer2=0;}




});} 

}) 
 
.catch(function(err) {superZetta();} );
 
} else {superZetta();}

function superZetta() { 
 
 document.getElementById("video").innerHTML="";
 document.getElementById("snap").innerHTML="";
 document.getElementById("snap").remove();
let btnPause = document.getElementById('pause1');
    var   img_dublikat; // переменная для работы с bannerdublikat
    var   fio;  //dsm
    var   gate1; //dsm
    var   gate;
    var   timeforfly1; //dsm
    var   rise; //dsm
    var   passportdate; //dsm
    var   timeforfly1; //dsm
    var   nomertkt;  //dsm
    var   nomer; //dsm
    var   now; //dsm
    var   dayfly; //dsm
    var   term; //dsm
	var   term2;
    var time2 = new Date().toLocaleTimeString();
	let bottomclic;
	let	bday;
//--------------------------------------------
 var level=1;
 var errornomer=0; //код ошибки например ошибка в ФИО = 2
 var errornomers=0; // счетчик ошибок

 var errornomer2=0; // не используется
 var dublikat=0; // принимает значение (0 нет дубликата и 1 есть дубликат)
 
  //счетчик попыток
 var hiden=0; // 1 - dsm виден, 0 не виден
 var nomer = 10; // номер паспорта для вывода на dsm
 
 let timefortestnew;
 betta();
 if (level==5||level==2) {var i=41;timefortestnew=1560; // Время на прохождение тест
 }else{var i=60; timefortestnew=1840;}
	if (level==5){alert ("Включите видеокамеру!"); document.location='index2.html'; return false;}
//-----

	let aeroport=[
'Anapa(AAQ)',
'Abakan(ABA)',
'Achinsk(ACS)',
'Aldan(ADH)',
'Adler(AER)',
'Amderma(AMV)',
'Astrahan(ASF)',
'Barnaul(BAX)',
'Beloreck(BCX)',
'Blagoveshhensk(BQS)',
'Bratsk(BTK)',
'Balakovo(BWO)',
'Brjansk(BZK)',
'Cherepovec(CEE)',
'Cheljabinsk(CEK)',
'Chokurdah(CKH)',
'Chulman(CNN)',
'Cheboksary(CSY)',
'Cherskij(CYX)',
'Dikson(DKS)',
'Anadyr(DYR)',
'Belgorod(EGO)',
'Enisejsk(EIE)',
'Jelista(ESL)',
'Magdagachi(GDG)',
'Magadan(GDX)',
'Gelendzhik(GDZ)',
'NizNovgorod(GOJ)',
'Groznyj(GRV)',
'Hanty-Mansi(HMA)',
'Chita(HTA)',
'Hatanga(HTG)',
'Igarka(IAA)',
'Izhevsk(IJK)',
'Irkutsk(IKT)',
'Joshkar-Ola(JOK)',
'Kemerovo(KEJ)',
'Kaliningrad(KGD)',
'Kogalym(KGP)',
'Habarovsk(KHV)',
'Krasnojarsk(KJA)',
'Kostroma(KMW)',
'Kurgan(KRO)',
'Krasnodar(KRR)',
'Kotlas(KSZ)',
'Samara(KUF)',
'Kirovsk(KVK)',
'Kirov(KVX)',
'KomsomolskAm(KXK)',
'Kyzyl(KYZ)',
'Kazan(KZN)',
'Leshukonskoe(LDG)',
'S Peterburg(LED)',
'Smolensk(LNX)',
'Mahachkala(MCX)',
'Mirnyj(MJZ)',
'Murmansk(MMK)',
'Magnitogorsk(MQF)',
'MinVody(MRV)',
'Nalchik(NAL)',
'NabChelny(NBC)',
'Neftekamsk(NEF)',
'Nerjungri(NER)',
'Neftejugansk(NFG)',
'Nizhnevartovsk(NJC)',
'Narjan-Mar(NNM)',
'Novorossijsk(NOI)',
'Nojabrsk(NOJ)',
'Novokuzneck(NOZ)',
'NUrengoj(NUX)',
'Novgorod(NVR)',
'Nadym(NYM)',
'Orel(OEL)',
'Vladikavkaz(OGZ)',
'Ohotsk(OHO)',
'Oktjabrskij(OKT)',
'Omsk(OMS)',
'Novosibirsk(OVB)',
'Perm(PEE)',
'Petrozavodsk(PES)',
'Pechora(PEX)',
'Penza(PEZ)',
'PetropavKa(PKC)',
'Pskov(PKV)',
'Pevek(PWE)',
'Poljarnyj(PYJ)',
'Raduzhnyj(RAT)',
'Orenburg(REN)',
'Rostov(ROV)',
'Saratov(RTW)',
'Rybinsk(RYB)',
'Syktyvkar(SCW)',
'Surgut(SGC)',
'Saransk(SKX)',
'Salehard(SLY)',
'Stavropol(STW)',
'Ekaterinburg(SVX)',
'Strezhevoj(SWT)',
'Tambov(TBW)',
'Tjumen(TJM)',
'Tomsk(TOF)',
'Tobolsk(TOX)',
'Tynda(TYD)',
'Uhta(UCT)',
'Ufa(UFA)',
'Ust-Ilimsk(UIK)',
'Ust-Kut(UKX)',
'Uljanovsk(ULY)',
'Uraj(URJ)',
'Kursk(URS)',
'Usinsk(USK)',
'Bugulma(UUA)',
'Ulan-Udje(UUD)',
'JuSahalinsk(UUS)',
'Vologda(VGD)',
'Vorkuta(VKT)',
'Volgodonsk(VLK)',
'Velikie Luki(VLU)',
'Volgograd(VOG)',
'Voronezh(VOZ)',
'VelUstjug(VUS)',
'Vladivostok(VVO)',
'Jakutsk(YKS)'];



let oblast=[
'Амурская<br> обл./ USSR',
'Архангельская <br>обл./ USSR',
'Астраханская <br>обл./ USSR',
'Белгородская<br> обл./ USSR',
'Брянская <br>обл./ USSR',
'Челябинская<br> обл./ USSR',
'Иркутская <br>обл./ USSR',
'Ивановская<br> обл./ USSR',
'Калининградская<br> обл./ USSR',
'Калужская <br>обл./ USSR',
'Кемеровская<br> обл./ USSR',
'Кировская<br> обл./ USSR',
'Костромская<br> обл./ USSR',
'Курганская<br>обл./ USSR',
'Курская<br> обл./ USSR',
'Ленинградская<br> обл./ USSR',
'Липецкая <br>обл./ USSR',
'Магаданская<br> обл./ USSR',
'Московская<br> обл./ USSR',
'Мурманская<br> обл./ USSR',
'Нижегородская<br> обл./ USSR',
'Новгородская<br> обл./ USSR',
'Новосибирская<br> обл./ USSR',
'Омская<br> обл./ USSR',
'Оренбургская<br> обл./ USSR',
'Орловская<br> обл./ USSR',
'Пензенская<br> обл./ USSR',
'Псковская<br> обл./ USSR',
'Ростовская<br> обл./ USSR',
'Рязанская<br> обл./ USSR',
'Сахалинская <br>обл./ USSR',
'Самарская<br> обл./ USSR',
'Саратовская<br> обл./ USSR',
'Смоленская<br> обл./ USSR',
'Свердловская<br> обл./ USSR',
'Тамбовская<br> обл./ USSR',
'Томская <br>обл./ USSR',
'Тверская<br> обл./ USSR',
'Тульская<br>обл./ USSR',
'Тюменская<br> обл./ USSR',
'Ульяновская<br> обл./ USSR',
'Владимирская<br> обл./ USSR',
'Волгоградская<br> обл./ USSR',
'Вологодская<br> обл./ USSR',
'Воронежская<br> обл./ USSR',
'Ярославская<br> обл./ USSR',]

let vegas = 
[ 
	{ 

	path: "images/pass/klm.png",
	
	term1: 0, 
	term1Top: "105px",
	term1Left: "190px",
	term1Font: "0.8em",
	
	term2: 0, 
	term2Top: "105px",
	term2Left:"325px",
	term2Font:"0.6em",
	
	author2: 0, 
	author2Top:"102px",
	author2Left:"100px",
	author2Font:"0.8em",
	
	author4: 0, 
	author4Top:"87px",
	author4Left:"330px",
	author4Font:"0.8em",
	
	gate: 0, 
	gateTop:"63px",
	gateLeft:"230px",
	gateFont:"1.5em",
	
	gate2: 0, 
	gate2Top:"-115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 0, 
	rise1Top:"63px",
	rise1Left:"85px",
	rise1Font:"1.2em",
	
	rise2: 0, 
	rise2Top:"130px",
	rise2Left:"351px",
	rise2Font:"0.8em",
	
	dayfly1: 0, 
	dayfly1Top:"63px",
	dayfly1Left:"150px",
	dayfly1Font:"1.2em",
	
	dayfly5: 0, 
	dayfly5Top:"140px",
	dayfly5Left:"385px",
	dayfly5Font:"0.8em",
	
	data_fly: 0, 
	data_flyTop:"130px",
	data_flyLeft:"220px",
	data_flyFont:"0.8em",
	
	data_fly1: 0, 
	data_fly1Top:"140px",
	data_fly1Left:"350px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 0, 
	nomertkt1Top:"175px",
	nomertkt1Left:"88px",
	nomertkt1Font:"0.6em",
	
	depart: 0, 
	departTop:"115px",
	departLeft:"325px",
	departFont:"0.6em",
	
	depart2: 0, 
	depart2Top:"125px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 0, 
	seatTop:"63px",
	seatLeft:"270px",
	seatFont:"1.2em",
	
	seat2: 0, 
	seat2Top:"63px",
	seat2Left:"385px",
	seat2Font:"1.2em",
	
	seqno: 0, 
	seqnoTop:"170px",
	seqnoLeft:"383px",
	seqnoFont:"0.8em",

	seqno2: 0, 
	seqno2Top:"160px",
	seqno2Left:"285px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/airserbia.png",
	
	term1: 1, 
	term1Top: "90px",
	term1Left: "210px",
	term1Font: "1em",
	
	term2: 1, 
	term2Top: "-110px",
	term2Left:"342px",
	term2Font:"0.6em",
	
	author2: 1, 
	author2Top:"67px",
	author2Left:"66px",
	author2Font:"1em",
	
	author4: 1, 
	author4Top:"-1195px",
	author4Left:"326px",
	author4Font:"0.8em",
	
	gate: 1, 
	gateTop:"130px",
	gateLeft:"80px",
	gateFont:"1.5em",
	
	gate2: 1, 
	gate2Top:"-115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 1, 
	rise1Top:"85px",
	rise1Left:"80px",
	rise1Font:"0.9em",
	
	rise2: 1, 
	rise2Top:"-105px",
	rise2Left:"326px",
	rise2Font:"0.8em",
	
	dayfly1: 1, 
	dayfly1Top:"130px",
	dayfly1Left:"150px",
	dayfly1Font:"1.2em",
	
	dayfly5: 1, 
	dayfly5Top:"85px",
	dayfly5Left:"210px",
	dayfly5Font:"1.0em",
	
	data_fly: 1, 
	data_flyTop:"85px",
	data_flyLeft:"145px",
	data_flyFont:"0.9em",
	
	data_fly1: 1, 
	data_fly1Top:"-105px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 1, 
	nomertkt1Top:"150px",
	nomertkt1Left:"178px",
	nomertkt1Font:"0.8em",
	
	depart: 1, 
	departTop:"-1118px",
	departLeft:"342px",
	departFont:"0.6em",
	
	depart2: 1, 
	depart2Top:"100px",
	depart2Left:"240px",
	depart2Font:"1em",
	
	seat: 1, 
	seatTop:"131px",
	seatLeft:"325px",
	seatFont:"1.2em",
	
	seat2: 1, 
	seat2Top:"-1170px",
	seat2Left:"395px",
	seat2Font:"1.2em",
	
	seqno: 1, 
	seqnoTop:"168px",
	seqnoLeft:"175px",
	seqnoFont:"0.8em",

	seqno2: 1, 
	seqno2Top:"-168px",
	seqno2Left:"279px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/aeroflot.png",
	
	term1: 2, 
	term1Top: "65px",
	term1Left: "40px",
	term1Font: "0.8em",
	
	term2: 2, 
	term2Top: "60px",
	term2Left:"322px",
	term2Font:"0.6em",
	
	author2: 2, 
	author2Top:"59px",
	author2Left:"45px",
	author2Font:"0.7em",
	
	author4: 2, 
	author4Top:"52px",
	author4Left:"326px",
	author4Font:"0.7em",
	
	gate: 2, 
	gateTop:"150px",
	gateLeft:"86px",
	gateFont:"1.5em",
	
	gate2: 2, 
	gate2Top:"127px",
	gate2Left:"326px",
	gate2Font:"1em",
	
	rise1: 2, 
	rise1Top:"70px",
	rise1Left:"157px",
	rise1Font:"1em",
	
	rise2: 2, 
	rise2Top:"110px",
	rise2Left:"326px",
	rise2Font:"0.8em",
	
	dayfly1: 2, 
	dayfly1Top:"148px",
	dayfly1Left:"130px",
	dayfly1Font:"1.5em",
	
	dayfly5: 2, 
	dayfly5Top:"127px",
	dayfly5Left:"350px",
	dayfly5Font:"1em",
	
	data_fly: 2, 
	data_flyTop:"70px",
	data_flyLeft:"210px",
	data_flyFont:"1em",
	
	data_fly1: 2, 
	data_fly1Top:"110px",
	data_fly1Left:"370px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 2, 
	nomertkt1Top:"21px",
	nomertkt1Left:"150px",
	nomertkt1Font:"0.6em",
	
	depart: 2, 
	departTop:"72px",
	departLeft:"322px",
	departFont:"0.6em",
	
	depart2: 2, 
	depart2Top:"75px",
	depart2Left:"40px",
	depart2Font:"0.8em",
	
	seat: 2, 
	seatTop:"123px",
	seatLeft:"232px",
	seatFont:"1.0em",
	
	seat2: 2, 
	seat2Top:"127px",
	seat2Left:"395px",
	seat2Font:"1em",
	
	seqno: 2, 
	seqnoTop:"152px",
	seqnoLeft:"365px",
	seqnoFont:"0.8em",

	seqno2: 2, 
	seqno2Top:"151px",
	seqno2Left:"249px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/4.png",
	
	term1: 3, 
	term1Top: "110px",
	term1Left: "90px",
	term1Font: "0.8em",
	
	term2: 3, 
	term2Top: "110px",
	term2Left:"342px",
	term2Font:"0.6em",
	
	author2: 3, 
	author2Top:"105px",
	author2Left:"94px",
	author2Font:"0.8em",
	
	author4: 3, 
	author4Top:"95px",
	author4Left:"326px",
	author4Font:"0.8em",
	
	gate: 3, 
	gateTop:"70px",
	gateLeft:"216px",
	gateFont:"1.5em",
	
	gate2: 3, 
	gate2Top:"-115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 3, 
	rise1Top:"70px",
	rise1Left:"87px",
	rise1Font:"1.2em",
	
	rise2: 3, 
	rise2Top:"105px",
	rise2Left:"326px",
	rise2Font:"0.8em",
	
	dayfly1: 3, 
	dayfly1Top:"70px",
	dayfly1Left:"150px",
	dayfly1Font:"1.2em",
	
	dayfly5: 1, 
	dayfly5Top:"142px",
	dayfly5Left:"380px",
	dayfly5Font:"0.8em",
	
	data_fly: 3, 
	data_flyTop:"125px",
	data_flyLeft:"240px",
	data_flyFont:"0.8em",
	
	data_fly1: 3, 
	data_fly1Top:"105px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 3, 
	nomertkt1Top:"168px",
	nomertkt1Left:"88px",
	nomertkt1Font:"0.8em",
	
	depart: 3, 
	departTop:"118px",
	departLeft:"342px",
	departFont:"0.6em",
	
	depart2: 3, 
	depart2Top:"120px",
	depart2Left:"90px",
	depart2Font:"0.8em",
	
	seat: 3, 
	seatTop:"70px",
	seatLeft:"263px",
	seatFont:"1.2em",
	
	seat2: 3, 
	seat2Top:"70px",
	seat2Left:"395px",
	seat2Font:"1.2em",
	
	seqno: 3, 
	seqnoTop:"168px",
	seqnoLeft:"375px",
	seqnoFont:"0.8em",

	seqno2: 3, 
	seqno2Top:"168px",
	seqno2Left:"279px",
	seqno2Font:"0.8em",
	
	
	},{ 

	path: "images/pass/3.png",
	
	term1: 4, 
	term1Top: "117px",
	term1Left: "100px",
	term1Font: "0.8em",
	
	term2: 4, 
	term2Top: "63px",
	term2Left:"335px",
	term2Font:"0.8em",
	
	author2: 4, 
	author2Top:"77px",
	author2Left:"87px",
	author2Font:"0.8em",
	
	author4: 4, 
	author4Top:"58px",
	author4Left:"323px",
	author4Font:"0.8em",
	
	gate: 4, 
	gateTop:"136px",
	gateLeft:"236px",
	gateFont:"1.5em",
	
	gate2: 4, 
	gate2Top:"115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 4, 
	rise1Top:"95px",
	rise1Left:"87px",
	rise1Font:"0.8em",
	
	rise2: 4, 
	rise2Top:"95px",
	rise2Left:"322px",
	rise2Font:"0.8em",
	
	dayfly1: 4, 
	dayfly1Top:"95px",
	dayfly1Left:"190px",
	dayfly1Font:"0.8em",
	
	dayfly5: 4, 
	dayfly5Top:"115px",
	dayfly5Left:"345px",
	dayfly5Font:"0.8em",
	
	data_fly: 4, 
	data_flyTop:"95px",
	data_flyLeft:"140px",
	data_flyFont:"0.8em",
	
	data_fly1: 4, 
	data_fly1Top:"95px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 4, 
	nomertkt1Top:"112px",
	nomertkt1Left:"235px",
	nomertkt1Font:"0.8em",
	
	depart: 4, 
	departTop:"72px",
	departLeft:"335px",
	departFont:"0.5em",
	
	depart2: 4, 
	depart2Top:"127px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 4, 
	seatTop:"95px",
	seatLeft:"233px",
	seatFont:"0.8em",
	
	seat2: 4, 
	seat2Top:"115px",
	seat2Left:"395px",
	seat2Font:"0.8em",
	
	seqno: 4, 
	seqnoTop:"49px",
	seqnoLeft:"415px",
	seqnoFont:"0.8em",

	seqno2: 4, 
	seqno2Top:"95px",
	seqno2Left:"293px",
	seqno2Font:"0.8em",
	
	
	},
	{ 

	path: "images/pass/2.png",
	
	term1: 5, 
	term1Top: "107px",
	term1Left: "100px",
	term1Font: "0.8em",
	
	term2: 5, 
	term2Top: "63px",
	term2Left:"335px",
	term2Font:"0.8em",
	
	author2: 5, 
	author2Top:"77px",
	author2Left:"90px",
	author2Font:"0.8em",
	
	author4: 5, 
	author4Top:"58px",
	author4Left:"323px",
	author4Font:"0.8em",
	
	gate: 5, 
	gateTop:"150px",
	gateLeft:"180px",
	gateFont:"1.7em",
	
	gate2: 5, 
	gate2Top:"125px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 5, 
	rise1Top:"95px",
	rise1Left:"90px",
	rise1Font:"0.8em",
	
	rise2: 5, 
	rise2Top:"105px",
	rise2Left:"322px",
	rise2Font:"0.8em",
	
	dayfly1: 5, 
	dayfly1Top:"95px",
	dayfly1Left:"230px",
	dayfly1Font:"0.8em",
	
	dayfly5: 5, 
	dayfly5Top:"125px",
	dayfly5Left:"345px",
	dayfly5Font:"0.8em",
	
	data_fly: 5, 
	data_flyTop:"95px",
	data_flyLeft:"170px",
	data_flyFont:"0.8em",
	
	data_fly1: 5, 
	data_fly1Top:"105px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 5, 
	nomertkt1Top:"113px",
	nomertkt1Left:"225px",
	nomertkt1Font:"0.8em",
	
	depart: 5, 
	departTop:"72px",
	departLeft:"335px",
	departFont:"0.8em",
	
	depart2: 5, 
	depart2Top:"116px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 5, 
	seatTop:"140px",
	seatLeft:"90px",
	seatFont:"0.8em",
	
	seat2: 5, 
	seat2Top:"125px",
	seat2Left:"395px",
	seat2Font:"1.2em",
	
	seqno: 5, 
	seqnoTop:"51px",
	seqnoLeft:"415px",
	seqnoFont:"0.8em",

	seqno2: 5, 
	seqno2Top:"140px",
	seqno2Left:"293px",
	seqno2Font:"0.8em",
	
	
	},
	
	{ 

	path: "images/pass/1.png",
	
	term1: 6, 
	term1Top: "117px",
	term1Left: "100px",
	term1Font: "0.8em",
	
	term2: 6, 
	term2Top: "63px",
	term2Left:"335px",
	term2Font:"0.8em",
	
	author2: 6, 
	author2Top:"77px",
	author2Left:"87px",
	author2Font:"0.8em",
	
	author4: 6, 
	author4Top:"60px",
	author4Left:"323px",
	author4Font:"0.8em",
	
	gate: 6, 
	gateTop:"136px",
	gateLeft:"236px",
	gateFont:"1.5em",
	
	gate2: 6, 
	gate2Top:"115px",
	gate2Left:"324px",
	gate2Font:"0.8em",
	
	rise1: 6, 
	rise1Top:"95px",
	rise1Left:"87px",
	rise1Font:"0.8em",
	
	rise2: 6, 
	rise2Top:"95px",
	rise2Left:"322px",
	rise2Font:"0.8em",
	
	dayfly1: 6, 
	dayfly1Top:"95px",
	dayfly1Left:"190px",
	dayfly1Font:"0.8em",
	
	dayfly5: 6, 
	dayfly5Top:"115px",
	dayfly5Left:"345px",
	dayfly5Font:"0.8em",
	
	data_fly: 6, 
	data_flyTop:"95px",
	data_flyLeft:"140px",
	data_flyFont:"0.8em",
	
	data_fly1: 6, 
	data_fly1Top:"95px",
	data_fly1Left:"380px",
	data_fly1Font:"0.8em",
	
	nomertkt1: 6, 
	nomertkt1Top:"115px",
	nomertkt1Left:"235px",
	nomertkt1Font:"0.8em",
	
	depart: 6, 
	departTop:"72px",
	departLeft:"335px",
	departFont:"0.8em",
	
	depart2: 6, 
	depart2Top:"127px",
	depart2Left:"100px",
	depart2Font:"0.8em",
	
	seat: 6, 
	seatTop:"95px",
	seatLeft:"233px",
	seatFont:"0.8em",
	
	seat2: 6, 
	seat2Top:"115px",
	seat2Left:"395px",
	seat2Font:"0.8em",
	
	seqno: 6, 
	seqnoTop:"51px",
	seqnoLeft:"415px",
	seqnoFont:"0.8em",

	seqno2: 6, 
	seqno2Top:"95px",
	seqno2Left:"293px",
	seqno2Font:"0.8em",
	
	
	},
	];

 

 var arr = ['A', 'B', 'C1', 'C2', 'D', 'E', 'F']; // терминалы
 // верные данные персонажей
 var quotes = [
    ["ИВАНОВ/IVANOV ","ВЛАДИСЛАВ НИКОЛАЕВИЧ ","VLADISLAV ","IVANOV VLADISLAV"],
    ["ПЕТРОВ/PETROV ","СЕРГЕЙ СТЕПАНОВИЧ ","SERGEY ","PETROV SERGEY"],
    ["АЗАРОВИЧ/AZAROVICH ","АЛЕКСЕЙ ПЕТРОВИЧ ","ALEKSEY ","AZAROVICH ALEKSEY"],
    ["ШЛЕПАКОВ/SHLEPAKOV ","ИГОРЬ ВИКТОРОВИЧ ","IGOR ","SHLEPAKOV IGOR" ],
        ['АЛЕКСАНДРОВ/ALEKSANDROV', 'ВОЛЬДЕМАР АРИСТАРХОВИЧ', 'VOLDEMAR', 'ALEKSANDROV VOLDEMAR'],
        ['КОЛЕСНИКОВ/KOLESNIKOV', 'ПАВЕЛ ЛЬВОВИЧ', 'PAVEL', 'KOLESNIKOV PAVEL' ],
        ['ОДИНЦОВ/ODINCOV', 'КОРНЕЛИЙ УЛЕБОВИЧ', 'KORNELIJ', 'ODINCOV KORNELIJ' ],
        ['СИМОНОВ/SIMONOV ','ГОРДЕЙ ГРИГОРЬЕВИЧ', 'GORDEJ', 'SIMONOV GORDEJ'],
        ['НЕКРАСОВ/NEKRASOV','ЗИНОВИЙ ЮРЬЕВИЧ', 'ZINOVIJ','NEKRASOV ZINOVIJ' ],
        ['ФЕДОСЕЕВ/FEDOSEEV','ВЯЧЕСЛАВ ОСКАРОВИЧ', 'VYACHESLAV', 'FEDOSEEV VYACHESLAV'],
        ['СЕЛИВЕРСТОВ/SELIVERSTOV', 'АРСЕНИЙ ДАМИРОВИЧ','ARSENIJ','SELIVERSTOV ARSENIJ' ],
        ['АБРАМОВ/ABRAMOV', 'ВИТОЛЬД СЕМЁНОВИЧ ','VITOLD','ABRAMOV VITOLD '],
        ['ВОРОНЦОВ/VORONCOV', 'МЕЧЕСЛАВ ПАНТЕЛЕЙМОНОВИЧ', 'MECHESLAV','VORONCOV MECHESLAV' ],
        ['САВЕЛЬЕВ/SAVELEV','ВЕНЕДИКТ ЮРЬЕВИЧ','VENEDIKT', 'SAVELEV VENEDIKT' ],
        ['ДМИТРИЕВ/DMITRIEV ','ВИЛЕН ФЕДОТОВИЧ','VILEN', 'DMITRIEV VILEN'],
        ['НИКИТИН/NIKITIN','ЕВГЕНИЙ ДАНИИЛОВИЧ','EVGENIJ','NIKITIN EVGENIJ' ],
        ['КОНДРАТЬЕВ/KONDRATEV ', 'ЭДУАРД ЭДУАРДОВИЧ','EDUARD','KONDRATEV EDUARD' ],
        ['ОВЧИННИКОВ/ OVCHINNIKOV', 'ВАЛЕРИЙ ЕГОРОВИЧ','VALERIJ','OVCHINNIKOV VALERIJ' ],
        ['БРАГИН/BRAGIN ','ЗИНОВИЙ ИГНАТЬЕВИЧ' ,'ZINOVIJ', 'BRAGIN ZINOVIJ'],
        ['ИВАНКОВ/IVANKOV','ЛАЗАРЬ СВЯТОСЛАВОВИЧ', 'LAZAR','IVANKOV LAZAR'],
        ['ДЕНИСОВ/DENISOV','ОСТАП ИГОРЕВИЧ', 'OSTAP ','DENISOV OSTAP'],
        ['ТЕТЕРИН/TETERIN','ТИМУР ДАНИИЛОВИЧ', 'TIMUR', 'TETERIN TIMUR'],
        ['КОЛЕСНИКОВ/KOLESNIKOV','ЛЮДВИГ ГЕОРГЬЕВИЧ','LYUDVIG','KOLESNIKOV LYUDVIG'  ],
        ['ДЕНИСОВ/DENISOV', 'ЛЮДВИГ СЕРАПИОНОВИЧ' ,'LYUDVIG ', 'DENISOV LYUDVIG'],

        ['АНТОНОВ/ANTONOV','ЖИГЕР ИВАНОВИЧ','ZHIGER','ANTONOV ZHIGER']
        ['НЕГОДА/NEGODA', 'ЕЛИСЕЙ АНДРЕЕВИЧ','ELISEI','NEGODA ELISEI'],
        ['ФЕДОРЕНКО/FEDORENKO', 'ЕФРЕМ ВАСИЛЬЕВИЧ','EFREM','FEDORENKO EFREM' ],
        ['ТЕРЕНТЬЕВ/TERENTEV', 'ЭДУАРД ВАЛЕРИЕВИЧ','EDUARD', 'TERENTEV EDUARD'],
        ['БЕЛЯЕВ/BELIAEV', 'ФЕЛИКС БРОНИСЛАВОВИЧ','FELIKS', 'BELIAEV FELIKS'],
        ['ВАЛЬКОВСКИЙ/VALKOVSKII', 'ЖДАН ФЁДОРОВИЧ','ZHDAN','VALKOVSKII ZHDAN '],
        ['САФОНОВ/SAFONOV', 'ЖЕРАР ВАСИЛЬЕВИЧ','ZHERAR', 'SAFONOV ZHERAR'],
        ['БОБРОВ/BOBROV', 'ДЕНИС АНДРЕЕВИЧ','DENIS', 'BOBROV DENIS'],
        ['НИКИФОРОВ/NIKIFOROV', 'ФИЛИПП БОРИСОВИЧ','FILIPP', 'NIKIFOROV FILIPP '],
        ['СЕЛЕЗНЁВ/SELEZNEV', 'МАКСИМ ДАНИЛОВИЧ','MAKSIM', 'SELEZNEV MAKSIM '],
        ['ВЛАСОВ/VLASOV', 'ЧАРЛЬЗ ДАНИЛОВИЧ', 'CHARLZ', 'VLASOV CHARLZ'],
        ['ТИХОНОВ/TIKHONOV', 'ЙОХАНЕС ДМИТРИЕВИЧ','IOKHANES','TIKHONOV IOKHANES' ],
        ['КУДРЯВЦЕВ/KUDRIAVTSEV', 'ЛЮДОВИК ГРИГОРЬЕВИЧ','LIUDOVIK','KUDRIAVTSEV LIUDOVIK '],
        ['ЖУРАВЛЁВ/ZHURAVLEV', 'ЮЛИАН АЛЕКСАНДРОВИЧ','IULIAN', 'ZHURAVLEV IULIAN '],
        ['ШУБИН/SHUBIN', 'ЙОНАС ЯРОСЛАВОВИЧ','IONAS', 'SHUBIN IONAS '],
        ['ШУБИН/SHUBIN', 'ЧАРЛЬЗ ВАДИМОВИЧ','CHARLZ', 'SHUBIN CHARLZ '],
        ['ЗИМИН/ZIMIN', 'ШАРЛЬ ИВАНОВИЧ','SHARL', 'ZIMIN SHARL'],
        ['ПАЛИЙ/PALII', 'МИХАИЛ МИХАЙЛОВИЧ' ,'MIKHAIL','PALII MIKHAIL' ],
        ['ПЕТРЕНКО/PETRENKO', 'МАРАТ ПЛАТОНОВИЧ','MARAT' ,'PETRENKO MARAT' ],
        ['ИГНАТЬЕВ/IGNATEV', 'ЭРИК ВАЛЕРИЕВИЧ','ERIK', 'IGNATEV ERIK '],

        ['ПОТАПОВ/POTAPOV', 'КАМИЛЬ ВЛАДИМИРОВИЧ','KAMIL','POTAPOV KAMIL'],
        ['ВЕСЕЛОВ/VESELOV', 'ДАНИИЛ БОРИСОВИЧ ','DANIIL','VESELOV DANIIL' ],
        ['КУЛИБАБА/KULIBABA', 'ФЕЛИКС ВАЛЕРИЕВИЧ ','FELIKS','KULIBABA FELIKS'],
        ['ЖДАНОВ/ZHDANOV', 'АБРАМ ГРИГОРЬЕВИЧ ','ABRAM','ZHDANOV ABRAM' ],
        ['ПЕТУХОВ/PETUKHOV', 'ГЕРАСИМ АЛЕКСАНДРОВИЧ','GERASIM','PETUKHOV GERASIM' ],
        [' ЛЕГОЙДА/LEGOIDA', 'ЗАУР АРТЁМОВИЧ','ZAUR','LEGOIDA ZAUR' ],
        [' РОДИОНОВ/RODIONOV', 'ЕРЕМЕЙ ВЛАДИМИРОВИЧ ','EREMEI','RODIONOV EREMEI '],
        ['БАРАНОВСКИЙ/BARANOVSKII', 'ЙОЗЕФ ЮХИМОВИЧ','IOZEF','BARANOVSKII IOZEF '],
        ['СПИВАК/SPIVAK', 'ХАРИТОН ВИТАЛИЕВИЧ','KHARITON' ,'SPIVAK KHARITON' ],
        [' БАРАНОВСКИЙ/BARANOVSKII', 'УСТИН БОГДАНОВИЧ ','USTIN','BARANOVSKII USTIN' ],
        ['СУСАРЕНКО/SUSARENKO', 'ЦЕФАС СТАНИСЛАВОВИЧ ','TSEFAS','SUSARENKO TSEFAS' ],
        [' НИКИФОРОВ/NIKIFOROV', 'ШАМИЛЬ СЕРГЕЕВИЧ','SHAMIL','NIKIFOROV SHAMIL' ],
        ['РОГОВ/ROGOV', 'ЦЕФАС МАКСИМОВИЧ','TSEFAS','ROGOV TSEFAS' ],
        [' СИРКО/SIRKO', 'РАФАИЛ РОМАНОВИЧ','RAFAIL ','SIRKO RAFAIL' ],
        [' РОГОВ/ROGOV', 'КИР ЯРОСЛАВОВИЧ','KIR','ROGOV KIR' ],
        [' КАСЬКИВ/KASKIV', 'ОСТАП ЯРОСЛАВОВИЧ','OSTAP','KASKIV OSTAP '],
        ['ЕВСЕЕВ/EVSEEV', 'ИММАНУИЛ МАКСИМОВИЧ','IMMANUIL','EVSEEV IMMANUIL'],
        ['НОСОВ/NOSOV', 'ДОНАТ АЛЕКСЕЕВИЧ','DONAT','NOSOV DONAT' ],
        ['ЛЕГОЙДА/LEGOIDA', 'КАРЕН ДАНИЛОВИЧ','KAREN','LEGOIDA KAREN'],
        ['ГОРОДЕЦКИЙ/GORODETSKII', 'ЕВСЕЙ АНДРЕЕВИЧ ','EVSEI','GORODETSKII EVSEI' ],
        ['МАСЛОВСКИЙ/MASLOVSKII', 'ВАЛЕРИЙ ФЁДОРОВИЧ ','VALERII' ,'MASLOVSKII VALERII '],
        ['АРТЕМЬЕВ/ARTEMEV', 'ЕВДОКИМ МАКСИМОВИЧ','EVDOKIM','ARTEMEV EVDOKIM' ],
        [' КАЛАШНИКОВ/KALASHNIKOV', 'ПАВЕЛ ВАЛЕРИЕВИЧ ','PAVEL','KALASHNIKOV PAVEL' ],
        ['ПОГОМИЙ/POGOMII', 'АНТОНИН ПЕТРОВИЧ','ANTONIN','POGOMII ANTONIN' ],
        ['ПОГОМИЙ/POGOMII', 'ФЕЛИКС ВАЛЕРИЕВИЧ','FELIKS' ,'POGOMII FELIKS '],
        ['ФОМИЧЁВ/FOMICHEV', 'ГЛЕБ СЕРГЕЕВИЧ','GLEB ','FOMICHEV GLEB '],
        [' КУЛИКОВ/KULIKOV', 'КЛИМ СЕРГЕЕВИЧ','KLIM','KULIKOV KLIM' ],
        ['МЕДВЕДЕВ/MEDVEDEV', 'БРОНИСЛАВ ЭДУАРДОВИЧ','BRONISLAV','MEDVEDEV BRONISLAV'],
        ['ЗЫКОВ/ZYKOV', 'ЮЛИЙ ИВАНОВИЧ','IULII','ZYKOV IULII' ],



['ВОДОЛЕЕВ/VODOLEEV','ВАСИЛИЙ АВГУСТОВИЧ','VASILII','VODOLEEV VASILII'],
['РЯБЦЕВ/RIABTSEV','КОНСТАНТИН ИОСИФОВИЧ','KONSTANTIN','RIABTSEV KONSTANTIN'],
['СИЗЫЙ/SIZYI','НИКИФОР ДЕНИСОВИЧ','NIKIFOR','SIZYI NIKIFOR'],
['ШЕРЕМЕТЬЕВ/SHEREMETEV','НАИЛЬ ПЛАТОНОВИЧ','NAIL','SHEREMETEV NAIL'],
['ПОНОМАРЁВ/PONOMAREV','ЕФРЕМ НИКОЛАЕВИЧ','EFREM','PONOMAREV EFREM'],
['ЯБЛОНСКИЙ/IABLONSKII','МАРТИН ГЕРАСИМОВИЧ','MARTIN','IABLONSKII MARTIN'],
['РУГОВ/RUGOV','ИГОРЬ АНАТОЛЬЕВИЧ','IGOR','RUGOV IGOR'],
['РУНОВ/RUNOV','ИЛЬЯС АНАТОЛЬЕВИЧ','ILIAS','RUNOV ILIAS'],
['ТЁМКИН/TEMKIN','СТАНИСЛАВ БОРИСОВИЧ','STANISLAV','TEMKIN STANISLAV'],
['ЦАРИЦЫН/TSARITSYN','РАМИЗ МАРКОВИЧ','RAMIZ','TSARITSYN RAMIZ'],
['ОСИН/OSIN','ЭРАСТ БОГУСЛАВОВИЧ','EHRAST','OSIN EHRAST'],
['ХЛЕБОВ/KHLEBOV','АДИС ЯРОСЛАВОВИЧ','ADIS','KHLEBOV ADIS'],
['СОКОЛОВ/SOKOLOV','НАТАН ПЛАТОНОВИЧ','NATAN','SOKOLOV NATAN'],
['ЕЛЬЦОВ/ELTSOV','ФЕДОР МИТРОФАНОВИЧ','FEDOR','ELTSOV FEDOR'],
['СТАРИКОВ/STARIKOV','РОМАН НАУМОВИЧ','ROMAN','STARIKOV ROMAN'],
['СУХАНОВ/SUKHANOV','ГЕВОР САВЕЛЬЕВИЧ','GEVOR','SUKHANOV GEVOR'],
['ЧИРКАШ/CHIRKASH','ТАИС КОНДРАТЬЕВИЧ','TAIS','CHIRKASH TAIS'],
['ЕРШОВ/ERSHOV','БРУНО НАУМОВИЧ','BRUNO','ERSHOV BRUNO'],
['РУЧКИН/RUCHKIN','МАРАТ МАКСОВИЧ','MARAT','RUCHKIN MARAT'],
['ЗЫРЯНОВ/ZYRIANOV','МОИСЕЙ АЛЕКСЕЕВИЧ','MOISEI','ZYRIANOV MOISEI'],
['МЯУКИН/MIAUKIN','ЭМИН ЯРОСЛАВОВИЧ','EHMIN','MIAUKIN EHMIN'],
['ЛЮБОВ/LIUBOV','ЮЛИЙ ВЛАДИМИРОВИЧ','IULII','LIUBOV IULII'],
['КОЛЛЕРОВ/KOLLEROV','АЗАРИЙ ОЛЕГОВИЧ','AZARII','KOLLEROV AZARII'],
['ЮГАНЦЕВ/IUGANTSEV','ХРИСТИАН ГЕРМАНОВИЧ','KHRISTIAN','IUGANTSEV KHRISTIAN'],
['ПРОХОРОВ/PROKHOROV','ПЕТР ВЛАДИМИРОВИЧ','PETR','PROKHOROV PETR'],
['КОРЕНЕВ/KORENEV','ВАЛЕНТИН АКИМОВИЧ','VALENTIN','KORENEV VALENTIN'],
['АБРАМОВ/ABRAMOV','АРСЛАН АНДРЕЕВИЧ','ARSLAN','ABRAMOV ARSLAN'],
['МИЛЮКОВ/MILIUKOV','ГЕОРГИЙ СЕРГЕЕВИЧ','GEORGII','MILIUKOV GEORGII'],
['ШАЛЯПИН/SHALIAPIN','ЕРМОЛАЙ РОБЕРТОВИЧ','ERMOLAI','SHALIAPIN ERMOLAI'],
['ДУРОВ/DUROV','ЖАН АНДРЕЕВИЧ','ZHAN','DUROV ZHAN'],
['МУХОМОРОВ/MUKHOMOROV','АВРААМ МАТВЕЕВИЧ','AVRAAM','MUKHOMOROV AVRAAM'],
['МОРОШКИН/MOROSHKIN','ФИЛИПП АЛЕКСЕЕВИЧ','FILIPP','MOROSHKIN FILIPP'],
['СЕВЕРИНОВ/SEVERINOV','ВАЛЕРИЙ ВАЛЕНТИНОВИЧ','VALERII','SEVERINOV VALERII'],
['КИЛЕССО/KILESSO','ФЕДОР ГРИГОРЬЕВИЧ','FEDOR','KILESSO FEDOR'],
['ТРУСОВ/TRUSOV','ФЛОРЕНТИЙ КОНДРАТЬЕВИЧ','FLORENTII','TRUSOV FLORENTII'],
['БИРЮКОВ/BIRIUKOV','ДОБРЫНЯ ГЕРАСИМОВИЧ','DOBRYNIA','BIRIUKOV DOBRYNIA'],
['СНАТКИН/SNATKIN','АЙРАТ АРТЕМОВИЧ','AIRAT','SNATKIN AIRAT'],
['БЕЛОГЛАЗОВ/BELOGLAZOV','ЕРЕМЕЙ МИТРОФАНОВИЧ','EREMEI','BELOGLAZOV EREMEI'],
['ТРУТНЕВ/TRUTNEV','ТЕРЕНТИЙ РУСЛАНОВИЧ','TERENTII','TRUTNEV TERENTII'],
['РАСПОПОВ/RASPOPOV','МАРТИН САВЕЛЬЕВИЧ','MARTIN','RASPOPOV MARTIN'],
['ЛУКОВ/LUKOV','ОНИСИМ АДАМОВИЧ','ONISIM','LUKOV ONISIM'],
['ПОЛИЧЕВ/POLICHEV','АНДРЕЙ ФЕЛИКСОВИЧ','ANDREI','POLICHEV ANDREI'],
['БАРАНОВ/BARANOV','АГГЕЙ ТАРАСОВИЧ','AGGEI','BARANOV AGGEI'],
['БОРЦОВ/BORTSOV','АГАП ГЕННАДЬЕВИЧ','AGAP','BORTSOV AGAP'],
['ЁЛКОВ/ELKOV','ВАЦЛАВ АФАНАСЬЕВИЧ','VATSLAV','ELKOV VATSLAV'],
['ШУРШАЛИН/SHURSHALIN','ВЛАДЛЕН ВАСИЛЬЕВИЧ','VLADLEN','SHURSHALIN VLADLEN'],
['ЭТУШ/EHTUSH','ГАЯС ПРОХОРОВИЧ','GAIAS','EHTUSH GAIAS'],
['КАРАНДАШОВ/KARANDASHOV','САМСОН ИВАНОВИЧ','SAMSON','KARANDASHOV SAMSON'],
['ШАТАЛОВ/SHATALOV','ЛАЗАРЬ ЮЛЬЕВИЧ','LAZAR','SHATALOV LAZAR'],
['СВАЛОВ/SVALOV','ГЛЕБ КИРИЛЛОВИЧ','GLEB','SVALOV GLEB'],
['АБРАМОВ/ABRAMOV','ИЛЬЯ ВЛАДИМИРОВИЧ','ILIA','ABRAMOV ILIA'],
['АНАНЬЕВ/ANANEV','АНТОН АРТЁМОВИЧ','ANTON','ANANEV ANTON'],
['АНДРИАНОВ/ANDRIANOV','НИКОЛАЙ АРТЁМОВИЧ','NIKOLAI','ANDRIANOV NIKOLAI'],
['АНТОНОВ/ANTONOV','ДАНИИЛ АЛЕКСАНДРОВИЧ','DANIIL','ANTONOV DANIIL'],
['АНТОНОВ/ANTONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','ANTONOV ILIA'],
['БОЛДЫРЕВ/BOLDYREV','МИХАИЛ ВЛАДИМИРОВИЧ','MIKHAIL','BOLDYREV MIKHAIL'],
['БОНДАРЕВ/BONDAREV','ВСЕВОЛОД РОМАНОВИЧ','VSEVOLOD','BONDAREV VSEVOLOD'],
['БОРИСОВ/BORISOV','ЮРИЙ ВИКТОРОВИЧ','IURII','BORISOV IURII'],
['БОРИСОВ/BORISOV','ИВАН АЛЕКСАНДРОВИЧ','IVAN','BORISOV IVAN'],
['БОЧАРОВ/BOCHAROV','ЗАХАР АНДРЕЕВИЧ','ZAKHAR','BOCHAROV ZAKHAR'],
['ВИНОГРАДОВ/VINOGRADOV','ИВАН ПАВЛОВИЧ','IVAN','VINOGRADOV IVAN'],
['ВОЛКОВ/VOLKOV','ИВАН ИВАНОВИЧ','IVAN','VOLKOV IVAN'],
['ДАВЫДОВ/DAVYDOV','ПЛАТОН АЛЕКСАНДРОВИЧ','PLATON','DAVYDOV PLATON'],
['ДЕНИСОВ/DENISOV','АЛЕКСАНДР МАКСИМОВИЧ','ALEKSANDR','DENISOV ALEKSANDR'],
['ДМИТРИЕВ/DMITRIEV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','DMITRIEV MATVEI'],
['ДОРОФЕЕВ/DOROFEEV','АНДРЕЙ ИЛЬИЧ','ANDREI','DOROFEEV ANDREI'],
['ДЬЯКОВ/DIAKOV','АНДРЕЙ РОМАНОВИЧ','ANDREI','DIAKOV ANDREI'],
['ЕГОРОВ/EGOROV','МИРОН АРТЁМОВИЧ','MIRON','EGOROV MIRON'],
['ЕМЕЛЬЯНОВ/EMELIANOV','АЛЕКСАНДР ДАНИИЛОВИЧ','ALEKSANDR','EMELIANOV ALEKSANDR'],
['ЗАЙЦЕВ/ZAITSEV','АРТЁМ ЮРЬЕВИЧ','ARTEM','ZAITSEV ARTEM'],
['ЗАХАРОВ/ZAKHAROV','ИВАН КИРИЛЛОВИЧ','IVAN','ZAKHAROV IVAN'],
['ЗАХАРОВ/ZAKHAROV','ЕВГЕНИЙ АРТЁМОВИЧ','EVGENII','ZAKHAROV EVGENII'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ВЛАДИМИРОВИЧ','IVAN','ZAKHAROV IVAN'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ЕГОРОВИЧ','IVAN','ZAKHAROV IVAN'],
['ЗИМИН/ZIMIN','ФЁДОР СТЕПАНОВИЧ','FEDOR','ZIMIN FEDOR'],
['ЗОЛОТОВ/ZOLOTOV','МИХАИЛ ГЕРМАНОВИЧ','MIKHAIL','ZOLOTOV MIKHAIL'],
['ЗОРИН/ZORIN','ИВАН НИКИТИЧ','IVAN','ZORIN IVAN'],
['ЗУБОВ/ZUBOV','ЕГОР ФИЛИППОВИЧ','EGOR','ZUBOV EGOR'],
['ИВАНОВ/IVANOV','САВЕЛИЙ АЛЕКСЕЕВИЧ','SAVELII','IVANOV SAVELII'],
['ИВАНОВ/IVANOV','АЛЕКСАНДР САВЕЛЬЕВИЧ','ALEKSANDR','IVANOV ALEKSANDR'],
['ИВАНОВ/IVANOV','ТИМУР РОМАНОВИЧ','TIMUR','IVANOV TIMUR'],
['ИГНАТОВ/IGNATOV','МАКАР АЛЕКСАНДРОВИЧ','MAKAR','IGNATOV MAKAR'],
['КАЛИНИН/KALININ','АРТЁМ ИЛЬИЧ','ARTEM','KALININ ARTEM'],
['КАЛМЫКОВ/KALMYKOV','АРТУР ФЁДОРОВИЧ','ARTUR','KALMYKOV ARTUR'],
['КАРАСЕВ/KARASEV','МИРОСЛАВ ГЕОРГИЕВИЧ','MIROSLAV','KARASEV MIROSLAV'],
['КАРПОВ/KARPOV','МАРК ВЛАДИМИРОВИЧ','MARK','KARPOV MARK'],
['КИРЕЕВ/KIREEV','ВЛАДИМИР ВЛАДИМИРОВИЧ','VLADIMIR','KIREEV VLADIMIR'],
['КИРИЛЛОВ/KIRILLOV','ЕЛИСЕЙ ТИМОФЕЕВИЧ','ELISEI','KIRILLOV ELISEI'],
['КЛИМОВ/KLIMOV','ЛЕВ КОНСТАНТИНОВИЧ','LEV','KLIMOV LEV'],
['КОВАЛЕВ/KOVALEV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','KOVALEV DMITRII'],
['КОМАРОВ/KOMAROV','МАКСИМ МИХАЙЛОВИЧ','MAKSIM','KOMAROV MAKSIM'],
['КОНОВАЛОВ/KONOVALOV','ДМИТРИЙ ИВАНОВИЧ','DMITRII','KONOVALOV DMITRII'],
['КОШЕЛЕВ/KOSHELEV','АРТЁМ ЗАХАРОВИЧ','ARTEM','KOSHELEV ARTEM'],
['КУЗНЕЦОВ/KUZNETSOV','ФИЛИПП МИРОНОВИЧ','FILIPP','KUZNETSOV FILIPP'],
['КУЗНЕЦОВ/KUZNETSOV','ДМИТРИЙ ТИМОФЕЕВИЧ','DMITRII','KUZNETSOV DMITRII'],
['КУЗНЕЦОВ/KUZNETSOV','ГЛЕБ МАРКОВИЧ','GLEB','KUZNETSOV GLEB'],
['КУЗЬМИН/KUZMIN','ВАЛЕРИЙ СЕРГЕЕВИЧ','VALERII','KUZMIN VALERII'],
['КУПРИЯНОВ/KUPRIIANOV','КОНСТАНТИН МАКСИМОВИЧ','KONSTANTIN','KUPRIIANOV KONSTANTIN'],
['ЛАЗАРЕВ/LAZAREV','АРТЁМ ГОРДЕЕВИЧ','ARTEM','LAZAREV ARTEM'],
['ЛАРИН/LARIN','ВАДИМ ДАНИИЛОВИЧ','VADIM','LARIN VADIM'],
['ЛАТЫШЕВ/LATYSHEV','КИРИЛЛ НИКОЛАЕВИЧ','KIRILL','LATYSHEV KIRILL'],
['ЛЕБЕДЕВ/LEBEDEV','ТИМУР МАКСИМОВИЧ','TIMUR','LEBEDEV TIMUR'],
['ЛЕВИН/LEVIN','ГЕОРГИЙ МАРКОВИЧ','GEORGII','LEVIN GEORGII'],
['МАЙОРОВ/MAIOROV','СЕРГЕЙ ДЕНИСОВИЧ','SERGEI','MAIOROV SERGEI'],
['МАЛЫШЕВ/MALYSHEV','НИКОЛАЙ ГЛЕБОВИЧ','NIKOLAI','MALYSHEV NIKOLAI'],
['МАЛЫШЕВ/MALYSHEV','ТИХОН СТЕПАНОВИЧ','TIKHON','MALYSHEV TIKHON'],
['МАРКЕЛОВ/MARKELOV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','MARKELOV PAVEL'],
['МАРКИН/MARKIN','ДЕНИС ИЛЬИЧ','DENIS','MARKIN DENIS'],
['МАРКОВ/MARKOV','СЕРГЕЙ МИХАЙЛОВИЧ','SERGEI','MARKOV SERGEI'],
['МЕЛЬНИКОВ/MELNIKOV','ДЕНИС БОГДАНОВИЧ','DENIS','MELNIKOV DENIS'],
['МОРОЗОВ/MOROZOV','КОНСТАНТИН НИКИТИЧ','KONSTANTIN','MOROZOV KONSTANTIN'],
['НИКИТИН/NIKITIN','МАТВЕЙ КОНСТАНТИНОВИЧ','MATVEI','NIKITIN MATVEI'],
['НИКОЛАЕВ/NIKOLAEV','АРТЁМ МАКАРОВИЧ','ARTEM','NIKOLAEV ARTEM'],
['НИКОЛАЕВ/NIKOLAEV','ВЯЧЕСЛАВ МАРКОВИЧ','VIACHESLAV','NIKOLAEV VIACHESLAV'],
['ОВСЯННИКОВ/OVSIANNIKOV','МАКСИМ НИКИТИЧ','MAKSIM','OVSIANNIKOV MAKSIM'],
['ОРЛОВ/ORLOV','РОМАН МАКСИМОВИЧ','ROMAN','ORLOV ROMAN'],
['ОСИПОВ/OSIPOV','ЕГОР ВЯЧЕСЛАВОВИЧ','EGOR','OSIPOV EGOR'],
['ПЕТРОВ/PETROV','ВЛАДИМИР КИРИЛЛОВИЧ','VLADIMIR','PETROV VLADIMIR'],
['ПЕТРОВСКИЙ/PETROVSKII','НИКИТА АЛЕКСЕЕВИЧ','NIKITA','PETROVSKII NIKITA'],
['ПЛАТОНОВ/PLATONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','PLATONOV ILIA'],
['ПОПОВ/POPOV','ИВАН МАКСИМОВИЧ','IVAN','POPOV IVAN'],
['ПОПОВ/POPOV','НИКИТА ВЛАДИМИРОВИЧ','NIKITA','POPOV NIKITA'],
['ПОПОВ/POPOV','ГЛЕБ РОМАНОВИЧ','GLEB','POPOV GLEB'],
['РОМАНОВ/ROMANOV','ПАВЕЛ НИКИТИЧ','PAVEL','ROMANOV PAVEL'],
['САЗОНОВ/SAZONOV','ГРИГОРИЙ АЛЕКСАНДРОВИЧ','GRIGORII','SAZONOV GRIGORII'],
['СЕВАСТЬЯНОВ/SEVASTIANOV','ГЛЕБ МАТВЕЕВИЧ','GLEB','SEVASTIANOV GLEB'],
['СЕМЕНОВ/SEMENOV','РОБЕРТ ЕВГЕНЬЕВИЧ','ROBERT','SEMENOV ROBERT'],
['СМИРНОВ/SMIRNOV','ЛЕВ АРТЁМОВИЧ','LEV','SMIRNOV LEV'],
['СМИРНОВ/SMIRNOV','МИРОН МАРКОВИЧ','MIRON','SMIRNOV MIRON'],
['СОКОЛОВ/SOKOLOV','АЛЕКСЕЙ ГЕОРГИЕВИЧ','ALEKSEI','SOKOLOV ALEKSEI'],
['СОЛОВЬЕВ/SOLOVEV','ИВАН ЛЕОНИДОВИЧ','IVAN','SOLOVEV IVAN'],
['СПИРИДОНОВ/SPIRIDONOV','МИХАИЛ АРТЁМОВИЧ','MIKHAIL','SPIRIDONOV MIKHAIL'],
['СУСЛОВ/SUSLOV','ФЁДОР РУСЛАНОВИЧ','FEDOR','SUSLOV FEDOR'],
['УВАРОВ/UVAROV','МАТВЕЙ ДАНИИЛОВИЧ','MATVEI','UVAROV MATVEI'],
['УЛЬЯНОВ/ULIANOV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','ULIANOV MATVEI'],
['ФЕДОСЕЕВ/FEDOSEEV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','FEDOSEEV GLEB'],
['ФЕДОТОВ/FEDOTOV','ЛЕВ ИЛЬИЧ','LEV','FEDOTOV LEV'],
['ФИЛИППОВ/FILIPPOV','ЕГОР АРТЁМОВИЧ','EGOR','FILIPPOV EGOR'],
['ЦАРЕВ/TSAREV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','TSAREV PAVEL'],
['ЧЕРНЫХ/CHERNYKH','ГЕОРГИЙ АЛЕКСАНДРОВИЧ','GEORGII','CHERNYKH GEORGII'],
['ЧЕРНЫШЕВ/CHERNYSHEV','МАРК ЕЛИСЕЕВИЧ','MARK','CHERNYSHEV MARK'],
['ЧЕРНЫШЕВ/CHERNYSHEV','АРТЁМ МАРКОВИЧ','ARTEM','CHERNYSHEV ARTEM'],
['ЧИСТЯКОВ/CHISTIAKOV','ГЕРМАН ГЕОРГИЕВИЧ','GERMAN','CHISTIAKOV GERMAN'],
['ЧИСТЯКОВ/CHISTIAKOV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','CHISTIAKOV DMITRII'],
['ЧУМАКОВ/CHUMAKOV','МИРОСЛАВ КОНСТАНТИНОВИЧ','MIROSLAV','CHUMAKOV MIROSLAV'],
['ЧУМАКОВ/CHUMAKOV','АРСЕНИЙ ДАНИИЛОВИЧ','ARSENII','CHUMAKOV ARSENII'],
['ШАРОВ/SHAROV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','SHAROV GLEB'],
['ШИРЯЕВ/SHIRIAEV','ЕГОР ГЕОРГИЕВИЧ','EGOR','SHIRIAEV EGOR'],
['ШМЕЛЕВ/SHMELEV','АНДРЕЙ КИРИЛЛОВИЧ','ANDREI','SHMELEV ANDREI'],
['ЩУКИН/SHCHUKIN','РОМАН МИХАЙЛОВИЧ','ROMAN','SHCHUKIN ROMAN'],


];
//__________________________________________________________________________________________


// неверные данные персонажей
 var quotes2 = [
    [ "ИВАНОВ/IVANOV ", "ВЛАДИСЛАВ НИКОЛАЕВИЧ ", "VLADISLAV ", "IVANKOV VLADISLAV" ],
    [  "ПЕТРОВ/PETROV ","АЛЕКСЕЙ СТЕПАНОВИЧ ", "ALEKSEY ",  "PETROV SERGEY"  ],
    ["АЗАРОВ/AZAROV ", "АЛЕКСАНДР ПЕТРОВИЧ ","ALEKSANDR ", "AZAROVICH ALEKSEY" ],
    [  "ШЛЕПАКОВ/SHLEPAKOV ",  "ИГОРЬ ВИКТОРОВИЧ ", "IGOR ",  "SHLEPAKOVICH IVAN" ],
         ['АЛЕКСАНДРОВ/ALEKSANDROV', 'ВОЛЬДЕМАР АРИСТАРХОВИЧ', 'VOLDEMAR', 'ALEKSEEV VOLDEMAR'],
                ['КОЛЕСНИКОВ/KOLESNIKOV', 'ПАВЕЛ ЛЬВОВИЧ', 'PAVEL', 'KOLESNIKOV ANTON' ],
                ['ОДИНЦОВ/ODINCOV', 'КОРНЕЛИЙ УЛЕБОВИЧ', 'KORNELIJ', 'ODINSOV KIRILL' ],
                ['СИМОНОВ/SIMONOV ','ГОРДЕЙ ГРИГОРЬЕВИЧ', 'GORDEJ', 'SIMONOV GRIGORIJ'],
                ['НЕКРАСОВИЧ/NEKRASОVICH','ЗИНОВИЙ АЛЕКСАНДРОВИЧ', 'ZINOVIJ','NEKRASOV ZINOVIJ' ],
                ['ФЕДОСЕЕВ/FEDOSEEV','CВЯТОСЛАВ ОСКАРОВИЧ', 'SVYATOSLAV', 'FEDOROV VYACHESLAV'],
                ['СЕЛИВЕРСТОВ/SELIVERSTOV', 'АРСЕН ДАМИРОВИЧ','ARSEN','SELIVERSTOV ARSENIJ' ],
                ['АБРАМОВ/ABRAMOV', 'ВИТАЛИЙ СЕМЁНОВИЧ ','VITALIJ','ABRAMOV VITOLD '],
                ['ВОРОНЦОВ/VORONCOV', 'МЕЧЕСЛАВ ПАНТЕЛЕЙМОНОВИЧ', 'MECHESLAV','VORONCOVICH MECHESLAV' ],
                ['САВЕЛЬЕВ/SAVELEV','ВЕНЕДИКТ ЮРЬЕВИЧ','VENEDIKT', 'SAVELIVICH VENEDIKT' ],
                ['ДМИТРИЕВ/DMITRIEV ','ВИКТОР ФЕДОТОВИЧ','VIKTOR', 'DMITRIEV VILEN'],
                ['НИКИТИН/NIKITIN','ЕВГЕНИЙ ДАНИИЛОВИЧ','EVGENIJ','NIKITIN ALEKSANDR' ],
                ['КОНДРАТЬЕВ/KONDRATEV ', 'ЭДУАРД ЭДУАРДОВИЧ','EDUARD','KODRATEV EDUARD' ],
                ['ОВЧИННИКОВ/OVCHINNIKOV', 'ВИТАЛИЙ ЕГОРОВИЧ','VITALIJ','OVCHINNIKOV VALERIJ' ],
                ['БРАГИН/BRAGIN ','НИКОЛАЙ ИГНАТЬЕВИЧ' ,'NIKOLAI', 'DRAGIN ZINOVIJ'],
                ['ИВАНКОВ/IVANKOV','ЕВГЕНИЙ ВИКТОРОВИЧ', 'EVGENIJ','IVANKOV LAZAR'],
                ['ДЕНИСОВ/DENISOV','ОСТАП ИГОРЕВИЧ', 'OSTAP ','DENISOV OSKAR'],
                ['ТЕТЕРИН/TETERIN','МУРАТ ДАНИИЛОВИЧ', 'MURAT', 'TETERIN TIMUR'],
                ['КОЛЕСНИКОВ/KOLESNIKOV','ЛЮДВИГ ГЕОРГЬЕВИЧ','LUDVIG','KOLESNIKOV LEONID'  ],
                ['ДЕНИСОВ/DENISOV', 'ИВАН СЕРАПИОНОВИЧ' ,'IVAN ', 'DENISOV LEONID'],
                ['АНТОНОВ/ANTONOV','ЖИГЕР ИВАНОВИЧ','ZHIGER','ANTONOV DENIS']

                ['НЕПОДА/NEPODA', 'ЕФРЕМ АНДРЕЕВИЧ','EFREM','NEGODA ELISEI'],
                        ['ФЕДОРЕНКОВ/FEDORENKOV', 'ЕФРЕМ ВАСИЛЬЕВИЧ','EFREM','FEDORENKO SERGEI' ],
                        ['ТЕРЕНТЬЕВ/TERENTEV', 'ЭДУАРД ВАЛЕРИЕВИЧ','EDUARD', 'TERENTEV SERGEI'],
                        ['БЕЛЯЕВ/BELIAEV', 'ФЕЛИКС БРОНИСЛАВОВИЧ','FELIKS', 'BELIAEV SERGEI'],
                        ['ВАЛЬХОВСКИЙ/VALKHOVSKII', 'ЖДАН ФЁДОРОВИЧ','ZHDAN','VALKOVSKII ZHDAN '],
                        ['САФРОНОВ/SAFRONOV', 'ЖЕРАР ВАСИЛЬЕВИЧ','ZHERAR', 'SAFONOV ZHERAR'],
                        ['БОБРОВИЧ/BOBROVICH', 'ДЕНИС АНДРЕЕВИЧ','DENIS', 'BOBROV DENIS'],
                        ['НИКИФОРОВ/NIKIFOROV', 'ФИЛИПП БОРИСОВИЧ','FILIPP', 'DENISOV FILIPP '],
                        ['СЕЛЕЗНЁВ/SELEZNEV', 'МАКСИМ ДАНИЛОВИЧ','MAKSIM', 'BELIAEV MAKSIM '],
                        ['ВЛАСОВ/VLASOV', 'СЕРГЕЙ ДАНИЛОВИЧ', 'SERGEI', 'VLASOV CHARLZ'],
                        ['ТИХОН/TIKHON', 'ЙОХАНЕС ДМИТРИЕВИЧ','IOKHANES','TIKHONOV IOKHANES' ],
                        ['КУДРЯВЦЕВ/KUDRIAVTSEV', 'ЛЮДОВИК ГРИГОРЬЕВИЧ','LIUDOVIK','KOLESNIKOV LIUDOVIK '],
                        ['ЖУРАВЛЁВ/ZHURAVLEV', 'ЮЛИАН АЛЕКСАНДРОВИЧ','IULIAN', 'ZHURAVLEV IURII '],
                        ['ШУБИН/SHUBIN', 'ЙОНАС ЯРОСЛАВОВИЧ','IONAS', 'SHUBIN IURII '],
                        ['ШУБИН/SHUBIN', 'ЧАРЛЬЗ ВАДИМОВИЧ','CHARLZ', 'SHUBIN DENIS '],
                        ['ЗЕМИН/ZEMIN', 'ШАРЛЬ ИВАНОВИЧ','SHARL', 'ZIMIN SHARL'],
                        ['ПАЛИЙ/PALII', 'МИХАИЛ МИХАЙЛОВИЧ' ,'MIKHAIL','PALOV MIKHAIL' ],
                        ['ПЕТРАКОВ/PETRAKOV', 'МАРАТ ПЛАТОНОВИЧ','MARAT' ,'PETRENKO MARAT' ],
                        ['ИПАТЬЕВ/IPATEV', 'ЭРИК ВАЛЕРИЕВИЧ','ERIK', 'IGNATEV ERIK '],

                        ['ПОТАПОВ/POTAPOV', 'КАМИЛЬ ВЛАДИМИРОВИЧ','KAMIL','POTANIN SHAMIL'],
                                ['ВЕСЕЛОВ/VESELOV', 'МАКСИМ БОРИСОВИЧ ','MAKSIM','VESELOV DANIIL' ],
                                ['КУЛИБОВ/KULIBOV', 'ФЕЛИКС ВАЛЕРИЕВИЧ ','FELIKS','KULIBABA FELIKS'],
                                ['ЖДАНОВ/ZHDANOV', 'АРАМ ГРИГОРЬЕВИЧ ','ARAM','ZHDANOV ABRAM' ],
                                ['ПЕТУХОВ/PETUKHOV', 'ГЕРАСИМ АЛЕКСАНДРОВИЧ','GERASIM','PETUKHOV MIKHAIL' ],
                                [' ЛЕГОДИН/LEGODIN', 'СЕРГЕЙ АРТЁМОВИЧ','SERGEI','LEGOIDA ZAUR' ],
                                [' РОДИОНОВ/RODIONOV', 'ЕРЕМЕЙ ВЛАДИМИРОВИЧ ','EREMEI','RODIONOV SERGEI '],
                                ['БАРАНОВ/BARANOV', 'МАРАТ ЮХИМОВИЧ','MARAT','BARANOVSKII IOZEF '],
                                ['СПИВАКОВ/SPIVAKOV', 'МИХАИЛ ВИТАЛИЕВИЧ','MIKHAIL' ,'SPIVAK KHARITON' ],
                                [' БАРАНСКИЙ/BARANSKII', 'ЭРИК БОГДАНОВИЧ ','ERIK','BARANOVSKII USTIN' ],
                                ['СУСАРЕНКОВ/SUSARENKOV', 'ВАЛЕРИЙ СТАНИСЛАВОВИЧ ','VALERII','SUSARENKO TSEFAS' ],
                                [' НИКИФОРОВ/NIKIFOROV', 'KАМИЛЬ СЕРГЕЕВИЧ','KAMIL','NIKIFOROV SHAMIL' ],
                                ['РОПОВ/ROPOV', 'ЦЕФАС МАКСИМОВИЧ','TSEFAS','ROGOV TSEFAS' ],
                                [' СИРКОВ/SIRKOV', 'РАФАИЛ РОМАНОВИЧ','RAFAIL ','SIRKO RAFAIL' ],
                                [' РОГОВ/ROGOV', 'ПАВЕЛ ЯРОСЛАВОВИЧ','PAVEL','ROGOV KIR' ],
                                [' КАСЬКИВ/KASKIV', 'ОСТАП ЯРОСЛАВОВИЧ','OSTAP','KASKIV PAVEL '],
                                ['ЕВСЕЕВ/EVSEEV', 'ИММАНУИЛ МАКСИМОВИЧ','IMMANUIL','PETUKHOV IMMANUIL'],
                                ['НОСОВ/NOSOV', 'ДОНАТ АЛЕКСЕЕВИЧ','DONAT','ZYKOV DONAT' ],
                                ['ЛЕГОДИН/LEGODIN', 'КАРЕН ДАНИЛОВИЧ','KAREN','LEGOIDA KAREN'],
                                ['ГОРОДЕЦКИЙ/GORODETSKII', 'ЕВСЕЙ АНДРЕЕВИЧ ','EVSEI','MASLOVSKII VALERII' ],
                                ['МАСЛОВСКИЙ/MASLOVSKII', 'ВАЛЕРИЙ ФЁДОРОВИЧ ','VALERII' ,'GORODETSKII EVSEI '],
                                ['АРТЕМЬЕВ/ARTEMEV', 'ГЛЕБ МАКСИМОВИЧ','GLEB','ARTEMEV EVDOKIM' ],
                                [' КАЛАШНИКОВ/KALASHNIKOV', 'ПАВЕЛ ВАЛЕРИЕВИЧ ','PAVEL','KALASHNIK DANIIL' ],
                                ['ПОГОМИЙ/POGOMII', 'АНТОН ПЕТРОВИЧ','ANTON','POTAPOV ANTONIN' ],
                                ['ПОГОМИЙ/POGOMII', 'ФЕЛИКС ВАЛЕРИЕВИЧ','FELIKS' ,'PONOVII GLEB '],
                                ['ФОМИН/FOMIN', 'ГЛЕБ СЕРГЕЕВИЧ','GLEB ','FOMICHEV GLEB '],
                                [' КУЛИКОВ/KULIKOV', 'КЛИМ СЕРГЕЕВИЧ','KLIM','KULIK KIR' ],
                                ['МЕДВЕДЕВ/MEDVEDEV', 'БРОНИСЛАВ ЭДУАРДОВИЧ','BRONISLAV','MEDVEDEV DMITRII'],
                                ['ЗЫКОВ/ZYKOV', 'ЮЛИЙ ИВАНОВИЧ','IULII','ZHUKOV ILIA' ],
								
	

['ВОДОЛЕЕВ/VODOLEEV','ВАСИЛИЙ АВГУСТОВИЧ','VASILII','VOLEEV VASILII'],
['РЯБЦЕВ/RIABTSEV','КОНСТАНТИН ИОСИФОВИЧ','KONSTANTIN','RIABTSEV  STANISLAV'],
['СИЗЫЙ/SIZYI','НИКИФОР ДЕНИСОВИЧ','NIKIFOR','SIZOV NIKIFOR'],
['ШЕРЕМЕТЬЕВ/SHEREMETEV','НАИЛЬ ПЛАТОНОВИЧ','NAIL','SHEREMETEV IGOR'],
['ПОНОМАРЁВ/PONOMAREV','ЕФРЕМ НИКОЛАЕВИЧ','EFREM','PONOMARENKO EFREM'],
['ЯБЛОНСКИЙ/IABLONSKII','МАРТИН ГЕРАСИМОВИЧ','MARTIN','IABLONSKII RAMIZ'],
['РУГОВ/RUGOV','ИГОРЬ АНАТОЛЬЕВИЧ','IGOR','ROGOV IGOR'],
['РУНОВ/RUNOV','ИЛЬЯС АНАТОЛЬЕВИЧ','ILIAS','ROGOV ILIAS'],
['ТЁМКИН/TEMKIN','СТАНИСЛАВ БОРИСОВИЧ','STANISLAV','TETERIN STANISLAV'],
['ЦАРИЦЫН/TSARITSYN','РАМИЗ МАРКОВИЧ','RAMIZ','TSARITSYN NATAN'],
['ОСИН/OSIN','ЭРАСТ БОГУСЛАВОВИЧ','EHRAST','OSTIN EHRAST'],
['ХЛЕБОВ/KHLEBOV','АДИС ЯРОСЛАВОВИЧ','ADIS','KHLEBOV PETR'],
['СОКОЛОВ/SOKOLOV','НАТАН ПЛАТОНОВИЧ','NATAN','SOKOL NATAN'],
['ЕЛЬЦОВ/ELTSOV','ФЕДОР МИТРОФАНОВИЧ','FEDOR','ELTSOV ROMAN'],
['СТАРИКОВ/STARIKOV','РОМАН НАУМОВИЧ','ROMAN','SUKHANOV ROMAN'],
['СУХАНОВ/SUKHANOV','ГЕВОР САВЕЛЬЕВИЧ','GEVOR','ZUGANOV GEVORG'],
['ЧИРКАШ/CHIRKASH','ТАИС КОНДРАТЬЕВИЧ','TAIS','CHIRKASH NAIL'],
['ЕРШОВ/ERSHOV','БРУНО НАУМОВИЧ','BRUNO','BRUNOV MARAT'],
['РУЧКИН/RUCHKIN','МАРАТ МАКСОВИЧ','MARAT','RUCHKIN IGOR'],
['ЗЫРЯНОВ/ZYRIANOV','МОИСЕЙ АЛЕКСЕЕВИЧ','MOISEI','ZYRIAN MOISEI'],
['МЯУКИН/MIAUKIN','ЭМИН ЯРОСЛАВОВИЧ','EHMIN','MIAUKIN EMIL'],
['ЛЮБОВ/LIUBOV','ЮЛИЙ ВЛАДИМИРОВИЧ','IULII','LIUBOV IURII'],
['КОЛЛЕРОВ/KOLLEROV','АЗАРИЙ ОЛЕГОВИЧ','AZARII','KOLLEROV ARSLAN'],
['ЮГАНЦЕВ/IUGANTSEV','ХРИСТИАН ГЕРМАНОВИЧ','KHRISTIAN','IUGANTSEV AVRAAM'],
['ПРОХОРОВ/PROKHOROV','ПЕТР ВЛАДИМИРОВИЧ','PETR','PROKHOR PETR'],
['КОРНЕНЕВ/KORNENEV','ВАЛЕНТИН АКИМОВИЧ','VALENTIN','KORENEV VALENTIN'],
['АБРАМОВ/ABRAMOV','АРСЛАН АНДРЕЕВИЧ','ARSLAN','ABRAMIN ARSLAN'],
['МИЛЮКОВ/MILIUKOV','ГЕОРГИЙ СЕРГЕЕВИЧ','GEORGII','MELIUKIN GEORGII'],
['ШАЛЯПИН/SHALIAPIN','ЕРМОЛАЙ РОБЕРТОВИЧ','ERMOLAI','SHALIAPIN  FEDOR'],
['ДУРОВ/DUROV','ЖАН АНДРЕЕВИЧ','ZHAN','DUROV SERGEY'],
['МУХОМОРОВ/MUKHOMOROV','АВРААМ МАТВЕЕВИЧ','AVRAAM','MOROSHKIN AVRAAM'],
['МОРОШКИН/MOROSHKIN','ФИЛИПП АЛЕКСЕЕВИЧ','FILIPP','MOROSHKIN AVRAAM'],
['СЕВЕРИНОВ/SEVERINOV','ВАЛЕРИЙ ВАЛЕНТИНОВИЧ','VALERII','SEVERIN VALERII'],
['КИЛЕССО/KILESSO','ФЕДОР ГРИГОРЬЕВИЧ','FEDOR','KILESISO MARTIN'],
['ТРУСОВ/TRUSOV','ФЛОРЕНТИЙ КОНДРАТЬЕВИЧ','FLORENTII','TRUSOV GLEB'],
['БИРЮКОВ/BIRIUKOV','ДОБРЫНЯ ГЕРАСИМОВИЧ','DOBRYNIA','BIRIUKOV GLEB'],
['СНАТКИН/SNATKIN','АЙРАТ АРТЕМОВИЧ','AIRAT','SHMATKO AIRAT'],
['БЕЛОГЛАЗОВ/BELOGLAZOV','ЕРЕМЕЙ МИТРОФАНОВИЧ','EREMEI','SEROGLAZOV EREMEI'],
['ТРУТНЕВ/TRUTNEV','ТЕРЕНТИЙ РУСЛАНОВИЧ','TERENTII','LUKOV TERENTII'],
['РАСПОПОВ/RASPOPOV','МАРТИН САВЕЛЬЕВИЧ','MARTIN','POPOV MARTIN'],
['ЛУКОВ/LUKOV','ОНИСИМ АДАМОВИЧ','ONISIM','LUKICH ONISIM'],
['ПОЛИЧЕВ/POLICHEV','АНДРЕЙ ФЕЛИКСОВИЧ','ANDREI','POLICHKO ANDREI'],
['БАРАНОВ/BARANOV','АГГЕЙ ТАРАСОВИЧ','AGGEI','BARANOV ANDREI'],
['БОРЦОВ/BORTSOV','АГАП ГЕННАДЬЕВИЧ','AGAP','BORTSOV ANDREI'],
['ЁЛКОВ/ELKOV','ВАЦЛАВ АФАНАСЬЕВИЧ','VATSLAV','ELKIN VATSLAV'],
['ШУРШАЛИН/SHURSHALIN','ВЛАДЛЕН ВАСИЛЬЕВИЧ','VLADLEN','SHURSHALIN  ILIA'],
['ЭТУШ/EHTUSH','ГАЯС ПРОХОРОВИЧ','GAIAS','EHTUSH GLEB'],
['КАРАНДАШОВ/KARANDASHOV','САМСОН ИВАНОВИЧ','SAMSON','KARONASHOV SAMSON'],
['ШАТАЛОВ/SHATALOV','ЛАЗАРЬ ЮЛЬЕВИЧ','LAZAR','SHATALOVICH LAZAR'],
['СВАЛОВ/SVALOV','ГЛЕБ КИРИЛЛОВИЧ','GLEB','SALOV GLEB'],
['АБРАМОВ/ABRAMOV','ИЛЬЯ ВЛАДИМИРОВИЧ','ILIA','ABRAMOV ANTON'],
['АНАНЬЕВ/ANANEV','АНТОН АРТЁМОВИЧ','ANTON','ANNIEV ANTON'],
['АНДРИАНОВ/ANDRIANOV','НИКОЛАЙ АРТЁМОВИЧ','NIKOLAI','ARIANOV NIKOLAI'],
['АНТОНОВ/ANTONOV','ДАНИИЛ АЛЕКСАНДРОВИЧ','DANIIL','ANTONOV GLEB'],
['АНТОНОВ/ANTONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','ANTONOV GLEB'],
['БОЛДЫРЕВ/BOLDYREV','МИХАИЛ ВЛАДИМИРОВИЧ','MIKHAIL','BOLDYREV  IVAN'],
['БОНДАРЕВ/BONDAREV','ВСЕВОЛОД РОМАНОВИЧ','VSEVOLOD','BOLDYREV VSEVOLOD'],
['БОРИСОВ/BORISOV','ЮРИЙ ВИКТОРОВИЧ','IURII','IURIEV BORIS'],
['БОРИСОВ/BORISOV','ИВАН АЛЕКСАНДРОВИЧ','IVAN','IVANOV BORIS'],
['БОЧАРОВ/BOCHAROV','ЗАХАР АНДРЕЕВИЧ','ZAKHAR','BOCHAROV MATVEI'],
['ВИНОГРАДОВ/VINOGRADOV','ИВАН ПАВЛОВИЧ','IVAN','GRABOV IVAN'],
['ВОЛКОВ/VOLKOV','ИВАН ИВАНОВИЧ','IVAN','VOLKOV ALEKSANDR'],
['ДАВЫДОВ/DAVYDOV','ПЛАТОН АЛЕКСАНДРОВИЧ','PLATON','DAVYDOV ARTEM'],
['ДЕНИСОВ/DENISOV','АЛЕКСАНДР МАКСИМОВИЧ','ALEKSANDR','ALEKSEEV DENIS'],
['ДМИТРИЕВ/DMITRIEV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','DMITRIEV SERGEY'],
['ДОРОФЕЕВ/DOROFEEV','АНДРЕЙ ИЛЬИЧ','ANDREI','DOROFEEV SERGEY'],
['ДЬЯКОВ/DIAKOV','АНДРЕЙ РОМАНОВИЧ','ANDREI','DIAKONOV ANDREI'],
['ЕГОРОВ/EGOROV','МИРОН АРТЁМОВИЧ','MIRON','EGORIN MIRON'],
['ЕМЕЛЬЯНОВ/EMELIANOV','АЛЕКСАНДР ДАНИИЛОВИЧ','ALEKSANDR','EMELIANOV ALEKSEI'],
['ЗАЙЦЕВ/ZAITSEV','АРТЁМ ЮРЬЕВИЧ','ARTEM','VOLKOV ARTEM'],
['ЗАХАРОВ/ZAKHAROV','ИВАН КИРИЛЛОВИЧ','IVAN','ZAKHAROV ARSEN'],
['ЗАХАРОВ/ZAKHAROV','ЕВГЕНИЙ АРТЁМОВИЧ','EVGENII','ZAKHAROV FEDOR'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ВЛАДИМИРОВИЧ','IVAN','ZAKHAROV ZAKHAR'],
['ЗАХАРОВ/ZAKHAROV','ИВАН ЕГОРОВИЧ','IVAN','ZAKHAROV MIKHAIL'],
['ЗИМИН/ZIMIN','ФЁДОР СТЕПАНОВИЧ','FEDOR','ZEMIN FEDOR'],
['ЗОЛОТОВ/ZOLOTOV','МИХАИЛ ГЕРМАНОВИЧ','MIKHAIL','MOLOTOV MIKHAIL'],
['ЗОРИН/ZORIN','ИВАН НИКИТИЧ','IVAN','ZORKIN IVAN'],
['ЗУБОВ/ZUBOV','ЕГОР ФИЛИППОВИЧ','EGOR','ZUBOVICH EGOR'],
['ИВАНСКИЙ/IVANSKIY','САВЕЛИЙ АЛЕКСЕЕВИЧ','SAVELII','IVANOV SAVELII'],
['ИВАНОВ/IVANOV','АЛЕКСАНДР САВЕЛЬЕВИЧ','ALEKSANDR','IVANOV EGOR'],
['ИВАНОВ/IVANOV','ТИМУР РОМАНОВИЧ','TIMUR','PILANOV TIMUR'],
['ИГНАТОВ/IGNATOV','МАКАР АЛЕКСАНДРОВИЧ','MAKAR','IPATOV MAKAR'],
['КАЛИНИН/KALININ','АРТЁМ ИЛЬИЧ','ARTEM','KAMININ ARTEM'],
['КАЛМЫКОВ/KALMYKOV','АРТУР ФЁДОРОВИЧ','ARTUR','KALMYKOV ARTEM'],
['КАРАСЕВ/KARASEV','МИРОСЛАВ ГЕОРГИЕВИЧ','MIROSLAV','OKUNEV MIROSLAV'],
['КАРПОВ/KARPOV','МАРК ВЛАДИМИРОВИЧ','MARK','RIBIN MARK'],
['КИРЕЕВ/KIREEV','ВЛАДИМИР ВЛАДИМИРОВИЧ','VLADIMIR','KIR VLADIMIR'],
['КИРИЛЛОВ/KIRILLOV','ЕЛИСЕЙ ТИМОФЕЕВИЧ','ELISEI','ELISEEV KIRILL'],
['КЛИМОВ/KLIMOV','ЛЕВ КОНСТАНТИНОВИЧ','LEV','KIMOV LEONID'],
['КОВАЛЕВ/KOVALEV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','KOVALEV LEONID'],
['КОМАРОВ/KOMAROV','МАКСИМ МИХАЙЛОВИЧ','MAKSIM','KOMAROV LEONID'],
['КОНОВАЛОВ/KONOVALOV','ДМИТРИЙ ИВАНОВИЧ','DMITRII','KONOPLIANKO DMITRII'],
['КОШЕЛЕВ/KOSHELEV','АРТЁМ ЗАХАРОВИЧ','ARTEM','KOSHELEV ARTUR'],
['КУЗНЕЦОВ/KUZNETSOV','ФИЛИПП МИРОНОВИЧ','FILIPP','FILIPOV FILIPP'],
['КУЗНЕЦОВ/KUZNETSOV','ДМИТРИЙ ТИМОФЕЕВИЧ','DMITRII','KUZNETSOV KONSTANTIN'],
['КУЗНЕЦОВ/KUZNETSOV','ГЛЕБ МАРКОВИЧ','GLEB','KUZNETSOV KONSTANTIN'],
['КУЗЬМИН/KUZMIN','ВАЛЕРИЙ СЕРГЕЕВИЧ','VALERII','KUZIN VALERII'],
['КУПРИЯНОВ/KUPRIIANOV','КОНСТАНТИН МАКСИМОВИЧ','KONSTANTIN','KUPIDONOV KONSTANTIN'],
['ЛАЗАРЕВ/LAZAREV','АРТЁМ ГОРДЕЕВИЧ','ARTEM','LAZAREV VADIM'],
['ЛАРИН/LARIN','ВАДИМ ДАНИИЛОВИЧ','VADIM','LARIN KIRILL'],
['ЛАТЫШЕВ/LATYSHEV','КИРИЛЛ НИКОЛАЕВИЧ','KIRILL','LATYSHIN KIRILL'],
['ЛЕБЕДЕВ/LEBEDEV','ТИМУР МАКСИМОВИЧ','TIMUR','LEBEDEV SERGEI'],
['ЛЕВИН/LEVIN','ГЕОРГИЙ МАРКОВИЧ','GEORGII','LEVIN SERGEI'],
['МАЙОРОВ/MAIOROV','СЕРГЕЙ ДЕНИСОВИЧ','SERGEI','MARKELOV SERGEI'],
['МАЛЫШЕВ/MALYSHEV','НИКОЛАЙ ГЛЕБОВИЧ','NIKOLAI','MALYSHKIN NIKOLAI'],
['МАЛЫШЕВ/MALYSHEV','ТИХОН СТЕПАНОВИЧ','TIKHON','MALYSHEV PAVEL'],
['МАРКЕЛОВ/MARKELOV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','MARKELOV DENIS'],
['МАРКИН/MARKIN','ДЕНИС ИЛЬИЧ','DENIS','NARYSHEV DENIS'],
['МАРКОВ/MARKOV','СЕРГЕЙ МИХАЙЛОВИЧ','SERGEI','MARKIN SERGEI'],
['МЕЛЬНИКОВ/MELNIKOV','ДЕНИС БОГДАНОВИЧ','DENIS','MELNIKOV SERGEI'],
['МОРОЗОВ/MOROZOV','КОНСТАНТИН НИКИТИЧ','KONSTANTIN','MOROZ PAVEL'],
['НИКИТИН/NIKITIN','МАТВЕЙ КОНСТАНТИНОВИЧ','MATVEI','NIKITENKO MATVEI'],
['НИКОЛАЕВ/NIKOLAEV','АРТЁМ МАКАРОВИЧ','ARTEM','NIKOLAEV EGOR'],
['НИКОЛАЕВ/NIKOLAEV','ВЯЧЕСЛАВ МАРКОВИЧ','VIACHESLAV','NIKOLAEV EGOR'],
['ОВСЯННИКОВ/OVSIANNIKOV','МАКСИМ НИКИТИЧ','MAKSIM','OVSIANKO MAKSIM'],
['ОРЛОВ/ORLOV','РОМАН МАКСИМОВИЧ','ROMAN','ORLOV EGOR'],
['ОСИПОВ/OSIPOV','ЕГОР ВЯЧЕСЛАВОВИЧ','EGOR','OSIPOV VLADIMIR'],
['ПЕТРОВ/PETROV','ВЛАДИМИР КИРИЛЛОВИЧ','VLADIMIR','VLADIMIROV PETR'],
['ПЕТРОВСКИЙ/PETROVSKII','НИКИТА АЛЕКСЕЕВИЧ','NIKITA','PETROV NIKITA'],
['ПЛАТОНОВ/PLATONOV','ИЛЬЯ МИХАЙЛОВИЧ','ILIA','PLATONOV IVAN'],
['ПОПОВ/POPOV','ИВАН МАКСИМОВИЧ','IVAN','POPOVICH IVAN'],
['ПОПОВ/POPOV','НИКИТА ВЛАДИМИРОВИЧ','NIKITA','ROGOV NIKITA'],
['ПОПОВ/POPOV','ГЛЕБ РОМАНОВИЧ','GLEB','POPOV PAVEL'],
['РОМАНОВ/ROMANOV','ПАВЕЛ НИКИТИЧ','PAVEL','ROMANOV ALEKSEI'],
['САЗОНОВ/SAZONOV','ГРИГОРИЙ АЛЕКСАНДРОВИЧ','GRIGORII','SAZAN GRIGORII'],
['СЕВАСТЬЯНОВ/SEVASTIANOV','ГЛЕБ МАТВЕЕВИЧ','GLEB','SEVASTIANOV LEV'],
['СЕМЕНОВ/SEMENOV','РОБЕРТ ЕВГЕНЬЕВИЧ','ROBERT','SEMENOV ALEKSEI'],
['СМИРНОВ/SMIRNOV','ЛЕВ АРТЁМОВИЧ','LEV','SMIRNOV PETR'],
['СМИРНОВ/SMIRNOV','МИРОН МАРКОВИЧ','MIRON','SMIRNOV LEV'],
['СОКОЛОВ/SOKOLOV','АЛЕКСЕЙ ГЕОРГИЕВИЧ','ALEKSEI','ALEKSEEV IVAN'],
['СОЛОВЬЕВ/SOLOVEV','ИВАН ЛЕОНИДОВИЧ','IVAN','PCHELKIN IVAN'],
['СПИРИДОНОВ/SPIRIDONOV','МИХАИЛ АРТЁМОВИЧ','MIKHAIL','SPIRIDONOV MATVEI'],
['СУСЛОВ/SUSLOV','ФЁДОР РУСЛАНОВИЧ','FEDOR','SUSLOVICH FEDOR'],
['УВАРОВ/UVAROV','МАТВЕЙ ДАНИИЛОВИЧ','MATVEI','LAVROV MATVEI'],
['УЛЬЯНОВ/ULIANOV','МАТВЕЙ ДМИТРИЕВИЧ','MATVEI','ULIANOV VLADIMIR'],
['ФЕДОСЕЕВ/FEDOSEEV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','FEDOSEEV IVAN'],
['ФЕДОТОВ/FEDOTOV','ЛЕВ ИЛЬИЧ','LEV','FEDOROV LEV'],
['ФИЛИППОВ/FILIPPOV','ЕГОР АРТЁМОВИЧ','EGOR','FILIPPOV ILIA'],
['ЦАРЕВ/TSAREV','ПАВЕЛ ВЛАДИМИРОВИЧ','PAVEL','KOROLEV PAVEL'],
['ЧЕРНЫХ/CHERNYKH','ГЕОРГИЙ АЛЕКСАНДРОВИЧ','GEORGII','CHERNOV GEORGII'],
['ЧЕРНЫШЕВ/CHERNYSHEV','МАРК ЕЛИСЕЕВИЧ','MARK','CHERNOV MARK'],
['ЧЕРНЫШЕВ/CHERNYSHEV','АРТЁМ МАРКОВИЧ','ARTEM','CHERNYSHEVSKII ARTEM'],
['ЧИСТЯКОВ/CHISTIAKOV','ГЕРМАН ГЕОРГИЕВИЧ','GERMAN','CHISTIAKOVSKII GERMAN'],
['ЧИСТЯКОВ/CHISTIAKOV','ДМИТРИЙ ГРИГОРЬЕВИЧ','DMITRII','CHISTIAKIN DMITRII'],
['ЧУМАКОВ/CHUMAKOV','МИРОСЛАВ КОНСТАНТИНОВИЧ','MIROSLAV','CHUMAK MIROSLAV'],
['ЧУМАКОВ/CHUMAKOV','АРСЕНИЙ ДАНИИЛОВИЧ','ARSENII','SIMAKOV ARSENII'],
['ШАРОВ/SHAROV','ГЛЕБ КОНСТАНТИНОВИЧ','GLEB','SHAROV EGOR'],
['ШИРЯЕВ/SHIRIAEV','ЕГОР ГЕОРГИЕВИЧ','EGOR','SHIRIAEV EGOR'],
['ШМЕЛЕВ/SHMELEV','АНДРЕЙ КИРИЛЛОВИЧ','ANDREI','SHIMKO ANDREI'],
['ЩУКИН/SHCHUKIN','РОМАН МИХАЙЛОВИЧ','ROMAN','SHCHUKIN ANTON'],
					
];


 
 var quotes_g = [
    ["ИВАНОВА/IVANOVA ","СВЕТЛАНА НИКОЛАЕВНА ","SVETLANA","IVANOVA SVETLANA"],
    ['АКСЁНОВА/AKSENOVA','РАИСА МАКСИМОВНА','RAISA','AKSENOVA RAISA'],
['ТЯГАЙ/TIAGAI','КАПИТОЛИНА АНАТОЛИЕВНА','KAPITOLINA','TIAGAI KAPITOLINA'],
['КРЫЛОВА/KRYLOVA','НЕЛЛИ РОМАНОВНА','NELLI','KRYLOVA NELLI'],
['БАЧЕЙ/BACHEI','СОФИЯ МАКСИМОВНА','SOFIIA','BACHEI SOFIIA'],
['САФОНОВА/SAFONOVA','ИЗОЛЬДА АНДРЕЕВНА','IZOLDA','SAFONOVA IZOLDA'],
['ЖЕЛИБА/ZHELIBA','ЯНИНА АРТЁМОВНА','IANINA','ZHELIBA IANINA'],
['ЗАЙЦЕВА/ZAITSEVA','ГРЕТА БРОНИСЛАВОВНА','GRETA','ZAITSEVA GRETA'],
['ХИЖНЯК/KHIZHNIAK','ФЕДОСЬЯ ЛЬВОВНА','FEDOSIA','KHIZHNIAK FEDOSIA'],
['КОЛОМОЕЦ/KOLOMOETS','ДИНА ГРИГОРЬЕВНА','DINA','KOLOMOETS DINA'],
['ЛАРИОНОВА/LARIONOVA','ИРИНА ЯРОСЛАВОВНА','IRINA','LARIONOVA IRINA'],
['ПРИТУЛА/PRITULA','ЭЛЬВИРА ВИТАЛИЕВНА','ELVIRA','PRITULA ELVIRA'],
['ПОНОМАРЕНКО/PONOMARENKO','РЕНАТА ЯРОСЛАВОВНА','RENATA','PONOMARENKO RENATA'],
['ВОРОНЦОВА/VORONTSOVA','ЦАРА ФЁДОРОВНА','TSARA','VORONTSOVA TSARA'],
['ШИРЯЕВА/SHIRIAEVA','ХИЛЬДА ГРИГОРЬЕВНА','KHILDA','SHIRIAEVA KHILDA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ЮНОНА ЛЬВОВНА','IUNONA','ZHURAVLEVA IUNONA'],
['ТЕРЕНТЬЕВА/TERENTEVA','ЮНА ВАДИМОВНА','IUNA','TERENTEVA IUNA'],
['ПЕРЕДРИЙ/PEREDRII','ИРИНА ИВАНОВНА','IRINA','PEREDRII IRINA'],
['СМИРНОВА/SMIRNOVA','ФАИНА АНДРЕЕВНА','FAINA','SMIRNOVA FAINA'],
['БОРОДАЙ/BORODAI','ИЗОЛЬДА ВАЛЕРИЕВНА','IZOLDA','BORODAI IZOLDA'],
['МАСЛОВСКА/MASLOVSKA','МАРИЯ ДМИТРИЕВНА','MARIIA','MASLOVSKA MARIIA'],
['ГОРДЕЕВА/GORDEEVA','ОЛЬГА МИХАЙЛОВНА','OLGA','GORDEEVA OLGA'],
['ЛУКИНА/LUKINA','ЯНИНА ДМИТРИЕВНА','IANINA','LUKINA IANINA'],
['ВАЛЬКОВСКА/VALKOVSKA','БЕРТА ПЛАТОНОВНА','BERTA','VALKOVSKA BERTA'],
['ГОЛУБЕВА/GOLUBEVA','ЙОЛАНТА ЮХИМОВНА','IOLANTA','GOLUBEVA IOLANTA'],
['ТЯГАЙ/TIAGAI','ЙАНА ИВАНОВНА','IANA','TIAGAI IANA'],
['АНИСИМОВА/ANISIMOVA','РЕГИНА АРТЁМОВНА','REGINA','ANISIMOVA REGINA'],
['ШЕВЧЕНКО/SHEVCHENKO','ЭЛЛАДА БОРИСОВНА','ELLADA','SHEVCHENKO ELLADA'],
['ШАРАПОВА/SHARAPOVA','ЯСЯ ЮХИМОВНА','IASIA','SHARAPOVA IASIA'],
['СКЛЯРЕНКО/SKLIARENKO','ГЮЗЕЛЬ ВИТАЛИЕВНА','GIUZEL','SKLIARENKO GIUZEL'],
['СЕЛЕЗНЁВА/SELEZNEVA','ЭСМЕРАЛЬДА ЛЬВОВНА','ESMERALDA','SELEZNEVA ESMERALDA'],
['ШУМИЛО/SHUMILO','СОФЬЯ ЛЕОНИДОВНА','SOFIA','SHUMILO SOFIA'],
['КУЗНЕЦОВА/KUZNETSOVA','РОЗАЛИНА ФЁДОРОВНА','ROZALINA','KUZNETSOVA ROZALINA'],
['ГАМУЛА/GAMULA','ФЛОРЕНТИНА ВАСИЛЬЕВНА','FLORENTINA','GAMULA FLORENTINA'],
['ВОРОНЦОВА/VORONTSOVA','ТАТЬЯНА ДАНИЛОВНА','TATIANA','VORONTSOVA TATIANA'],
['БОРИСОВА/BORISOVA','НИНА МИХАЙЛОВНА','NINA','BORISOVA NINA'],
['СУХАНОВА/SUKHANOVA','ЮНОНА ГРИГОРЬЕВНА','IUNONA','SUKHANOVA IUNONA'],
['ЯЛОВА/IALOVA','ЕВГЕНИЯ БОРИСОВНА','EVGENIIA','IALOVA EVGENIIA'],
['ЧУМАК/CHUMAK','ОЛЕСЯ СТАНИСЛАВОВНА','OLESIA','CHUMAK OLESIA'],
['ФОМИНА/FOMINA','ЭДИТА ПЕТРОВНА','EDITA','FOMINA EDITA'],
['ТЯГАЙ/TIAGAI','ФЕДОСЬЯ ВИТАЛИЕВНА','FEDOSIA','TIAGAI FEDOSIA'],
['ОСТРОЖСКА/OSTROZHSKA','ЭЛЬМИРА МИХАЙЛОВНА','ELMIRA','OSTROZHSKA ELMIRA'],
['ДЕНИСОВА/DENISOVA','АЛЬБИНА ВАСИЛЬЕВНА','ALBINA','DENISOVA ALBINA'],
['ПОЛЯКОВА/POLIAKOVA','РЕГИНА МИХАЙЛОВНА','REGINA','POLIAKOVA REGINA'],
['БАЧЕЙ/BACHEI','ЖАКЛИН ДАНИЛОВНА','ZHAKLIN','BACHEI ZHAKLIN'],
['МИРНА/MIRNA','ШУШАНА ВИКТОРОВНА','SHUSHANA','MIRNA SHUSHANA'],
['МЕДВЕДЕВА/MEDVEDEVA','СОФИЯ ГРИГОРЬЕВНА','SOFIIA','MEDVEDEVA SOFIIA'],
['МУРАВЬЁВА/MURAVEVA','ЗЛАТА ГРИГОРЬЕВНА','ZLATA','MURAVEVA ZLATA'],
['МОИСЕЕВА/MOISEEVA','ПОЛИНА РОМАНОВНА','POLINA','MOISEEVA POLINA'],
['РЫБАКОВА/RYBAKOVA','АЛЁНА ЮХИМОВНА','ALENA','RYBAKOVA ALENA'],
['ОВЧАРЕНКО/OVCHARENKO','ЙОЛИКА ЛЕОНИДОВНА','IOLIKA','OVCHARENKO IOLIKA'],
['БИРЮКОВА/BIRIUKOVA','РАДА РОМАНОВНА','RADA','BIRIUKOVA RADA'],
['ШУМИЛО/SHUMILO','ЮНА АЛЕКСЕЕВНА','IUNA','SHUMILO IUNA'],
['МАСЛОВА/MASLOVA','ИНЕССА АЛЕКСЕЕВНА','INESSA','MASLOVA INESSA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ПОЛИНА ВИТАЛИЕВНА','POLINA','ZHURAVLEVA POLINA'],
['КОМАРОВА/KOMAROVA','ЕВА ИВАНОВНА','EVA','KOMAROVA EVA'],
['СПИВАК/SPIVAK','ЭЛИНА ВАЛЕРИЕВНА','ELINA','SPIVAK ELINA'],
['ВАЛЬКОВСКА/VALKOVSKA','ЕЛЕНА АРТЁМОВНА','ELENA','VALKOVSKA ELENA'],
['МИЛОСЛАВСКА/MILOSLAVSKA','УЛЬЯНА ПЕТРОВНА','ULIANA','MILOSLAVSKA ULIANA'],
['ИСАКОВА/ISAKOVA','ЗИНАИДА ЕВГЕНЬЕВНА','ZINAIDA','ISAKOVA ZINAIDA'],
['ЩЕРБАКОВА/SHCHERBAKOVA','ЖАКЛИН ВАЛЕРИЕВНА','ZHAKLIN','SHCHERBAKOVA ZHAKLIN'],
['БОРИСОВА/BORISOVA','ЕЛЕНА АЛЕКСЕЕВНА','ELENA','BORISOVA ELENA'],
['ТИТОВА/TITOVA','КЛАВДИЯ ПЕТРОВНА','KLAVDIIA','TITOVA KLAVDIIA'],
['ПОЛЯКОВА/POLIAKOVA','СОФИЯ БРОНИСЛАВОВНА','SOFIIA','POLIAKOVA SOFIIA'],
['АБРАМОВА/ABRAMOVA','НОННА ВАДИМОВНА','NONNA','ABRAMOVA NONNA'],
['ПЕТРОВА/PETROVA','ИРИНА ЛЕОНИДОВНА','IRINA','PETROVA IRINA'],
['КИРИЛЛОВА/KIRILLOVA','ЛИДИЯ АЛЕКСЕЕВНА','LIDIIA','KIRILLOVA LIDIIA'],
['ЗЫКОВА/ZYKOVA','УСТИНЬЯ МАКСИМОВНА','USTINIA','ZYKOVA USTINIA'],
['БОЛЬШАКОВА/BOLSHAKOVA','НИКА СЕРГЕЕВНА','NIKA','BOLSHAKOVA NIKA'],
['АФАНАСЬЕВА/AFANASEVA','ЦЕЗАРИЯ ЕВГЕНЬЕВНА','TSEZARIIA','AFANASEVA TSEZARIIA'],
['ГОРБАЧЁВА/GORBACHEVA','ГРАЖИНА ПЕТРОВНА','GRAZHINA','GORBACHEVA GRAZHINA'],
['ПЕРЕДРИЙ/PEREDRII','МАРТА ВАСИЛЬЕВНА','MARTA','PEREDRII MARTA'],
['МУРАВЬЁВА/MURAVEVA','НИНА БОГДАНОВНА','NINA','MURAVEVA NINA'],
['КОТОВСКА/KOTOVSKA','ХАРИТИНА ИВАНОВНА','KHARITINA','KOTOVSKA KHARITINA'],
['ФИЛИППОВА/FILIPPOVA','ИНГА ВЛАДИМИРОВНА','INGA','FILIPPOVA INGA'],
['НИКОНОВА/NIKONOVA','ЦЕЗАРИЯ ВАДИМОВНА','TSEZARIIA','NIKONOVA TSEZARIIA'],
['МЕЛЬНИКОВА/MELNIKOVA','УСТИНЬЯ ЭДУАРДОВНА','USTINIA','MELNIKOVA USTINIA'],
['КОТОВСКА/KOTOVSKA','УЛЬЯНА БРОНИСЛАВОВНА','ULIANA','KOTOVSKA ULIANA'],
['ЦВЕТКОВА/TSVETKOVA','ЭЛЬМИРА ЯРОСЛАВОВНА','ELMIRA','TSVETKOVA ELMIRA'],
['ГАМУЛА/GAMULA','ВИКТОРИЯ ВЛАДИМИРОВНА','VIKTORIIA','GAMULA VIKTORIIA'],
['АФАНАСЬЕВА/AFANASEVA','ЧЕЧИЛИЯ БРОНИСЛАВОВНА','CHECHILIIA','AFANASEVA CHECHILIIA'],
['ГЕЛЕТЕЙ/GELETEI','ЙООНИ ДМИТРИЕВНА','IOONI','GELETEI IOONI'],
['ПОНОМАРЕНКО/PONOMARENKO','ЕВГЕНИЯ ВАСИЛЬЕВНА','EVGENIIA','PONOMARENKO EVGENIIA'],
['СИМОНЕНКО/SIMONENKO','ЗИНАИДА ПЛАТОНОВНА','ZINAIDA','SIMONENKO ZINAIDA'],
['ВЛАДИМИРОВА/VLADIMIROVA','ВАСИЛИСА АЛЕКСЕЕВНА','VASILISA','VLADIMIROVA VASILISA'],
['ЗАХАРОВА/ZAKHAROVA','МАРИЯ БОРИСОВНА','MARIIA','ZAKHAROVA MARIIA'],
['БОЛЬШАКОВА/BOLSHAKOVA','ОЛЕСЯ МИХАЙЛОВНА','OLESIA','BOLSHAKOVA OLESIA'],
['КАБАНОВА/KABANOVA','ИНЕССА РОМАНОВНА','INESSA','KABANOVA INESSA'],
['КОВАЛЬЧУК/KOVALCHUK','ВАЛЕНТИНА ВЛАДИМИРОВНА','VALENTINA','KOVALCHUK VALENTINA'],
['МИРНА/MIRNA','ЦАРА ЕВГЕНЬЕВНА','TSARA','MIRNA TSARA'],
['ЧУМАК/CHUMAK','АЛЕКСАНДРА АЛЕКСАНДРОВНА','ALEKSANDRA','CHUMAK ALEKSANDRA'],
['КОПЫЛОВА/KOPYLOVA','УСТИНЬЯ ФЁДОРОВНА','USTINIA','KOPYLOVA USTINIA'],
['СЕРГЕЕВА/SERGEEVA','СОФЬЯ БРОНИСЛАВОВНА','SOFIA','SERGEEVA SOFIA'],
['КАРПОВА/KARPOVA','МАРИЯ МАКСИМОВНА','MARIIA','KARPOVA MARIIA'],
['ПОНОМАРЁВА/PONOMAREVA','ЧЕСЛАВА ВАДИМОВНА','CHESLAVA','PONOMAREVA CHESLAVA'],
['КИРИЛЕНКО/KIRILENKO','БЕАТРИСА АЛЕКСЕЕВНА','BEATRISA','KIRILENKO BEATRISA'],
['НЕКРАСОВА/NEKRASOVA','ЯНИНА БОРИСОВНА','IANINA','NEKRASOVA IANINA'],
['ШИЛОВА/SHILOVA','ЙОСИФА БРОНИСЛАВОВНА','IOSIFA','SHILOVA IOSIFA'],
['ЛАПИНА/LAPINA','ЯНИНА МИХАЙЛОВНА','IANINA','LAPINA IANINA'],
['ТАРАСОВА/TARASOVA','ШУШАНА АЛЕКСАНДРОВНА','SHUSHANA','TARASOVA SHUSHANA'],

	];
	
	var quotes_g2 = [
   ["ИВАНОВА/IVANOVA ","СВЕТЛАНА НИКОЛАЕВНА ","SVETLANA","IVANKOVA SVETLANA"],
    ['АКСЁНОВА/AKSENOVA','РАИСА МАКСИМОВНА','RAISA','AKSENOVA IRINA'],
['ТЯГАЙ/TIAGAI','КАПИТОЛИНА АНАТОЛИЕВНА','KAPITOLINA','TIAGAEVA KAPITOLINA'],
['КРЫЛОВА/KRYLOVA','НЕЛЛИ РОМАНОВНА','NELLI','KRYLOVA SOFIIA'],
['БАЧЕЙ/BACHEI','СОФИЯ МАКСИМОВНА','SOFIIA','BACHEI SVETLANA'],
['САФОНОВА/SAFONOVA','ИЗОЛЬДА АНДРЕЕВНА','IZOLDA','SAFONOVA IRINA'],
['ЖЕЛИБАVA/ZHELIBAVA','ЯНИНА АРТЁМОВНА','IANINA','ZHELIBA IANINA'],
['ЗАЙЦЕВА/ZAITSEVA','ГРЕТА БРОНИСЛАВОВНА','GRETA','ZAITSEVA IRINA'],
['ХИЖНЯК/KHIZHNIAK','ФЕДОСЬЯ ЛЬВОВНА','FEDOSIA','KHIZHNIAK DOSIA'],
['КОЛОМОЕЦ/KOLOMOETS','ДИНА ГРИГОРЬЕВНА','DINA','KOLOMOETS INNA'],
['ЛАРИОНОВА/LARIONOVA','ИРИНА ЯРОСЛАВОВНА','IRINA','LARINA IRINA'],
['ПРИТУЛА/PRITULA','ЭЛЬВИРА ВИТАЛИЕВНА','ELVIRA','PRITULA FAINA'],
['ПОНОМАРЕНКО/PONOMARENKO','РЕНАТА ЯРОСЛАВОВНА','RENATA','MARENKO RENATA'],
['ВОРОНЦОВА/VORONTSOVA','ЦАРА ФЁДОРОВНА','TSARA','NOSOVA TSARA'],
['ШИРЯЕВА/SHIRIAEVA','ХИЛЬДА ГРИГОРЬЕВНА','KHILDA','KIRIAEVA KHILDA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ЮНОНА ЛЬВОВНА','IUNONA','VORONOVA IUNONA'],
['ТЕРЕНТЬЕВА/TERENTEVA','ЮНА ВАДИМОВНА','IUNA','TERENTEVA IULIA'],
['ПЕРЕДРИЙ/PEREDRII','ИРИНА ИВАНОВНА','IRINA','PEREDRII MARIIA'],
['СМИРНОВА/SMIRNOVA','ФАИНА АНДРЕЕВНА','FAINA','SMIRNOVKO FAINA'],
['БОРОДАЙ/BORODAI','ИЗОЛЬДА ВАЛЕРИЕВНА','IZOLDA','BORODACH IZOLDA'],
['МАСЛОВСКА/MASLOVSKA','МАРИЯ ДМИТРИЕВНА','MARIIA','MASLOVSKA MILA'],
['ГОРДЕЕВА/GORDEEVA','ОЛЬГА МИХАЙЛОВНА','OLGA','GORDEENKO OLGA'],
['ЛУКИНА/LUKINA','ЯНИНА ДМИТРИЕВНА','IANINA','LUKINA IANA'],
['ВАЛЬКОВСКА/VALKOVSKA','БЕРТА ПЛАТОНОВНА','BERTA','VALGOVSKAIA BERTA'],
['ГОЛУБЕВА/GOLUBEVA','ЙОЛАНТА ЮХИМОВНА','IOLANTA','GOLUBEVA IRINA'],
['ТЯГАЙ/TIAGAI','ЯНА ИВАНОВНА','IANA','TIAGAI IASIA'],
['АНИСИМОВА/ANISIMOVA','РЕГИНА АРТЁМОВНА','REGINA','ANISHINA REGINA'],
['ШЕВЧЕНКО/SHEVCHENKO','ЭЛЛАДА БОРИСОВНА','ELLADA','SHEVCHENKO ELLA'],
['ШАРАПОВА/SHARAPOVA','ЯСЯ ЮХИМОВНА','IASIA','SHARAPOVICH IASIA'],
['СКЛЯРЕНКО/SKLIARENKO','ГЮЗЕЛЬ ВИТАЛИЕВНА','GIUZEL','SKLIARENKOVA GIUZEL'],
['СЕЛЕЗНЁВА/SELEZNEVA','ЭСМЕРАЛЬДА ЛЬВОВНА','ESMERALDA','SELEZNEVA FLORENTINA'],
['ШУМИЛО/SHUMILO','СОФЬЯ ЛЕОНИДОВНА','SOFIA','SHUMILO NINA'],
['КУЗНЕЦОВА/KUZNETSOVA','РОЗАЛИНА ФЁДОРОВНА','ROZALINA','KUZNETSOVA EVGENIIA'],
['ГАМУЛА/GAMULA','ФЛОРЕНТИНА ВАСИЛЬЕВНА','FLORENTINA','GAMULA EVGENIIA'],
['ВОРОНЦОВА/VORONTSOVA','ТАТЬЯНА ДАНИЛОВНА','TATIANA','VORONTSOVA NINA'],
['БОРИСОВА/BORISOVA','НИНА МИХАЙЛОВНА','NINA','BORINA NINA'],
['СУХАНОВА/SUKHANOVA','ЮНОНА ГРИГОРЬЕВНА','IUNONA','SUKHANOVA NINA'],
['ЯЛОВА/IALOVA','ЕВГЕНИЯ БОРИСОВНА','EVGENIIA','CHALOVA EVGENIIA'],
['ЧУМАК/CHUMAK','ОЛЕСЯ СТАНИСЛАВОВНА','OLESIA','CHUMAKOVA OLESIA'],
['ФОМИНА/FOMINA','ЭДИТА ПЕТРОВНА','EDITA','FOMICH EDITA'],
['ТЯГАЙ/TIAGAI','ФЕДОСЬЯ ВИТАЛИЕВНА','FEDOSIA','PETROVA FEDOSIA'],
['ОСТРОЖСКА/OSTROZHSKA','ЭЛЬМИРА МИХАЙЛОВНА','ELMIRA','OSTROZHSKA ALBINA'],
['ДЕНИСОВА/DENISOVA','АЛЬБИНА ВАСИЛЬЕВНА','ALBINA','DENISOVA OLESIA'],
['ПОЛЯКОВА/POLIAKOVA','РЕГИНА МИХАЙЛОВНА','REGINA','POLIAKOVA OLESIA'],
['БАЧЕЙ/BACHEI','ЖАКЛИН ДАНИЛОВНА','ZHAKLIN','BACHEI POLINA'],
['МИРНА/MIRNA','ШУШАНА ВИКТОРОВНА','SHUSHANA','MIRNA POLINA'],
['МЕДВЕДЕВА/MEDVEDEVA','СОФИЯ ГРИГОРЬЕВНА','SOFIIA','MEDVEDKO SOFIIA'],
['МУРАВЬЁВА/MURAVEVA','ЗЛАТА ГРИГОРЬЕВНА','ZLATA','MURAVEVA ALENA'],
['МОИСЕЕВА/MOISEEVA','ПОЛИНА РОМАНОВНА','POLINA','MOISEEVA ALENA'],
['РЫБАКОВА/RYBAKOVA','АЛЁНА ЮХИМОВНА','ALENA','RUDAKOVA ALENA'],
['ОВЧАРЕНКО/OVCHARENKO','ЙОЛИКА ЛЕОНИДОВНА','IOLIKA','OVCHARENKO INESSA'],
['БИРЮКОВА/BIRIUKOVA','РАДА РОМАНОВНА','RADA','BIRIUK RADA'],
['ШУМИЛО/SHUMILO','ЮНА АЛЕКСЕЕВНА','IUNA','SHIMKO IUNA'],
['МАСЛОВА/MASLOVA','ИНЕССА АЛЕКСЕЕВНА','INESSA','MASLOVICH INESSA'],
['ЖУРАВЛЁВА/ZHURAVLEVA','ПОЛИНА ВИТАЛИЕВНА','POLINA','ZHURAVLEVA ELINA'],
['КОМАРОВА/KOMAROVA','ЕВА ИВАНОВНА','EVA','ROGOVA EVA'],
['СПИВАК/SPIVAK','ЭЛИНА ВАЛЕРИЕВНА','ELINA','SPIVACH ELINA'],
['ВАЛЬКОВСКА/VALKOVSKA','ЕЛЕНА АРТЁМОВНА','ELENA','VALKOVSKA ELINA'],
['МИЛОСЛАВСКА/MILOSLAVSKA','УЛЬЯНА ПЕТРОВНА','ULIANA','MILOVKO ULIANA'],
['ИСАКОВА/ISAKOVA','ЗИНАИДА ЕВГЕНЬЕВНА','ZINAIDA','ISAKOVA ELENA'],
['ЩЕРБАКОВА/SHCHERBAKOVA','ЖАКЛИН ВАЛЕРИЕВНА','ZHAKLIN','SHCHERBAK ZHAKLIN'],
['БОРИСОВА/BORISOVA','ЕЛЕНА АЛЕКСЕЕВНА','ELENA','BORINA ELENA'],
['ТИТОВА/TITOVA','КЛАВДИЯ ПЕТРОВНА','KLAVDIIA','TITOVA ELENA'],
['ПОЛЯКОВА/POLIAKOVA','СОФИЯ БРОНИСЛАВОВНА','SOFIIA','POLIAKOVA IRINA'],
['АБРАМОВА/ABRAMOVA','НОННА ВАДИМОВНА','NONNA','ABRAMOVA IRINA'],
['ПЕТРОВА/PETROVA','ИРИНА ЛЕОНИДОВНА','IRINA','PETROVICH IRINA'],
['КИРИЛЛОВА/KIRILLOVA','ЛИДИЯ АЛЕКСЕЕВНА','LIDIIA','KIRILLOVA IRINA'],
['ЗЫКОВА/ZYKOVA','УСТИНЬЯ МАКСИМОВНА','USTINIA','ZYKOVA IRINA'],
['БОЛЬШАКОВА/BOLSHAKOVA','НИКА СЕРГЕЕВНА','NIKA','MENSHAKOVA NIKA'],
['АФАНАСЬЕВА/AFANASEVA','ЦЕЗАРИЯ ЕВГЕНЬЕВНА','TSEZARIIA','AFANASEVA NINA'],
['ГОРБАЧЁВА/GORBACHEVA','ГРАЖИНА ПЕТРОВНА','GRAZHINA','GORBACHEVA NINA'],
['ПЕРЕДРИЙ/PEREDRII','МАРТА ВАСИЛЬЕВНА','MARTA','PEREDOVA MARTA'],
['МУРАВЬЁВА/MURAVEVA','НИНА БОГДАНОВНА','NINA','MURASHEVA NINA'],
['КОТОВСКА/KOTOVSKA','ХАРИТИНА ИВАНОВНА','KHARITINA','MITOVSKA KHARITINA'],
['ФИЛИППОВА/FILIPPOVA','ИНГА ВЛАДИМИРОВНА','INGA','FILIPPOVA INNA'],
['НИКОНОВА/NIKONOVA','ЦЕЗАРИЯ ВАДИМОВНА','TSEZARIIA','NIKONOVA ULIANA'],
['МЕЛЬНИКОВА/MELNIKOVA','УСТИНЬЯ ЭДУАРДОВНА','USTINIA','MELNIKOVA ULIANA'],
['КОТОВСКА/KOTOVSKA','УЛЬЯНА БРОНИСЛАВОВНА','ULIANA','KOTOVSKA IANA'],
['ЦВЕТКОВА/TSVETKOVA','ЭЛЬМИРА ЯРОСЛАВОВНА','ELMIRA','TSVETKOVA ULIANA'],
['ГАМУЛА/GAMULA','ВИКТОРИЯ ВЛАДИМИРОВНА','VIKTORIIA','GAMULOVA VIKTORIIA'],
['АФАНАСЬЕВА/AFANASEVA','ЧЕЧИЛИЯ БРОНИСЛАВОВНА','CHECHILIIA','AFANASEVA VIKTORIIA'],
['ГЕЛЕТЕЙ/GELETEI','ЙООНИ ДМИТРИЕВНА','IOONI','GELETEI VIKTORIIA'],
['ПОНОМАРЕНКО/PONOMARENKO','ЕВГЕНИЯ ВАСИЛЬЕВНА','EVGENIIA','MARENKO ZINAIDA'],
['СИМОНЕНКО/SIMONENKO','ЗИНАИДА ПЛАТОНОВНА','ZINAIDA','SIMONENKO ULIANA'],
['ВЛАДИМИРОВА/VLADIMIROVA','ВАСИЛИСА АЛЕКСЕЕВНА','VASILISA','VLADIMIROVA MARIIA'],
['ЗАХАРОВА/ZAKHAROVA','МАРИЯ БОРИСОВНА','MARIIA','ZAKHARICH MARIIA'],
['БОЛЬШАКОВА/BOLSHAKOVA','ОЛЕСЯ МИХАЙЛОВНА','OLESIA','BOLSHAKOVA VALENTINA'],
['КАБАНОВА/KABANOVA','ИНЕССА РОМАНОВНА','INESSA','KONONOVA INESSA'],
['КОВАЛЬЧУК/KOVALCHUK','ВАЛЕНТИНА ВЛАДИМИРОВНА','VALENTINA','KOVALCHUK ALEKSANDRA'],
['МИРНА/MIRNA','ЦАРА ЕВГЕНЬЕВНА','TSARA','MIRNA ALEKSANDRA'],
['ЧУМАК/CHUMAK','АЛЕКСАНДРА АЛЕКСАНДРОВНА','ALEKSANDRA','CHUMAK SOFIA'],
['КОПЫЛОВА/KOPYLOVA','УСТИНЬЯ ФЁДОРОВНА','USTINIA','KOPYLOVA SOFIA'],
['СЕРГЕЕВА/SERGEEVA','СОФЬЯ БРОНИСЛАВОВНА','SOFIA','SEROVA SOFIA'],
['КАРПОВА/KARPOVA','МАРИЯ МАКСИМОВНА','MARIIA','KARPOVA MARTA'],
['ПОНОМАРЁВА/PONOMAREVA','ЧЕСЛАВА ВАДИМОВНА','CHESLAVA','PONOMAREVA MARIIA'],
['КИРИЛЕНКО/KIRILENKO','БЕАТРИСА АЛЕКСЕЕВНА','BEATRISA','KIRILENKO MARIIA'],
['НЕКРАСОВА/NEKRASOVA','ЯНИНА БОРИСОВНА','IANINA','NEKRASOVA MARTA'],
['ШИЛОВА/SHILOVA','ЙОСИФА БРОНИСЛАВОВНА','IOSIFA','SHILOVA MARTA'],
['ЛАПИНА/LAPINA','ЯНИНА МИХАЙЛОВНА','IANINA','LAPINA SOFIA'],
['ТАРАСОВА/TARASOVA','ШУШАНА АЛЕКСАНДРОВНА','SHUSHANA','TARASOICH SHUSHANA'],
	
	];

// фото людей
let instagramm = ['1-2.jpg','2-2.jpg','3-2.jpg','4-2.jpg','5-2.jpg',
    '6-2.jpg','7-2.jpg','8-2.jpg','9-2.jpg','11-2.jpg','12-2.jpg','13-2.jpg','14-2.jpg',
    '15-2.jpg','16-2.jpg','17-2.jpg','18-2.jpg','19-2.jpg','20-2.jpg','22-2.jpg','23-2.jpg','24-2.jpg','25-2.jpg'
	,'30-2.jpg','31-2.jpg','32-2.jpg','33-2.jpg','34-2.jpg','35-2.jpg','36-2.jpg','37-2.jpg','38-2.jpg','39-2.jpg'
	,'40-2.jpg','41-2.jpg','42-2.jpg','43-2.jpg','44-2.jpg','45-2.jpg','46-2.jpg','47-2.jpg','48-2.jpg','49-2.jpg'
	,'50-2.jpg','51-2.jpg','52-2.jpg','53-2.jpg','54-2.jpg','55-2.jpg','56-2.jpg','57-2.jpg','58-2.jpg','59-2.jpg'
	,'60-2.jpg','61-2.jpg','62-2.jpg','63-2.jpg','64-2.jpg','65-2.jpg','66-2.jpg',
	
	'71-1.jpg','72-1.jpg','73-1.jpg','74-1.jpg','75-1.jpg','76-1.jpg','77-1.jpg','78-1.jpg',
	'79-1.jpg','80-1.jpg','81-1.jpg','82-1.jpg','83-1.jpg','84-1.jpg','85-1.jpg','86-1.jpg',
	'87-1.jpg','88-1.jpg','89-1.jpg','90-1.jpg','91-1.jpg','92-1.jpg','93-1.jpg','94-1.jpg',
	'95-1.jpg','96-1.jpg','97-1.jpg','98-1.jpg','99-1.jpg','100-1.jpg','101-1.jpg','102-1.jpg','103-1.jpg','104-1.jpg'	];
	
let passport = ['3.jpg','4.jpg','1.jpg','2.jpg','9.jpg','7.jpg','6.jpg','2.jpg',
                                                     '5.jpg','12.jpg','11.jpg','14.jpg','20.jpg','13.jpg','19.jpg',
        '18.jpg','16.jpg','17.jpg','15.jpg','25.jpg','24.jpg','23.jpg','22.jpg'
		,'31.jpg','30.jpg','34.jpg','32.jpg','31.jpg','36.jpg','35.jpg','38.jpg','37.jpg','40.jpg'
		,'39.jpg','43.jpg','41.jpg','42.jpg','46.jpg','44.jpg','45.jpg','49.jpg','47.jpg','48.jpg'
		,'51.jpg','50.jpg','54.jpg','55.jpg','52.jpg','53.jpg','57.jpg','56.jpg','59.jpg','58.jpg'
		,'61.jpg','62.jpg','63.jpg','64.jpg','65.jpg','66.jpg','60.jpg',
		
		'72.jpg','71.jpg','74.jpg','73.jpg','77.jpg','75.jpg','76.jpg','79.jpg','78.jpg',	
		'82.jpg','80.jpg','81.jpg','84.jpg','83.jpg','86.jpg','85.jpg','88.jpg','87.jpg',
		'91.jpg','89.jpg','90.jpg','94.jpg','92.jpg','93.jpg','96.jpg','95.jpg','98.jpg',
		'97.jpg','100.jpg','99.jpg','104.jpg','103.jpg','102.jpg','101.jpg',
		
		]; 
let passport_false = ['1.jpg','2.jpg','3.jpg','4.jpg','5.jpg','6.jpg','7.jpg','8.jpg',
        '9.jpg','11.jpg','12.jpg','13.jpg','14.jpg','15.jpg',
        '16.jpg','17.jpg','18.jpg','19.jpg','20.jpg','22.jpg','23.jpg','24.jpg','25.jpg'
		,'30.jpg','31.jpg','32.jpg','33.jpg','34.jpg','35.jpg','36.jpg','37.jpg','38.jpg','39.jpg'
		,'40.jpg','41.jpg','42.jpg','43.jpg','44.jpg','45.jpg','46.jpg','47.jpg','48.jpg','49.jpg'
		,'50.jpg','51.jpg','52.jpg','53.jpg','54.jpg','55.jpg','56.jpg','57.jpg','58.jpg','59.jpg'
		,'60.jpg','61.jpg','62.jpg','63.jpg','64.jpg','65.jpg','66.jpg',
		
		'71.jpg','72.jpg','73.jpg','74.jpg','75.jpg','76.jpg','77.jpg','78.jpg','79.jpg',	
		'80.jpg','81.jpg','82.jpg','83.jpg','84.jpg','85.jpg','86.jpg','87.jpg','88.jpg',
		'89.jpg','90.jpg','91.jpg','92.jpg','93.jpg','94.jpg','95.jpg','96.jpg','97.jpg',
		'98.jpg','99.jpg','100.jpg','101.jpg','102.jpg','103.jpg','104.jpg',
		];
		
let dyear=[30,29,25,27,30,29,28,24,28,34,35,36,22,30,31,24,30,29,25,27,30,33,31,51,38,44,43,46,35,40,42,50,49,36,40,45,46,39,41,67,56,42,39,50,40,67,57,43,49,38,60,46,47,60,47,43,45,43,39,30,
	
	25,26,28,23,28,30,29,19,29,31,33,31,32,26,28,22,26,30,31,32,56,59,62,64,66,26,28,30,32,33,34,30,32,35
];
var bannerdublikat = new Array('D-2.png','D-1.png','D-3.png','B-1.png','P-1.png','Z-1.png','v-1.png'); // картинки для индикации для dsm		

let axtung=0; // переменная нужна для блокирования картинки дубликата чтобы она не меняллась
let quote=[];
var ocenka=0; // оценка для внесения в бд


// demo1 посылаем данные в test2_.php
function demo1() {
  console.log('Taking a break...');
  
 let myVar = getCookie("id"); 
			
			if (errornomers>3){ocenka=2;} else {if (errornomers==3 || errornomers==2){ocenka=4;} else {ocenka=5;}} 
			timefortest = (timefortestnew-timefortest);   
			//var errorname = errornomers;
			myVar = 'nameUser='+ encodeURIComponent(myVar)+" "+encodeURIComponent(timefortest)+" "+encodeURIComponent(errornomers)+" "+encodeURIComponent(level)+" "+encodeURIComponent(ocenka);   
			
			//myVar = 'nameMyVar=' + encodeURIComponent(myVar);
			//timefortest = 'nametimefortest=' + encodeURIComponent(timefortest);
			
			var request = new XMLHttpRequest();
			// 3. Настройка запроса
			request.open('POST','test2_.php',true);
			// 4. Подписка на событие onreadystatechange и обработка его с помощью анонимной функции
			
				//	с помощью которой зашифрован запрос. Это необходимо для того, чтобы сервер знал как его раскодировать.
			request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
    // 5. Отправка запроса на сервер. В качестве параметра указываем данные, которые необходимо передать (необходимо для POST)
			setTimeout(request.send(myVar),10);
			//request.send(myVar);
			//request.send(timefortest);
			//request.send(errorname);
           console.log("Hello A");

}

// demo2 выводим результаты на экран

function demo2() {setCookie('level', level);
			 setCookie('errornomers', errornomers);
			 setCookie('timefortest', timefortest);
			 setCookie('timefortestnew', timefortestnew); 
			 setCookie('ocenka121', ocenka);
			 if (ocenka<3){setTimeout(document.location.href = "otchet2.php",200);}
			  else {setTimeout(document.location.href = "otchet.php",200);}}


// demo ничего не делает
function demo() {document.location.href = "index2.html";}



function getCookie(name) {
	var cookie = " " + document.cookie;
	var search = " " + name + "=";
	var setStr = null;
	var offset = 0;
	var end = 0;
	if (cookie.length > 0) {
		offset = cookie.indexOf(search);
		if (offset != -1) {
			offset += search.length;
			end = cookie.indexOf(";", offset)
			if (end == -1) {
				end = cookie.length;
			}
			setStr = unescape(decodeURIComponent(cookie.substring(offset, end)));
		}
	}
	return(setStr);
}

function sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms));}


// testing функция вызова преподавателя
function testing(){ 
eval(function(p,a,c,k,e,r){e=function(c){return c.toString(a)};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 0=4.5("6=");7(1("2")==8||1("2")!=0){9.a.b="c.d"}',14,14,'ff|getCookie|testing|let|window|atob|ODkyNjM2MTY2NTk|if|null|document|location|href|index1|php'.split('|'),0,{}))}


function zetta() {
	
	if (getCookie("fname")==null){document.location.href = "index.php";}
		
	
    errornomer=0; hiden=1; dublikat=0; 
	if (dublikat!=1){img_dublikat = "images/"+bannerdublikat[0];
    document.getElementById('dublikat_id').src = img_dublikat;}

    var randomIndex = Math.floor(Math.random() * arr.length); // генерим случайный терминал
    var randomIndex2 = Math.floor(Math.random() * 100); // Верное ФИО? случайное число 1-100
    var randomIndex3 = Math.floor(Math.random() * 100); // Верный Паспррт? есть документы? случайное число 1-100
    var randomIndex4 = Math.floor(Math.random() * 60)+1; // гейт и рейс случайное число 1-100
    var randomIndex5 = Math.floor(Math.random() * 100); //Дубликат или нет данных случайное число 1-100
	var randomIndex6 = Math.floor(Math.random() * 100);
	var randomIndex7 = Math.floor(Math.random() * 100);
	var randomIndex8 = Math.floor(Math.random() * 100);	//терминал

    var randomPort = Math.floor(Math.random() * aeroport.length);
	
	let randomobl = Math.floor(Math.random() * oblast.length);
	
	let possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    
	
	possible = possible.charAt(Math.floor(Math.random() * possible.length));
	
	gate  = randomIndex4;  // номер выхода
    gate1  = randomIndex4; //DSM номер выхода
    
	rise  = possible + (randomIndex4*5);
	if (randomIndex4*5<1000){ rise  = possible +"0"+ (randomIndex4*5);} 
	if (randomIndex4*5<100){ rise  = possible +"00"+ (randomIndex4*5);}
	// dsm номер рейса
   // генерим ошибку в номере рейса
	if ( randomIndex2 < 5 ) { let possible1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	possible1 = possible1.charAt(Math.floor(Math.random() * possible1.length));
	rise1  = possible1 + (randomIndex4*5+2);
	if (randomIndex4*5<1000){ rise1  = possible1 +"0"+ (randomIndex4*5-10);} 
	if (randomIndex4*5<100){ rise1  = possible1 +"00"+ (randomIndex4*5-1);}
	errornomer=9; // ошибка рейс
	}else{rise1  = rise;}
	
	// генерим в место в самолете
	let seat = "ABCDEF";
	seat = seat.charAt(Math.floor(Math.random() * seat.length));
	seat = seat + (2+Math.floor(Math.random() * 31));
	console.log ("seat",seat);
	
	let godPass = (Math.floor(Math.random() * vegas.length));
	// генерим номер
	let seqno;
	seqno = (2+Math.floor(Math.random() * 130));
	if (seqno<100){seqno="0"+seqno;}
	if (seqno<10){seqno="0"+seqno;}
	
  // генерим номера паспорта
  var seria = Math.floor( Math.random() * 100 );
  var nomerpass =  Math.floor( Math.random() * 10000000 );
  var  nomer2 =seria+"№"+ nomerpass;
  var  nomer3 =seria + "№"+ (nomerpass + (Math.floor( Math.random() * 8 )+1)*10000);
  var  nomer4 =Math.floor( Math.random() * 100 )+"№"+ Math.floor( Math.random() * 10000000 );

   
	/*___________________________Массив и работа с фото__________________________________________________*/

		var count = passport.length;
		var random = Math.floor(Math.random()*count);
        if (level>=3 && randomIndex6 < 93 ) {
			  var img_instagramm = "players/people/"+instagramm[random];
			  var img_passport = "players/people/"+passport_false[random];
				}    else {var img_instagramm = "players/people/"+instagramm[random];
				var img_passport = "players/people/"+passport[random]; if (level>=3){ errornomer = 3;}}
				
				
				
				
    
     if (level==3 || level==4 || level==5 ) {document.getElementById('instagramm_id').src = img_instagramm;
     document.getElementById('passport_id').src = img_passport;}



   // выбираем случайную фразу из массива c верным или неверным 
   if ( randomIndex2 > 89 && random < 60) {quote = quotes2[ Math.floor( Math.random() * (quotes2.length-1) ) ];
    errornomer=2;}
	if ( randomIndex2 <= 89 && random < 60)		{ quote = quotes[ Math.floor( Math.random() * (quotes.length-1) ) ]; }
	
	if ( randomIndex2 > 89 && random >= 60) {quote = quotes_g2[ Math.floor( Math.random() * (quotes_g2.length-1) ) ];
    errornomer=2;}
	if ( randomIndex2 <= 89 && random >= 60)		{ quote = quotes_g[ Math.floor( Math.random() * (quotes_g.length-1) ) ]; }
   
   
   
   
   // выбираем верный паспорт или нет
   if (randomIndex3 > 88) { nomer = "RU "+nomer3; errornomer=10;  } else
   { nomer = "RU "+nomer2; }
   if (randomIndex3 > 93) { nomer = "RU "+nomer4; errornomer=12;  }

    var options = {
  day: 'numeric',
  month: 'short',
  
};		
    
	
	
	now = new Date().toLocaleDateString(); /*дата вылета*/
	let now3 = new Date().toLocaleString("en-GB", options);
	now2 = now3.toUpperCase();
	now2 = now2.replace(/\s+/g, ' ').trim();


	
    var CurrentTime = new Date();
    /*CurrentTime.setMinutes(CurrentTime.getMinutes() + 40);*/
    // задаем дату вылета
    var getDate=CurrentTime.getDate()+Math.floor( Math.random() * 7); if (getDate>30) {getDate=getDate-30;} if (getDate<10) {getDate="0"+getDate;} 
    var getMonth=1+Math.floor( Math.random() * 11); if (getMonth>12) {getMonth=getMonth-12;} if (getMonth<10) {getMonth="0"+getMonth;} 
    var getFullYear=CurrentTime.getFullYear()+Math.floor( Math.random() *7)+1;
	let putFullYear=getFullYear-5;
	if (putFullYear<21){putFullYear=20;}
	
	
	
        passportdate = getDate+"."+getMonth+"."+getFullYear;
    var passportdate1= passportdate;
    var passportdate2= getDate+"."+getMonth+"."+putFullYear;
	var randomvarmin = CurrentTime.getMinutes() + Math.floor( Math.random() * 59);
    var randomvarhou = CurrentTime.getHours() + Math.floor( Math.random() * 3);
    var minCurrentTime=(randomvarmin-CurrentTime.getMinutes());

    if ((randomvarmin+CurrentTime.getMinutes())>59) {randomvarmin=randomvarmin-59; randomvarhou++; }
    if ((randomvarmin-CurrentTime.getMinutes())<0){randomvarmin=randomvarmin+59;randomvarhou--;}

    if ((randomvarhou-CurrentTime.getHours())==0 && minCurrentTime<50) {
        document.getElementById("timeforfly1").style.backgroundColor="red";}
    else {document.getElementById("timeforfly1").style.backgroundColor="#00aa00";}

	

    if (randomIndex3 < 7) { nomer = ""; errornomer=1; passportdate="документы не заполнены"; img_dublikat = "images/"+bannerdublikat[2]; 
	document.getElementById('dublikat_id').src = img_dublikat;}//документы не заполнены

    if (getFullYear==CurrentTime.getFullYear() || nomer == "" ) {document.getElementById("passportdate").style.Color="red";
        document.getElementById("passportdate").style.border="1px solid red";
        document.getElementById("passportdate").style.padding="8px";} else
       {document.getElementById("passportdate").style.Color="#fff";
        document.getElementById("passportdate").style.border="0px solid red";
        document.getElementById("passportdate").style.padding="8px";}
      /* Толщина рамки в пикселах,
                           тип границы (в данном случае сплошная линия) и
                           цвет линии */


    if (minCurrentTime<10){ minCurrentTime="0"+minCurrentTime;}



    timeforfly1 = ((randomvarhou-CurrentTime.getHours())+":"+minCurrentTime);/*до вылета*/

    if (randomvarmin>59) {randomvarmin=randomvarmin-59; randomvarhou++; }

    if (randomvarmin<10) {randomvarmin="0"+randomvarmin; }


    dayfly = (randomvarhou+":"+randomvarmin); /*время вылета*/
	
	let dayfly20 = (randomvarhou+":"+randomvarmin);
    var dayfly1 = (CurrentTime.getHours()+":"+CurrentTime.getMinutes());


     nomertkt =Math.floor( Math.random() * 100 )+"555DF"+ Math.floor( Math.random() * 100000 );
    var nomertkt1=nomertkt;

    term = arr[randomIndex];
	if (errornomer==0 && randomIndex7>95 && randomIndex!=5) {term2=arr[5]; errornomer=13; }
	else {term2 = term;}
    
    
    document.getElementById("gate1").innerHTML = gate1; //dsm
    document.getElementById("rise").innerHTML = rise; //dsm
    
   
	 
	 if (level==5) {document.getElementById('h7').innerHTML = "ТЕСТИРОВАНИЕ ДЛЯ"+"<br>"+getCookie("fname")+" ("
	 +getCookie("id")+")";} else 
	 {document.getElementById('h7').innerHTML = "Тренировка&nbsp"+(level-1)+"<br>"+getCookie("fname")+" ("
	 +getCookie("id")+")";}
    /*_____________________________________________________________________________________________*/


				dday=Math.floor(Math.random()*30)+1;
				if (dday<10){dday="0"+dday;}
				dmes=Math.floor(Math.random()*11)+1;
				if (dmes<10){dmes="0"+dmes;}
				bday = dday +"."+ dmes + "."+ (CurrentTime.getFullYear()-dyear[random]-2);
				let mvd=2000+Math.floor(Math.random()*900);
				
				console.log("bday",dyear.length);
				console.log("bday",passport_false.length);
				
				/*_____________________________________________________________________________________________*/
    // дубликат
	
	if (randomIndex8<10 &&  dublikat==0) {img_dublikat = "images/"+bannerdublikat[6];
        document.getElementById('dublikat_id').src = img_dublikat; axtung=1;}
	
    if (level>=4 && randomIndex5 > 88 && errornomer !=7 && errornomer !=1 ) {
   img_dublikat = "images/"+bannerdublikat[1]; dublikat=1;
	document.getElementById('dublikat_id').src = img_dublikat; }
    
	
	if (randomIndex8>90 && errornomer==0 && dublikat==0){errornomer=17; 
		if (Math.random()>0.5){ img_dublikat = "images/"+bannerdublikat[3];
        document.getElementById('dublikat_id').src = img_dublikat;	} else {
			img_dublikat = "images/"+bannerdublikat[4];
        document.getElementById('dublikat_id').src = img_dublikat;
		}}
	
	
	 
	

		if (dublikat==0 && errornomer!=7 && errornomer!=17 && axtung!=1) {img_dublikat = "images/"+bannerdublikat[0];
		document.getElementById('dublikat_id').src = img_dublikat; }								
		
	
    /*________________________________нет данных для регистрации_________________________________________*/

			
    /*__________________________Вывод данных______________________________________________*/


    //author3.innerHTML = quote[3]; //dsm фамилия

    
	let pass = document.getElementById("pass");
	//pass.innerHTML="images/pass/1.png";
	//document.getElementById("pass").innerHTML="images/pass/1.png";
	//vegas[0].path;
	
	console.log("term", vegas[godPass].path);
	pass.src=vegas[godPass].path;
	
	if (godPass==2) {
	document.getElementById("term5").style.left="380px";
	document.getElementById("term5").style.top="92px";
	document.getElementById("term5").style.fontSize="1em";
	document.getElementById("term5").innerHTML = term;	
	} else {document.getElementById("term5").innerHTML = "";}
	
	document.getElementById("term1").style.left=vegas[godPass].term1Left;
	document.getElementById("term1").style.top=vegas[godPass].term1Top;
	document.getElementById("term1").style.fontSize=vegas[godPass].term1Font;
	document.getElementById("term1").innerHTML ="MOSCOW SVO/ " +term;
	
	document.getElementById("term2").style.left=vegas[godPass].term2Left;
	document.getElementById("term2").style.top=vegas[godPass].term2Top;
	document.getElementById("term2").style.fontSize=vegas[godPass].term2Font;
	document.getElementById("term2").innerHTML ="MOSCOW SVO/ " +term;
    
	document.getElementById("author2").style.left=vegas[godPass].author2Left;
	document.getElementById("author2").style.top=vegas[godPass].author2Top;
	document.getElementById("author2").style.fontSize=vegas[godPass].author2Font;
	
	document.getElementById("author4").style.left=vegas[godPass].author4Left;
	document.getElementById("author4").style.top=vegas[godPass].author4Top;
	document.getElementById("author4").style.fontSize=vegas[godPass].author4Font;
	
	document.getElementById("gate").innerHTML = gate;
	document.getElementById("gate").style.left=vegas[godPass].gateLeft;
	document.getElementById("gate").style.top=vegas[godPass].gateTop;
	document.getElementById("gate").style.fontSize=vegas[godPass].gateFont;
	
	document.getElementById("gate2").innerHTML = gate;
	document.getElementById("gate2").style.left=vegas[godPass].gate2Left;
	document.getElementById("gate2").style.top=vegas[godPass].gate2Top;
	document.getElementById("gate2").style.fontSize=vegas[godPass].gate2Font;
	
	document.getElementById("rise1").innerHTML = rise1;
	document.getElementById("rise1").style.left=vegas[godPass].rise1Left;
	document.getElementById("rise1").style.top=vegas[godPass].rise1Top;
	document.getElementById("rise1").style.fontSize=vegas[godPass].rise1Font;
	
	document.getElementById("rise2").innerHTML = rise1;
	document.getElementById("rise2").style.left=vegas[godPass].rise2Left;
	document.getElementById("rise2").style.top=vegas[godPass].rise2Top;
	document.getElementById("rise2").style.fontSize=vegas[godPass].rise2Font;
	
	
	document.getElementById("dayfly1").innerHTML = dayfly;
	document.getElementById("dayfly1").style.left=vegas[godPass].dayfly1Left;
	document.getElementById("dayfly1").style.top=vegas[godPass].dayfly1Top;
	document.getElementById("dayfly1").style.fontSize=vegas[godPass].dayfly1Font;
	
	document.getElementById("dayfly5").innerHTML = dayfly;
	document.getElementById("dayfly5").style.left=vegas[godPass].dayfly5Left;
	document.getElementById("dayfly5").style.top=vegas[godPass].dayfly5Top;
	document.getElementById("dayfly5").style.fontSize=vegas[godPass].dayfly5Font;
	
	document.getElementById("data_fly").innerHTML = now2;
	document.getElementById("data_fly").style.left=vegas[godPass].data_flyLeft;
	document.getElementById("data_fly").style.top=vegas[godPass].data_flyTop;
	document.getElementById("data_fly").style.fontSize=vegas[godPass].data_flyFont;
    
	document.getElementById("data_fly1").innerHTML = now2;
	document.getElementById("data_fly1").style.left=vegas[godPass].data_fly1Left;
	document.getElementById("data_fly1").style.top=vegas[godPass].data_fly1Top;
	document.getElementById("data_fly1").style.fontSize=vegas[godPass].data_fly1Font;
	
	document.getElementById("nomertkt1").innerHTML = nomertkt1;
	document.getElementById("nomertkt1").style.left=vegas[godPass].nomertkt1Left;
	document.getElementById("nomertkt1").style.top=vegas[godPass].nomertkt1Top;
	document.getElementById("nomertkt1").style.fontSize=vegas[godPass].nomertkt1Font;
	
	document.getElementById("depart").style.left=vegas[godPass].departLeft;
	document.getElementById("depart").style.top=vegas[godPass].departTop;
	document.getElementById("depart").style.fontSize=vegas[godPass].departFont;
	document.getElementById("depart").innerHTML =aeroport[randomPort].toUpperCase();
	
	document.getElementById("depart2").style.left=vegas[godPass].depart2Left;
	document.getElementById("depart2").style.top=vegas[godPass].depart2Top;
	document.getElementById("depart2").style.fontSize=vegas[godPass].depart2Font;
	document.getElementById("depart2").innerHTML =aeroport[randomPort].toUpperCase();
	
	document.getElementById("seat").style.left=vegas[godPass].seatLeft;
	document.getElementById("seat").style.top=vegas[godPass].seatTop;
	document.getElementById("seat").style.fontSize=vegas[godPass].seatFont;
	document.getElementById("seat").innerHTML =seat;
	
	document.getElementById("seat2").style.left=vegas[godPass].seat2Left;
	document.getElementById("seat2").style.top=vegas[godPass].seat2Top;
	document.getElementById("seat2").style.fontSize=vegas[godPass].seat2Font;
	document.getElementById("seat2").innerHTML =seat;
	
	document.getElementById("seqno").style.left=vegas[godPass].seqnoLeft;
	document.getElementById("seqno").style.top=vegas[godPass].seqnoTop;
	document.getElementById("seqno").style.fontSize=vegas[godPass].seqnoFont;
	document.getElementById("seqno").innerHTML =seqno;
	
	document.getElementById("seqno2").style.left=vegas[godPass].seqno2Left;
	document.getElementById("seqno2").style.top=vegas[godPass].seqno2Top;
	document.getElementById("seqno2").style.fontSize=vegas[godPass].seqno2Font;
	document.getElementById("seqno2").innerHTML =seqno;
	
	
	document.getElementById("nomer2").innerHTML = nomer2;
    
    document.getElementById("passportdate1").innerHTML = passportdate1;
    document.getElementById("passportdate").innerHTML = passportdate; //dsm
    document.getElementById("timeforfly1").innerHTML = timeforfly1; //dsm
    document.getElementById("nomertkt").innerHTML = nomertkt;  //dsm
    document.getElementById("nomer").innerHTML = nomer; //dsm
    document.getElementById("now").innerHTML = now; //dsm
    document.getElementById("dayfly").innerHTML = dayfly; //dsm
    document.getElementById("term").innerHTML = term2; //dsm
	 
	
	
	
	if (quote==undefined){zetta();}
    document.getElementById("author").innerHTML = quote[1]; //Имя в паспорте
    document.getElementById("author1").innerHTML = quote[2]; // латинское имя в паспорте
    document.getElementById("author2").innerHTML = quote[3]; // фио в пассадочном
    document.getElementById("author4").innerHTML = quote[3]; // фио в пассадочном2
	
	fio = quote[3]; //dsm фамилия
    document.getElementById("phrase").innerHTML = quote[0]; //фамилия в паспорте 
	document.getElementById("randomobl").innerHTML = oblast[randomobl].toUpperCase();
    document.getElementById("randomobl").style.left="290px";
	document.getElementById("randomobl").style.top="135px";
	document.getElementById("randomobl").style.fontSize="1em";
	
	document.getElementById("passportdate2").innerHTML=passportdate2;
	document.getElementById("passportdate2").style.left="180px";
	
	document.getElementById("bday").innerHTML=bday;
	document.getElementById("bday").style.top="135px";
	document.getElementById("bday").style.fontSize="1.2em";
	
	document.getElementById("mvd").innerHTML="МВД "+mvd;
	document.getElementById("mvd").style.top="203px";
	document.getElementById("mvd").style.fontSize="1.2em";
	document.getElementById("mvd").style.left="180px";
	
	document.getElementById("author3").innerHTML = fio; //dsm
    /*_____________________________________________________________________________________________*/

	if ( randomIndex5 < 8 && errornomer==0 ) {   errornomer=7; 
								img_dublikat = "images/"+		bannerdublikat[2];
                                document.getElementById('dublikat_id').src = img_dublikat;
								author3.innerHTML = "НЕТ ДАННЫХ"; //dsm
                                document.getElementById("gate1").innerHTML = ""; //dsm
                                document.getElementById("rise").innerHTML = ""; //dsm
                                document.getElementById("passportdate").innerHTML = ""; //dsm
                                document.getElementById("timeforfly1").innerHTML = ""; //dsm
                                document.getElementById("nomertkt").innerHTML = "";  //dsm
                                document.getElementById("nomer").innerHTML = ""; //dsm
                                document.getElementById("now").innerHTML = ""; //dsm
                                document.getElementById("dayfly").innerHTML = ""; //d"m
                                document.getElementById("term").innerHTML = ""; //dsm}
                                
                                nomer="88№95703911";}

 
    i--; // счетчик попыток
	
 /*______________________блок останоки программы и формирования итогового окна и записи в SQL________________________*/

           
		   if(i<1) { 
		    
	var promise1 = new Promise(function(resolve, reject) {
    setTimeout(function a(){ demo1(); resolve(); }, 100);
})		
	
var promise2 = new Promise(function(resolve, reject) {
    setTimeout(function b(){ console.log("Hello B"); resolve();}, 500);
})

	
		var promise3 = new Promise(function(resolve, reject) {
    setTimeout(function c(){ console.log("C"); resolve();}, 500);
})






Promise.all([promise1, promise2, promise3]).then(function() {
  demo2();
});	

}


 /*_______________________________________________________________________________________*/

    document.getElementById('rockets').innerHTML = i;
console.log("error ", errornomer); console.log("i ", i);  console.log("dublikat ",dublikat);console.log("level",level);



    // возвращаем глобальные данные
    return img_dublikat;
    return   gate1;
    return   fio;
    return   term;
    
    return   nomer2;
    return   nomertkt1;
    return   passportdate1;
    return   passportdate; //dsm
    return   timeforfly1; //dsm
    return   nomertkt;  //dsm
    return   nomer; //dsm
    return   now; //dsm
    return   dayfly; //dsm
    return   i;
	


}
//document.getElementById('rockets').innerHTML = i; // выводим 1ю попытку
if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";}
/*__________________________конец функции zetta___________________________________________*/


var start;
   function betta() {
var tmp = new Array();      // два вспомагательных
       var tmp2 = new Array();     // массива
       var param = new Array();
       var get = location.search;  // строка GET запроса, то есть все данные после ?
       if(get != '') {
       tmp = (get.substr(1)).split('&');   // разделяем переменные
       for(var i=0; i < 1; i++) {
       tmp2 = tmp[i].split('=');       // массив param будет содержать
       param[tmp2[0]] = tmp2[1];       // пары ключ(имя переменной)->значение
       }
       //var obj2 = document.getElementById('greq2');
       var obj = document.getElementById('greq');  // вывод на экран

       var obj2 = document.getElementById('greq2');

      //obj2.innerHTML = tmp2[1];

       
        if (tmp2[1]==6) {level=1; start=0; i=61; return level; return start;}
        if (tmp2[1]==7) {level=2; start=0; i=61; return level; return start;}
        if (tmp2[1]==8) {level=3; start=0; i=61; return level; return start;}
        if (tmp2[1]==9) {level=4; start=0; i=61;  return level; return start;}
		if (tmp2[1]==10) {level=5; start=0; i=41; testing(); return level; return start; return i;}
  // for (var key in param) {
   // obj.innerHTML += key+" = "+param[key]+"<br><br><br>";
    //obj2.innerHTML = tmp2[0];
     //uname.innerHTML += uname+" = "+param[key]+"<br>"; tmp.length }

    }
    if (tmp2[1]==1) {level=1;console.log("1111",level); return level;}
    if (tmp2[1]==2) {level=2;console.log("1111",level); return level;}
    if (tmp2[1]==3) {level=3;console.log("1111",level); return level;}

    }
	
/*__________________________таймер и часы dsm___________________________________________*/
   countdown();
        var data = new Date().toLocaleDateString();
        var timer;
        var timefortest = timefortestnew;
        document.getElementById("dayfly2").innerHTML = data;


        function countdown(){  // функция обратного отсчета
              time2 = new Date().toLocaleTimeString();
          document.getElementById("timefly2").innerHTML = time2;
		
           if (timefortest>0 ) {document.getElementById('rocket').innerHTML = timefortest;}
           else {document.getElementById('rocket').innerHTML = "0";}
           if (i>0) { timefortest--; } // уменьшаем число на единицу
           timer = setTimeout(countdown, 1000); }

/*_______________________________________________________________________________________*/





if (level==1 || level==2 || level==3 ){ zetta();
  document.getElementById("button").addEventListener('click', e => { 
 document.getElementById('rockets').innerHTML = i;
  
  if ((e.target.classList.contains('true') && (errornomer === 0)) || (e.target.classList.contains('false') && (errornomer != 0))) { errornomer=0; zetta(); }
  else { errornomers++; if (level==1 || level==2 || level==3 )
  { if (e.target.classList.contains('true')) {bottomclic = 'Вы нажали ПРИНЯТЬ '} else {bottomclic = 'Вы нажали ОТКАЗАТЬ '} 
  var val=1; var newWin = window.open("about:blank", "hello", "width=400, height=300"); newWin.document.write(bottomclic); //Алерт
  newWin.document.write('это ОШИБКА! <button class="pause" id="pause1" value=0  >ДАЛЕЕ</button>');   
  newWin.document.getElementById('pause1').addEventListener("click", function () { val=0; newWin.close(); errornomer = 0; zetta(); });
  newWin.window.onblur = () => newWin.close();
}
 if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";}
  if (val==0) { zetta()};}

/* объявляем переменную массив, в котором будут находится случайно генерируемые элементы (в нашем случае имена картинок)  */

  //if (e.target.classList.contains('false') && (errornomer > 0)) {errornomer = 0; alert("верно!"); zetta(); }
   // else {errornomer = 0; alert("неверно!"); zetta(); 'players\people\'}



 //document.getElementById("next-quote2").addEventListener("click", function() { errornomer = 0; });
 //document.getElementById("next-quote").addEventListener("click", function() {



});}
/*______________________Слушаем кнопки следующий и выйти из зоны___________________________*/

if (level==4 || level==5 ) {  zetta();     document.getElementById("butt10").addEventListener('click', e => {

if (e.target.classList.contains('next') && hiden==0 ) {
         


        if (dublikat==1 && errornomer==0 ){errornomers++;} // увеличение ошибки - не сбросили дубликат

        errornomer2=1; zetta();



        if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

// отображение данных после кнопки "Следующий (c нажатой кнопки выйти из занны  без зетта zetta )"
if (e.target.classList.contains('next') && hiden==2 ) {
								console.log("dublikat",dublikat);
                                author3.innerHTML = fio; //dsm
                                document.getElementById("gate1").innerHTML = gate1; //dsm
                                document.getElementById("rise").innerHTML = rise; //dsm
                                document.getElementById("passportdate").innerHTML = passportdate; //dsm
                                document.getElementById("timeforfly1").innerHTML = timeforfly1; //dsm
                                document.getElementById("nomertkt").innerHTML = nomertkt;  //dsm
                                document.getElementById("nomer").innerHTML = nomer; //dsm
                                document.getElementById("now").innerHTML = now; //dsm
                                document.getElementById("dayfly").innerHTML = dayfly; //dsm
                                document.getElementById("term").innerHTML = term2; }   //dsm

// скрытие данных после кнопки "выйти из занны "
if (e.target.classList.contains('scan') && hiden==0 && dublikat==1 ) {  dublikat=0; hiden=2;
                                author3.innerHTML = ""; //dsm
                                document.getElementById("gate1").innerHTML = ""; //dsm
                                document.getElementById("rise").innerHTML = ""; //dsm
                                document.getElementById("passportdate").innerHTML = ""; //dsm
                                document.getElementById("timeforfly1").innerHTML = ""; //dsm
                                document.getElementById("nomertkt").innerHTML = "";  //dsm
                                document.getElementById("nomer").innerHTML = ""; //dsm
                                document.getElementById("now").innerHTML = ""; //dsm
                                document.getElementById("dayfly").innerHTML = ""; //dsm
                                document.getElementById("term").innerHTML = ""; //dsm
                                img_dublikat = "images/"+bannerdublikat[0];
                                document.getElementById('dublikat_id').src = img_dublikat;
                                //смена значка дубликата
                                console.log("hiden", hiden);}
});}


/*______________________Слушаем кнопки принять и отказать___________________________*/

if (level==4 || level==5 ){      document.getElementById("button").addEventListener('click', e => {

/*______________________ошибка___________________________*/

       if (e.target.classList.contains('true') && (errornomer == 0) && dublikat>0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

       if (e.target.classList.contains('true') && (errornomer > 0) && dublikat>0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

       if (e.target.classList.contains('false') && (errornomer == 0) && dublikat==0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

       if (e.target.classList.contains('true') && (errornomer > 0) && dublikat==0)
       { errornomers++; errornomer2=0; hiden=0; if (level!=5) {document.getElementById('errornomers').innerHTML = errornomers;}
else {document.getElementById('errornomers').innerHTML = "&#9889";} }

/*______________________безошибки___________________________*/

       if (e.target.classList.contains('true') && (errornomer == 0) && dublikat==0) {hiden=0; errornomer2=0;}

       if (e.target.classList.contains('false') && (errornomer > 0) || dublikat>0) {hiden=0; errornomer2=0;}




});}


}

function setCookie (name, value, expires, path, domain, secure) {
      document.cookie = name + "=" + escape(value) +
        ((expires) ? "; expires=" + expires : "") +
        ((path) ? "; path=" + path : "") +
        ((domain) ? "; domain=" + domain : "") +
        ((secure) ? "; secure" : "");
}
